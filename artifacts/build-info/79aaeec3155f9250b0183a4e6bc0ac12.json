{"id":"79aaeec3155f9250b0183a4e6bc0ac12","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        require(cap_ > 0, \"ERC20Capped: cap is 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_mint}.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\");\n        super._mint(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../security/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract unpausable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/gCOTI.sol":{"content":"pragma solidity ^0.8.19;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Capped} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract gCOTI is ERC20, ERC20Capped, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit {\n    constructor(address initialOwner, address recipient, uint256 totalSupply)\n        ERC20(\"COTI Treasury Governance Token\", \"gCOTI\")\n        ERC20Capped(totalSupply)\n        Ownable()\n        ERC20Permit(\"gCOTI\")\n    {\n        _mint(recipient, totalSupply);\n        _transferOwnership(initialOwner);\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Pausable) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal override(ERC20, ERC20Capped) {\n        super._mint(account, amount);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/gCOTI.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/gCOTI.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1319],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1320,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1319,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1319],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[137]},"id":138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":137,"linearizedBaseContracts":[137],"name":"IERC5267","nameLocation":"142:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"157:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":117,"name":"EIP712DomainChanged","nameLocation":"252:19:1","nodeType":"EventDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"271:2:1"},"src":"246:28:1"},{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"280:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":136,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"446:2:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"fields","nameLocation":"516:6:1","nodeType":"VariableDeclaration","scope":136,"src":"509:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":120,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"name","nameLocation":"550:4:1","nodeType":"VariableDeclaration","scope":136,"src":"536:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":122,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"version","nameLocation":"582:7:1","nodeType":"VariableDeclaration","scope":136,"src":"568:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":124,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"chainId","nameLocation":"611:7:1","nodeType":"VariableDeclaration","scope":136,"src":"603:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:1","nodeType":"VariableDeclaration","scope":136,"src":"632:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"salt","nameLocation":"679:4:1","nodeType":"VariableDeclaration","scope":136,"src":"671:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"extensions","nameLocation":"714:10:1","nodeType":"VariableDeclaration","scope":136,"src":"697:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":133,"nodeType":"ArrayTypeName","src":"697:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:1"},"scope":137,"src":"425:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":138,"src":"132:605:1","usedErrors":[]}],"src":"107:631:1"},"id":1},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[1319],"Pausable":[245]},"id":246,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":139,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":246,"sourceUnit":1320,"src":"130:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":142,"name":"Context","nameLocations":["632:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1319,"src":"632:7:2"},"id":143,"nodeType":"InheritanceSpecifier","src":"632:7:2"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"162:439:2","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":245,"linearizedBaseContracts":[245,1319],"name":"Pausable","nameLocation":"620:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"646:73:2","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":148,"name":"Paused","nameLocation":"730:6:2","nodeType":"EventDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:2","nodeType":"VariableDeclaration","scope":148,"src":"737:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:2"},"src":"724:30:2"},{"anonymous":false,"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"760:70:2","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":153,"name":"Unpaused","nameLocation":"841:8:2","nodeType":"EventDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:2","nodeType":"VariableDeclaration","scope":153,"src":"850:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:2"},"src":"835:32:2"},{"constant":false,"id":155,"mutability":"mutable","name":"_paused","nameLocation":"886:7:2","nodeType":"VariableDeclaration","scope":245,"src":"873:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":163,"nodeType":"Block","src":"986:32:2","statements":[{"expression":{"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":159,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"996:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":162,"nodeType":"ExpressionStatement","src":"996:15:2"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"900:67:2","text":" @dev Initializes the contract in unpaused state."},"id":164,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"983:2:2"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"986:0:2"},"scope":245,"src":"972:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":171,"nodeType":"Block","src":"1229:47:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":167,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1239:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":169,"nodeType":"ExpressionStatement","src":"1239:19:2"},{"id":170,"nodeType":"PlaceholderStatement","src":"1268:1:2"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1024:175:2","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":172,"name":"whenNotPaused","nameLocation":"1213:13:2","nodeType":"ModifierDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"1226:2:2"},"src":"1204:72:2","virtual":false,"visibility":"internal"},{"body":{"id":179,"nodeType":"Block","src":"1476:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"1486:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":177,"nodeType":"ExpressionStatement","src":"1486:16:2"},{"id":178,"nodeType":"PlaceholderStatement","src":"1512:1:2"}]},"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"1282:167:2","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":180,"name":"whenPaused","nameLocation":"1463:10:2","nodeType":"ModifierDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"1473:2:2"},"src":"1454:66:2","virtual":false,"visibility":"internal"},{"body":{"id":188,"nodeType":"Block","src":"1668:31:2","statements":[{"expression":{"id":186,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1685:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":185,"id":187,"nodeType":"Return","src":"1678:14:2"}]},"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"1526:84:2","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:2","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"1630:2:2"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"1662:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":183,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:2"},"scope":245,"src":"1615:84:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":200,"nodeType":"Block","src":"1818:55:2","statements":[{"expression":{"arguments":[{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":194,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"1837:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"ExpressionStatement","src":"1828:38:2"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"1705:57:2","text":" @dev Throws if the contract is paused."},"id":201,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:2","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"1793:2:2"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"1818:0:2"},"scope":245,"src":"1767:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":211,"nodeType":"Block","src":"1993:58:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":206,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2011:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"2003:41:2"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"1879:61:2","text":" @dev Throws if the contract is not paused."},"id":212,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:2","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"1968:2:2"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"1993:0:2"},"scope":245,"src":"1945:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":227,"nodeType":"Block","src":"2235:66:2","statements":[{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":218,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2245:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":221,"nodeType":"ExpressionStatement","src":"2245:14:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"2281:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":222,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"2274:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"EmitStatement","src":"2269:25:2"}]},"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"2057:124:2","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":228,"implemented":true,"kind":"function","modifiers":[{"id":216,"kind":"modifierInvocation","modifierName":{"id":215,"name":"whenNotPaused","nameLocations":["2221:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"2221:13:2"},"nodeType":"ModifierInvocation","src":"2221:13:2"}],"name":"_pause","nameLocation":"2195:6:2","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"2201:2:2"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2235:0:2"},"scope":245,"src":"2186:115:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":243,"nodeType":"Block","src":"2481:69:2","statements":[{"expression":{"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":234,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2491:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":237,"nodeType":"ExpressionStatement","src":"2491:15:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":239,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"2530:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":238,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2521:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"EmitStatement","src":"2516:27:2"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"2307:121:2","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":244,"implemented":true,"kind":"function","modifiers":[{"id":232,"kind":"modifierInvocation","modifierName":{"id":231,"name":"whenPaused","nameLocations":["2470:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":180,"src":"2470:10:2"},"nodeType":"ModifierInvocation","src":"2470:10:2"}],"name":"_unpause","nameLocation":"2442:8:2","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"2450:2:2"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"2481:0:2"},"scope":245,"src":"2433:117:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":246,"src":"602:1950:2","usedErrors":[]}],"src":"105:2448:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1319],"ERC20":[832],"IERC20":[910],"IERC20Metadata":[1253]},"id":833,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":247,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":833,"sourceUnit":911,"src":"130:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":833,"sourceUnit":1254,"src":"153:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":833,"sourceUnit":1320,"src":"195:33:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":252,"name":"Context","nameLocations":["1550:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1319,"src":"1550:7:3"},"id":253,"nodeType":"InheritanceSpecifier","src":"1550:7:3"},{"baseName":{"id":254,"name":"IERC20","nameLocations":["1559:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":910,"src":"1559:6:3"},"id":255,"nodeType":"InheritanceSpecifier","src":"1559:6:3"},{"baseName":{"id":256,"name":"IERC20Metadata","nameLocations":["1567:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"1567:14:3"},"id":257,"nodeType":"InheritanceSpecifier","src":"1567:14:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"230:1301:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":832,"linearizedBaseContracts":[832,1253,910,1319],"name":"ERC20","nameLocation":"1541:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":261,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:3","nodeType":"VariableDeclaration","scope":832,"src":"1588:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":260,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":267,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:3","nodeType":"VariableDeclaration","scope":832,"src":"1640:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":266,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":265,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":269,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:3","nodeType":"VariableDeclaration","scope":832,"src":"1714:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":271,"mutability":"mutable","name":"_name","nameLocation":"1764:5:3","nodeType":"VariableDeclaration","scope":832,"src":"1749:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":270,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":273,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:3","nodeType":"VariableDeclaration","scope":832,"src":"1775:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":272,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":289,"nodeType":"Block","src":"2036:57:3","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":281,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"2046:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":282,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2054:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":284,"nodeType":"ExpressionStatement","src":"2046:13:3"},{"expression":{"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":285,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2069:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":286,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2079:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":288,"nodeType":"ExpressionStatement","src":"2069:17:3"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1804:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":290,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"name_","nameLocation":"2006:5:3","nodeType":"VariableDeclaration","scope":290,"src":"1992:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":275,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:3","nodeType":"VariableDeclaration","scope":290,"src":"2013:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":277,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:3"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2036:0:3"},"scope":832,"src":"1980:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1240],"body":{"id":299,"nodeType":"Block","src":"2227:29:3","statements":[{"expression":{"id":297,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"2244:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":296,"id":298,"nodeType":"Return","src":"2237:12:3"}]},"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"2099:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":300,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:3","nodeType":"FunctionDefinition","overrides":{"id":293,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:3"},"parameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"2171:2:3"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":300,"src":"2212:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":294,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:3"},"scope":832,"src":"2158:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1246],"body":{"id":309,"nodeType":"Block","src":"2440:31:3","statements":[{"expression":{"id":307,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2457:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":306,"id":308,"nodeType":"Return","src":"2450:14:3"}]},"documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"2262:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":310,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:3","nodeType":"FunctionDefinition","overrides":{"id":303,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:3"},"parameters":{"id":302,"nodeType":"ParameterList","parameters":[],"src":"2384:2:3"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":310,"src":"2425:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":304,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:3"},"scope":832,"src":"2369:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1252],"body":{"id":319,"nodeType":"Block","src":"3169:26:3","statements":[{"expression":{"hexValue":"3138","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":316,"id":318,"nodeType":"Return","src":"3179:9:3"}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"2477:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":320,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:3","nodeType":"FunctionDefinition","overrides":{"id":313,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:3"},"parameters":{"id":312,"nodeType":"ParameterList","parameters":[],"src":"3121:2:3"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":320,"src":"3162:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":314,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:3"},"scope":832,"src":"3104:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":329,"nodeType":"Block","src":"3325:36:3","statements":[{"expression":{"id":327,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3342:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":326,"id":328,"nodeType":"Return","src":"3335:19:3"}]},"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"3201:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":330,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:3","nodeType":"FunctionDefinition","overrides":{"id":323,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:3"},"parameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"3275:2:3"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":330,"src":"3316:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:3"},"scope":832,"src":"3255:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[867],"body":{"id":343,"nodeType":"Block","src":"3502:42:3","statements":[{"expression":{"baseExpression":{"id":339,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3519:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":341,"indexExpression":{"id":340,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"3529:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":338,"id":342,"nodeType":"Return","src":"3512:25:3"}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"3367:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":344,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:3","nodeType":"FunctionDefinition","overrides":{"id":335,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:3"},"parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"account","nameLocation":"3446:7:3","nodeType":"VariableDeclaration","scope":344,"src":"3438:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":344,"src":"3493:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:3"},"scope":832,"src":"3419:125:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[877],"body":{"id":368,"nodeType":"Block","src":"3825:104:3","statements":[{"assignments":[356],"declarations":[{"constant":false,"id":356,"mutability":"mutable","name":"owner","nameLocation":"3843:5:3","nodeType":"VariableDeclaration","scope":368,"src":"3835:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":359,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":357,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"3851:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:3"},{"expression":{"arguments":[{"id":361,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"3883:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":362,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"3890:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":363,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"3894:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":360,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"3873:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":365,"nodeType":"ExpressionStatement","src":"3873:28:3"},{"expression":{"hexValue":"74727565","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":354,"id":367,"nodeType":"Return","src":"3911:11:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"3550:185:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":369,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:3","nodeType":"FunctionDefinition","overrides":{"id":351,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:3"},"parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"to","nameLocation":"3766:2:3","nodeType":"VariableDeclaration","scope":369,"src":"3758:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"amount","nameLocation":"3778:6:3","nodeType":"VariableDeclaration","scope":369,"src":"3770:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:3"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":369,"src":"3819:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:3"},"scope":832,"src":"3740:189:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[887],"body":{"id":386,"nodeType":"Block","src":"4085:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":380,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"4102:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":382,"indexExpression":{"id":381,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4114:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":384,"indexExpression":{"id":383,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4121:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":385,"nodeType":"Return","src":"4095:34:3"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"3935:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:3","nodeType":"FunctionDefinition","overrides":{"id":376,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:3"},"parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"owner","nameLocation":"4014:5:3","nodeType":"VariableDeclaration","scope":387,"src":"4006:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"spender","nameLocation":"4029:7:3","nodeType":"VariableDeclaration","scope":387,"src":"4021:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:3"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"4076:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:3"},"scope":832,"src":"3987:149:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[897],"body":{"id":411,"nodeType":"Block","src":"4533:108:3","statements":[{"assignments":[399],"declarations":[{"constant":false,"id":399,"mutability":"mutable","name":"owner","nameLocation":"4551:5:3","nodeType":"VariableDeclaration","scope":411,"src":"4543:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":402,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":400,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"4559:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:3"},{"expression":{"arguments":[{"id":404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4590:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"4597:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"4606:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":403,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4581:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"4581:32:3"},{"expression":{"hexValue":"74727565","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":397,"id":410,"nodeType":"Return","src":"4623:11:3"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"4142:297:3","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":412,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:3","nodeType":"FunctionDefinition","overrides":{"id":394,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:3"},"parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"spender","nameLocation":"4469:7:3","nodeType":"VariableDeclaration","scope":412,"src":"4461:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"amount","nameLocation":"4486:6:3","nodeType":"VariableDeclaration","scope":412,"src":"4478:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:3"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"4527:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:3"},"scope":832,"src":"4444:197:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[909],"body":{"id":444,"nodeType":"Block","src":"5306:153:3","statements":[{"assignments":[426],"declarations":[{"constant":false,"id":426,"mutability":"mutable","name":"spender","nameLocation":"5324:7:3","nodeType":"VariableDeclaration","scope":444,"src":"5316:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":429,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":427,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5334:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:3"},{"expression":{"arguments":[{"id":431,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"5372:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":432,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5378:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":433,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5387:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":430,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"5356:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"5356:38:3"},{"expression":{"arguments":[{"id":437,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"5414:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5420:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5424:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":436,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"5404:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"5404:27:3"},{"expression":{"hexValue":"74727565","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":424,"id":443,"nodeType":"Return","src":"5441:11:3"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"4647:551:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:3","nodeType":"FunctionDefinition","overrides":{"id":421,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:3"},"parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"from","nameLocation":"5233:4:3","nodeType":"VariableDeclaration","scope":445,"src":"5225:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"to","nameLocation":"5247:2:3","nodeType":"VariableDeclaration","scope":445,"src":"5239:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"amount","nameLocation":"5259:6:3","nodeType":"VariableDeclaration","scope":445,"src":"5251:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:3"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"5300:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":422,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:3"},"scope":832,"src":"5203:256:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":473,"nodeType":"Block","src":"5948:140:3","statements":[{"assignments":[456],"declarations":[{"constant":false,"id":456,"mutability":"mutable","name":"owner","nameLocation":"5966:5:3","nodeType":"VariableDeclaration","scope":473,"src":"5958:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":459,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5974:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:3"},{"expression":{"arguments":[{"id":461,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"6005:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6012:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":464,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"6031:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":465,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6038:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":463,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6021:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":467,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6049:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":460,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"5996:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"ExpressionStatement","src":"5996:64:3"},{"expression":{"hexValue":"74727565","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":454,"id":472,"nodeType":"Return","src":"6070:11:3"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"5465:384:3","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:3","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"spender","nameLocation":"5889:7:3","nodeType":"VariableDeclaration","scope":474,"src":"5881:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:3","nodeType":"VariableDeclaration","scope":474,"src":"5898:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:3"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"5942:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":452,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:3"},"scope":832,"src":"5854:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":514,"nodeType":"Block","src":"6674:328:3","statements":[{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"owner","nameLocation":"6692:5:3","nodeType":"VariableDeclaration","scope":514,"src":"6684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":488,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":486,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6700:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:3"},{"assignments":[490],"declarations":[{"constant":false,"id":490,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:3","nodeType":"VariableDeclaration","scope":514,"src":"6722:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":495,"initialValue":{"arguments":[{"id":492,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6759:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6766:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6749:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":497,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"6792:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":498,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6812:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"ExpressionStatement","src":"6784:85:3"},{"id":511,"nodeType":"UncheckedBlock","src":"6879:95:3","statements":[{"expression":{"arguments":[{"id":504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6912:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6919:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":506,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"6928:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":507,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6947:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":503,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6903:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"6903:60:3"}]},{"expression":{"hexValue":"74727565","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":483,"id":513,"nodeType":"Return","src":"6984:11:3"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"6094:476:3","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":515,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:3","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"spender","nameLocation":"6610:7:3","nodeType":"VariableDeclaration","scope":515,"src":"6602:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:3","nodeType":"VariableDeclaration","scope":515,"src":"6619:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:3"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":515,"src":"6668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":481,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:3"},"scope":832,"src":"6575:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":591,"nodeType":"Block","src":"7534:710:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"7552:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:3","typeDescriptions":{}}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"ExpressionStatement","src":"7544:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7630:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:3","typeDescriptions":{}}},"id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"7622:64:3"},{"expression":{"arguments":[{"id":546,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"7718:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":547,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7724:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":548,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7728:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":545,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"7697:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"7697:38:3"},{"assignments":[552],"declarations":[{"constant":false,"id":552,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:3","nodeType":"VariableDeclaration","scope":591,"src":"7746:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":556,"initialValue":{"baseExpression":{"id":553,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7768:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":555,"indexExpression":{"id":554,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"7778:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"7801:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":559,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7816:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"7793:72:3"},{"id":578,"nodeType":"UncheckedBlock","src":"7875:273:3","statements":[{"expression":{"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":564,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7899:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":566,"indexExpression":{"id":565,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"7909:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":567,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"7917:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7931:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":571,"nodeType":"ExpressionStatement","src":"7899:38:3"},{"expression":{"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":572,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"8114:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":574,"indexExpression":{"id":573,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"8124:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8131:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":577,"nodeType":"ExpressionStatement","src":"8114:23:3"}]},{"eventCall":{"arguments":[{"id":580,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8172:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"8178:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8182:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"8163:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"EmitStatement","src":"8158:31:3"},{"expression":{"arguments":[{"id":586,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8220:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"8226:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8230:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8200:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"8200:37:3"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"7008:443:3","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:3","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"from","nameLocation":"7483:4:3","nodeType":"VariableDeclaration","scope":592,"src":"7475:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"to","nameLocation":"7497:2:3","nodeType":"VariableDeclaration","scope":592,"src":"7489:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"amount","nameLocation":"7509:6:3","nodeType":"VariableDeclaration","scope":592,"src":"7501:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:3"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"7534:0:3"},"scope":832,"src":"7456:788:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"8585:470:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":601,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:3","typeDescriptions":{}}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"ExpressionStatement","src":"8595:65:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:3","typeDescriptions":{}}},"id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8704:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8713:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":610,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8671:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":618,"nodeType":"ExpressionStatement","src":"8671:49:3"},{"expression":{"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":619,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"8731:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8747:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":622,"nodeType":"ExpressionStatement","src":"8731:22:3"},{"id":629,"nodeType":"UncheckedBlock","src":"8763:175:3","statements":[{"expression":{"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":623,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"8899:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":625,"indexExpression":{"id":624,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8909:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":626,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8921:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":628,"nodeType":"ExpressionStatement","src":"8899:28:3"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:3","typeDescriptions":{}}},"id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8973:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"8982:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":630,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"8952:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"EmitStatement","src":"8947:42:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9032:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":645,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"9041:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":639,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9000:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"9000:48:3"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"8250:265:3","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":649,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:3","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"account","nameLocation":"8543:7:3","nodeType":"VariableDeclaration","scope":649,"src":"8535:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"8560:6:3","nodeType":"VariableDeclaration","scope":649,"src":"8552:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:3"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"8585:0:3"},"scope":832,"src":"8520:535:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"9440:594:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"9458:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:3","typeDescriptions":{}}},"id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"ExpressionStatement","src":"9450:67:3"},{"expression":{"arguments":[{"id":668,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"9549:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:3","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"9570:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":667,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9528:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"ExpressionStatement","src":"9528:49:3"},{"assignments":[677],"declarations":[{"constant":false,"id":677,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:3","nodeType":"VariableDeclaration","scope":720,"src":"9588:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":681,"initialValue":{"baseExpression":{"id":678,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"9613:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":680,"indexExpression":{"id":679,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"9623:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":683,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9649:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":684,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"9667:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"9641:71:3"},{"id":701,"nodeType":"UncheckedBlock","src":"9722:194:3","statements":[{"expression":{"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":689,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"9746:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":691,"indexExpression":{"id":690,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"9756:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":692,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9767:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"9784:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":696,"nodeType":"ExpressionStatement","src":"9746:44:3"},{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":697,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"9883:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":698,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"9899:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":700,"nodeType":"ExpressionStatement","src":"9883:22:3"}]},{"eventCall":{"arguments":[{"id":703,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"9940:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:3","typeDescriptions":{}}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":708,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"9961:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":702,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9931:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"EmitStatement","src":"9926:42:3"},{"expression":{"arguments":[{"id":712,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:3","typeDescriptions":{}}},"id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"10020:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":711,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"9979:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"9979:48:3"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"9061:309:3","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:3","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"account","nameLocation":"9398:7:3","nodeType":"VariableDeclaration","scope":721,"src":"9390:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"amount","nameLocation":"9415:6:3","nodeType":"VariableDeclaration","scope":721,"src":"9407:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:3"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"9440:0:3"},"scope":832,"src":"9375:659:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"10540:257:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":732,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10558:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:3","typeDescriptions":{}}},"id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"10550:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"10636:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"10628:68:3"},{"expression":{"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":751,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"10707:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":754,"indexExpression":{"id":752,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10719:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":755,"indexExpression":{"id":753,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"10726:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":756,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"10737:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":758,"nodeType":"ExpressionStatement","src":"10707:36:3"},{"eventCall":{"arguments":[{"id":760,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10767:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"10774:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"10783:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":759,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10758:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"EmitStatement","src":"10753:37:3"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"10040:412:3","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:3","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"owner","nameLocation":"10483:5:3","nodeType":"VariableDeclaration","scope":766,"src":"10475:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"spender","nameLocation":"10498:7:3","nodeType":"VariableDeclaration","scope":766,"src":"10490:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"amount","nameLocation":"10515:6:3","nodeType":"VariableDeclaration","scope":766,"src":"10507:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:3"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"10540:0:3"},"scope":832,"src":"10457:340:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":808,"nodeType":"Block","src":"11168:321:3","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:3","nodeType":"VariableDeclaration","scope":808,"src":"11178:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":782,"initialValue":{"arguments":[{"id":779,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"11215:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"11222:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"11205:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"11244:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":784,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:3","memberName":"max","nodeType":"MemberAccess","src":"11264:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":807,"nodeType":"IfStatement","src":"11240:243:3","trueBody":{"id":806,"nodeType":"Block","src":"11283:200:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":791,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"11305:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":792,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"11325:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"11297:68:3"},{"id":805,"nodeType":"UncheckedBlock","src":"11379:94:3","statements":[{"expression":{"arguments":[{"id":798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"11416:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":799,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"11423:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":800,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"11432:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":801,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"11451:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":797,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"11407:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"ExpressionStatement","src":"11407:51:3"}]}]}}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"10803:270:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":809,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:3","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"owner","nameLocation":"11111:5:3","nodeType":"VariableDeclaration","scope":809,"src":"11103:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"spender","nameLocation":"11126:7:3","nodeType":"VariableDeclaration","scope":809,"src":"11118:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"amount","nameLocation":"11143:6:3","nodeType":"VariableDeclaration","scope":809,"src":"11135:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"11168:0:3"},"scope":832,"src":"11078:411:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"12162:2:3","statements":[]},"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"11495:573:3","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:3","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"from","nameLocation":"12111:4:3","nodeType":"VariableDeclaration","scope":820,"src":"12103:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"to","nameLocation":"12125:2:3","nodeType":"VariableDeclaration","scope":820,"src":"12117:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"amount","nameLocation":"12137:6:3","nodeType":"VariableDeclaration","scope":820,"src":"12129:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:3"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"12162:0:3"},"scope":832,"src":"12073:91:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":830,"nodeType":"Block","src":"12840:2:3","statements":[]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"12170:577:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":831,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:3","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"from","nameLocation":"12789:4:3","nodeType":"VariableDeclaration","scope":831,"src":"12781:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"to","nameLocation":"12803:2:3","nodeType":"VariableDeclaration","scope":831,"src":"12795:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"amount","nameLocation":"12815:6:3","nodeType":"VariableDeclaration","scope":831,"src":"12807:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:3"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"12840:0:3"},"scope":832,"src":"12752:90:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":833,"src":"1532:11312:3","usedErrors":[]}],"src":"105:12740:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[910]},"id":911,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":834,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":910,"linearizedBaseContracts":[910],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":844,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":844,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":840,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":844,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":844,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":853,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":853,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":853,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":853,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":910,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":867,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":867,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":867,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":910,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":877,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":877,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":877,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":874,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":910,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":887,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":887,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":887,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":910,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":897,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":897,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":897,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":897,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":894,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":910,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":909,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"from","nameLocation":"2676:4:4","nodeType":"VariableDeclaration","scope":909,"src":"2668:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"to","nameLocation":"2690:2:4","nodeType":"VariableDeclaration","scope":909,"src":"2682:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"amount","nameLocation":"2702:6:4","nodeType":"VariableDeclaration","scope":909,"src":"2694:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:4"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"2728:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":906,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:4"},"scope":910,"src":"2646:88:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":911,"src":"202:2534:4","usedErrors":[]}],"src":"106:2631:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1319],"ERC20":[832],"ERC20Burnable":[954],"IERC20":[910],"IERC20Metadata":[1253]},"id":955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":912,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":955,"sourceUnit":833,"src":"149:22:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":955,"sourceUnit":1320,"src":"172:36:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":916,"name":"Context","nameLocations":["454:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1319,"src":"454:7:5"},"id":917,"nodeType":"InheritanceSpecifier","src":"454:7:5"},{"baseName":{"id":918,"name":"ERC20","nameLocations":["463:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"463:5:5"},"id":919,"nodeType":"InheritanceSpecifier","src":"463:5:5"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"210:208:5","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":954,"linearizedBaseContracts":[954,832,1253,910,1319],"name":"ERC20Burnable","nameLocation":"437:13:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":931,"nodeType":"Block","src":"623:44:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":926,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"639:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"653:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":925,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"633:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"633:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":930,"nodeType":"ExpressionStatement","src":"633:27:5"}]},"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"475:98:5","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":932,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"amount","nameLocation":"600:6:5","nodeType":"VariableDeclaration","scope":932,"src":"592:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:5"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"623:0:5"},"scope":954,"src":"578:89:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":952,"nodeType":"Block","src":"1039:95:5","statements":[{"expression":{"arguments":[{"id":941,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"1065:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":942,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"1074:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"1088:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":940,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"1049:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"ExpressionStatement","src":"1049:46:5"},{"expression":{"arguments":[{"id":948,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"1111:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"1120:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1105:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"1105:22:5"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"673:295:5","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":953,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:5","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"account","nameLocation":"999:7:5","nodeType":"VariableDeclaration","scope":953,"src":"991:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"amount","nameLocation":"1016:6:5","nodeType":"VariableDeclaration","scope":953,"src":"1008:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:5"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"1039:0:5"},"scope":954,"src":"973:161:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":955,"src":"419:717:5","usedErrors":[]}],"src":"124:1013:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","exportedSymbols":{"Context":[1319],"ERC20":[832],"ERC20Capped":[1019],"IERC20":[910],"IERC20Metadata":[1253]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":833,"src":"132:22:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":959,"name":"ERC20","nameLocations":["267:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"267:5:6"},"id":960,"nodeType":"InheritanceSpecifier","src":"267:5:6"}],"canonicalName":"ERC20Capped","contractDependencies":[],"contractKind":"contract","documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"156:77:6","text":" @dev Extension of {ERC20} that adds a cap to the supply of tokens."},"fullyImplemented":true,"id":1019,"linearizedBaseContracts":[1019,832,1253,910,1319],"name":"ERC20Capped","nameLocation":"252:11:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":962,"mutability":"immutable","name":"_cap","nameLocation":"305:4:6","nodeType":"VariableDeclaration","scope":1019,"src":"279:30:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":979,"nodeType":"Block","src":"476:80:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"cap_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"494:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"501:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"494:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332304361707065643a206361702069732030","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"504:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828","typeString":"literal_string \"ERC20Capped: cap is 0\""},"value":"ERC20Capped: cap is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828","typeString":"literal_string \"ERC20Capped: cap is 0\""}],"id":968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"486:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"486:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"ExpressionStatement","src":"486:42:6"},{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":975,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"538:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":976,"name":"cap_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"545:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"538:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"nodeType":"ExpressionStatement","src":"538:11:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"316:129:6","text":" @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."},"id":980,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"cap_","nameLocation":"470:4:6","nodeType":"VariableDeclaration","scope":980,"src":"462:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"461:14:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"476:0:6"},"scope":1019,"src":"450:106:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":988,"nodeType":"Block","src":"688:28:6","statements":[{"expression":{"id":986,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"705:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":985,"id":987,"nodeType":"Return","src":"698:11:6"}]},"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"562:68:6","text":" @dev Returns the cap on the token's total supply."},"functionSelector":"355274ea","id":989,"implemented":true,"kind":"function","modifiers":[],"name":"cap","nameLocation":"644:3:6","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"679:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"678:9:6"},"scope":1019,"src":"635:81:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[649],"body":{"id":1017,"nodeType":"Block","src":"843:130:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":999,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"861:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$832_$","typeString":"type(contract ERC20)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"867:11:6","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":330,"src":"861:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"861:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1002,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"883:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"861:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1004,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"893:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"893:5:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"861:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332304361707065643a20636170206578636565646564","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"900:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f","typeString":"literal_string \"ERC20Capped: cap exceeded\""},"value":"ERC20Capped: cap exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f","typeString":"literal_string \"ERC20Capped: cap exceeded\""}],"id":998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"853:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"853:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"ExpressionStatement","src":"853:75:6"},{"expression":{"arguments":[{"id":1013,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"950:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"959:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1010,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"938:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Capped_$1019_$","typeString":"type(contract super ERC20Capped)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"944:5:6","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":649,"src":"938:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"938:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"938:28:6"}]},"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"722:42:6","text":" @dev See {ERC20-_mint}."},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"778:5:6","nodeType":"FunctionDefinition","overrides":{"id":996,"nodeType":"OverrideSpecifier","overrides":[],"src":"834:8:6"},"parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"account","nameLocation":"792:7:6","nodeType":"VariableDeclaration","scope":1018,"src":"784:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"amount","nameLocation":"809:6:6","nodeType":"VariableDeclaration","scope":1018,"src":"801:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:33:6"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"843:0:6"},"scope":1019,"src":"769:204:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1020,"src":"234:741:6","usedErrors":[]}],"src":"107:869:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"Context":[1319],"ERC20":[832],"ERC20Pausable":[1056],"IERC20":[910],"IERC20Metadata":[1253],"Pausable":[245]},"id":1057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":833,"src":"149:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"../../../security/Pausable.sol","id":1023,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":246,"src":"172:40:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1025,"name":"ERC20","nameLocations":["885:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"885:5:7"},"id":1026,"nodeType":"InheritanceSpecifier","src":"885:5:7"},{"baseName":{"id":1027,"name":"Pausable","nameLocations":["892:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":245,"src":"892:8:7"},"id":1028,"nodeType":"InheritanceSpecifier","src":"892:8:7"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"214:635:7","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract unpausable."},"fullyImplemented":true,"id":1056,"linearizedBaseContracts":[1056,245,832,1253,910,1319],"name":"ERC20Pausable","nameLocation":"868:13:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[820],"body":{"id":1054,"nodeType":"Block","src":"1144:136:7","statements":[{"expression":{"arguments":[{"id":1042,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"1181:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1187:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"1191:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1039,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1154:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1056_$","typeString":"type(contract super ERC20Pausable)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1160:20:7","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":820,"src":"1154:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1154:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1046,"nodeType":"ExpressionStatement","src":"1154:44:7"},{"expression":{"arguments":[{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1217:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1048,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"1218:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1228:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""},"value":"ERC20Pausable: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""}],"id":1047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1209:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"1209:64:7"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"907:134:7","text":" @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1055:20:7","nodeType":"FunctionDefinition","overrides":{"id":1037,"nodeType":"OverrideSpecifier","overrides":[],"src":"1135:8:7"},"parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"from","nameLocation":"1084:4:7","nodeType":"VariableDeclaration","scope":1055,"src":"1076:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"to","nameLocation":"1098:2:7","nodeType":"VariableDeclaration","scope":1055,"src":"1090:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"amount","nameLocation":"1110:6:7","nodeType":"VariableDeclaration","scope":1055,"src":"1102:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1075:42:7"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"1144:0:7"},"scope":1056,"src":"1046:234:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1057,"src":"850:432:7","usedErrors":[]}],"src":"124:1159:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[1319],"Counters":[1393],"ECDSA":[2314],"EIP712":[2518],"ERC20":[832],"ERC20Permit":[1228],"IERC20":[910],"IERC20Metadata":[1253],"IERC20Permit":[1289],"IERC5267":[137],"Math":[3384],"ShortString":[1398],"ShortStrings":[1609],"SignedMath":[3489],"StorageSlot":[1719],"Strings":[1948]},"id":1229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1229,"sourceUnit":1290,"src":"147:28:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1229,"sourceUnit":833,"src":"176:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1061,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1229,"sourceUnit":2315,"src":"199:47:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1062,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1229,"sourceUnit":2519,"src":"247:48:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1063,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1229,"sourceUnit":1394,"src":"296:37:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1065,"name":"ERC20","nameLocations":["886:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"886:5:8"},"id":1066,"nodeType":"InheritanceSpecifier","src":"886:5:8"},{"baseName":{"id":1067,"name":"IERC20Permit","nameLocations":["893:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1289,"src":"893:12:8"},"id":1068,"nodeType":"InheritanceSpecifier","src":"893:12:8"},{"baseName":{"id":1069,"name":"EIP712","nameLocations":["907:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2518,"src":"907:6:8"},"id":1070,"nodeType":"InheritanceSpecifier","src":"907:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"335:517:8","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":true,"id":1228,"linearizedBaseContracts":[1228,2518,137,1289,832,1253,910,1319],"name":"ERC20Permit","nameLocation":"871:11:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1074,"libraryName":{"id":1071,"name":"Counters","nameLocations":["926:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1393,"src":"926:8:8"},"nodeType":"UsingForDirective","src":"920:36:8","typeName":{"id":1073,"nodeType":"UserDefinedTypeName","pathNode":{"id":1072,"name":"Counters.Counter","nameLocations":["939:8:8","948:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1325,"src":"939:16:8"},"referencedDeclaration":1325,"src":"939:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1079,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:8","nodeType":"VariableDeclaration","scope":1228,"src":"962:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1325_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1078,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1325_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1077,"nodeType":"UserDefinedTypeName","pathNode":{"id":1076,"name":"Counters.Counter","nameLocations":["981:8:8","990:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1325,"src":"981:16:8"},"referencedDeclaration":1325,"src":"981:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1084,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:8","nodeType":"VariableDeclaration","scope":1228,"src":"1073:147:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1081,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"1226:254:8","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1087,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:8","nodeType":"VariableDeclaration","scope":1228,"src":"1537:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1097,"nodeType":"Block","src":"1867:2:8","statements":[]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"1592:220:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1098,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1093,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"1856:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1095,"kind":"baseConstructorSpecifier","modifierName":{"id":1092,"name":"EIP712","nameLocations":["1849:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2518,"src":"1849:6:8"},"nodeType":"ModifierInvocation","src":"1849:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"name","nameLocation":"1843:4:8","nodeType":"VariableDeclaration","scope":1098,"src":"1829:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1089,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:8"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"1867:0:8"},"scope":1228,"src":"1817:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1274],"body":{"id":1170,"nodeType":"Block","src":"2121:428:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1118,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2139:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2145:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"2139:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1120,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"2158:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2139:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2168:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2131:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2131:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"2131:69:8"},{"assignments":[1126],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"structHash","nameLocation":"2219:10:8","nodeType":"VariableDeclaration","scope":1170,"src":"2211:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2211:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1140,"initialValue":{"arguments":[{"arguments":[{"id":1130,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"2253:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1131,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2271:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2278:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2287:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1135,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2304:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1134,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2294:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1137,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"2312:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1128,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2242:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2246:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2242:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2232:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2211:111:8"},{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"hash","nameLocation":"2341:4:8","nodeType":"VariableDeclaration","scope":1170,"src":"2333:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2333:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[{"id":1144,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2365:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1143,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"2348:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2348:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2333:43:8"},{"assignments":[1148],"declarations":[{"constant":false,"id":1148,"mutability":"mutable","name":"signer","nameLocation":"2395:6:8","nodeType":"VariableDeclaration","scope":1170,"src":"2387:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1156,"initialValue":{"arguments":[{"id":1151,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"2418:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1152,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2424:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1153,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"2427:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1154,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2430:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1149,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"2404:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2314_$","typeString":"type(library ECDSA)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2410:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"2404:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2404:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2387:45:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"2450:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1159,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2460:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2450:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2467:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2442:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2442:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1163,"nodeType":"ExpressionStatement","src":"2442:58:8"},{"expression":{"arguments":[{"id":1165,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2520:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"2527:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2536:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1164,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"2511:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2511:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"2511:31:8"}]},"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"1875:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1932:6:8","nodeType":"FunctionDefinition","overrides":{"id":1115,"nodeType":"OverrideSpecifier","overrides":[],"src":"2112:8:8"},"parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"owner","nameLocation":"1956:5:8","nodeType":"VariableDeclaration","scope":1171,"src":"1948:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"spender","nameLocation":"1979:7:8","nodeType":"VariableDeclaration","scope":1171,"src":"1971:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"value","nameLocation":"2004:5:8","nodeType":"VariableDeclaration","scope":1171,"src":"1996:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"deadline","nameLocation":"2027:8:8","nodeType":"VariableDeclaration","scope":1171,"src":"2019:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"v","nameLocation":"2051:1:8","nodeType":"VariableDeclaration","scope":1171,"src":"2045:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1108,"name":"uint8","nodeType":"ElementaryTypeName","src":"2045:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"r","nameLocation":"2070:1:8","nodeType":"VariableDeclaration","scope":1171,"src":"2062:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2062:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"s","nameLocation":"2089:1:8","nodeType":"VariableDeclaration","scope":1171,"src":"2081:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2081:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1938:158:8"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"2121:0:8"},"scope":1228,"src":"1923:626:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1282],"body":{"id":1186,"nodeType":"Block","src":"2681:48:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1180,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2698:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1325_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1182,"indexExpression":{"id":1181,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"2706:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2698:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage","typeString":"struct Counters.Counter storage ref"}},"id":1183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2713:7:8","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1337,"src":"2698:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1325_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1325_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1179,"id":1185,"nodeType":"Return","src":"2691:31:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"2555:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1187,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2612:6:8","nodeType":"FunctionDefinition","overrides":{"id":1176,"nodeType":"OverrideSpecifier","overrides":[],"src":"2654:8:8"},"parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"owner","nameLocation":"2627:5:8","nodeType":"VariableDeclaration","scope":1187,"src":"2619:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"2619:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2618:15:8"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1187,"src":"2672:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2672:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2671:9:8"},"scope":1228,"src":"2603:126:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1288],"body":{"id":1197,"nodeType":"Block","src":"2905:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1194,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2922:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1193,"id":1196,"nodeType":"Return","src":"2915:27:8"}]},"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"2735:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2845:16:8","nodeType":"FunctionDefinition","overrides":{"id":1190,"nodeType":"OverrideSpecifier","overrides":[],"src":"2878:8:8"},"parameters":{"id":1189,"nodeType":"ParameterList","parameters":[],"src":"2861:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1198,"src":"2896:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2896:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2895:9:8"},"scope":1228,"src":"2836:113:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1226,"nodeType":"Block","src":"3157:126:8","statements":[{"assignments":[1210],"declarations":[{"constant":false,"id":1210,"mutability":"mutable","name":"nonce","nameLocation":"3192:5:8","nodeType":"VariableDeclaration","scope":1226,"src":"3167:30:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1209,"nodeType":"UserDefinedTypeName","pathNode":{"id":1208,"name":"Counters.Counter","nameLocations":["3167:8:8","3176:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1325,"src":"3167:16:8"},"referencedDeclaration":1325,"src":"3167:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1214,"initialValue":{"baseExpression":{"id":1211,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3200:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1325_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1213,"indexExpression":{"id":1212,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"3208:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3200:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3167:47:8"},{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1215,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3224:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1216,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3234:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3240:7:8","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1337,"src":"3234:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1325_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1325_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3234:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3224:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"3224:25:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1221,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3259:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3265:9:8","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"3259:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1325_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1325_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1225,"nodeType":"ExpressionStatement","src":"3259:17:8"}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"2955:120:8","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1227,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3089:9:8","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"owner","nameLocation":"3107:5:8","nodeType":"VariableDeclaration","scope":1227,"src":"3099:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"3099:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3098:15:8"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"current","nameLocation":"3148:7:8","nodeType":"VariableDeclaration","scope":1227,"src":"3140:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3140:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3139:17:8"},"scope":1228,"src":"3080:203:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1229,"src":"853:2432:8","usedErrors":[1406,1408]}],"src":"122:3164:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[910],"IERC20Metadata":[1253]},"id":1254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1230,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1254,"sourceUnit":911,"src":"135:23:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1233,"name":"IERC20","nameLocations":["305:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":910,"src":"305:6:9"},"id":1234,"nodeType":"InheritanceSpecifier","src":"305:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"160:116:9","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1253,"linearizedBaseContracts":[1253,910],"name":"IERC20Metadata","nameLocation":"287:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"318:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1240,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:9","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[],"src":"390:2:9"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"416:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1237,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:9"},"scope":1253,"src":"377:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"437:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1246,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:9","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[],"src":"513:2:9"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"539:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1243,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:9"},"scope":1253,"src":"498:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"560:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1252,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:9","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[],"src":"647:2:9"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"673:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1249,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:9"},"scope":1253,"src":"630:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1254,"src":"277:405:9","usedErrors":[]}],"src":"110:573:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1289]},"id":1290,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1255,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"148:1963:10","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1289,"linearizedBaseContracts":[1289],"name":"IERC20Permit","nameLocation":"2122:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"2141:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1274,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:10","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"owner","nameLocation":"3029:5:10","nodeType":"VariableDeclaration","scope":1274,"src":"3021:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"spender","nameLocation":"3052:7:10","nodeType":"VariableDeclaration","scope":1274,"src":"3044:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"value","nameLocation":"3077:5:10","nodeType":"VariableDeclaration","scope":1274,"src":"3069:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:10","nodeType":"VariableDeclaration","scope":1274,"src":"3092:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"v","nameLocation":"3124:1:10","nodeType":"VariableDeclaration","scope":1274,"src":"3118:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1266,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"r","nameLocation":"3143:1:10","nodeType":"VariableDeclaration","scope":1274,"src":"3135:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"s","nameLocation":"3162:1:10","nodeType":"VariableDeclaration","scope":1274,"src":"3154:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:10"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[],"src":"3178:0:10"},"scope":1289,"src":"2996:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"3185:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:10","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"owner","nameLocation":"3508:5:10","nodeType":"VariableDeclaration","scope":1282,"src":"3500:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:10"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"3538:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:10"},"scope":1289,"src":"3484:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"3553:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1288,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:10","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[],"src":"3764:2:10"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1288,"src":"3790:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:10"},"scope":1289,"src":"3739:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1290,"src":"2112:1689:10","usedErrors":[]}],"src":"123:3679:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1319]},"id":1320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1291,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"126:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1319,"linearizedBaseContracts":[1319],"name":"Context","nameLocation":"641:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1300,"nodeType":"Block","src":"717:34:11","statements":[{"expression":{"expression":{"id":1297,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:11","memberName":"sender","nodeType":"MemberAccess","src":"734:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1296,"id":1299,"nodeType":"Return","src":"727:17:11"}]},"id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:11","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[],"src":"674:2:11"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1301,"src":"708:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:11"},"scope":1319,"src":"655:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1309,"nodeType":"Block","src":"824:32:11","statements":[{"expression":{"expression":{"id":1306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:11","memberName":"data","nodeType":"MemberAccess","src":"841:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1305,"id":1308,"nodeType":"Return","src":"834:15:11"}]},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:11","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"774:2:11"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"808:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:11"},"scope":1319,"src":"757:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"934:25:11","statements":[{"expression":{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1314,"id":1316,"nodeType":"Return","src":"944:8:11"}]},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:11","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[],"src":"891:2:11"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"925:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:11"},"scope":1319,"src":"862:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1320,"src":"623:338:11","usedErrors":[]}],"src":"101:861:11"},"id":11},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1393]},"id":1394,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1321,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"112:311:12","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1393,"linearizedBaseContracts":[1393],"name":"Counters","nameLocation":"432:8:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1325,"members":[{"constant":false,"id":1324,"mutability":"mutable","name":"_value","nameLocation":"794:6:12","nodeType":"VariableDeclaration","scope":1325,"src":"786:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:12","nodeType":"StructDefinition","scope":1393,"src":"447:374:12","visibility":"public"},{"body":{"id":1336,"nodeType":"Block","src":"901:38:12","statements":[{"expression":{"expression":{"id":1333,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"918:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"918:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1332,"id":1335,"nodeType":"Return","src":"911:21:12"}]},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:12","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"counter","nameLocation":"860:7:12","nodeType":"VariableDeclaration","scope":1337,"src":"844:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1327,"nodeType":"UserDefinedTypeName","pathNode":{"id":1326,"name":"Counter","nameLocations":["844:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1325,"src":"844:7:12"},"referencedDeclaration":1325,"src":"844:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:12"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1337,"src":"892:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:12"},"scope":1393,"src":"827:112:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1350,"nodeType":"Block","src":"998:70:12","statements":[{"id":1349,"nodeType":"UncheckedBlock","src":"1008:54:12","statements":[{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1343,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"1032:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"1032:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1348,"nodeType":"ExpressionStatement","src":"1032:19:12"}]}]},"id":1351,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:12","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"counter","nameLocation":"980:7:12","nodeType":"VariableDeclaration","scope":1351,"src":"964:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1339,"nodeType":"UserDefinedTypeName","pathNode":{"id":1338,"name":"Counter","nameLocations":["964:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1325,"src":"964:7:12"},"referencedDeclaration":1325,"src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:12"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"998:0:12"},"scope":1393,"src":"945:123:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"1127:176:12","statements":[{"assignments":[1358],"declarations":[{"constant":false,"id":1358,"mutability":"mutable","name":"value","nameLocation":"1145:5:12","nodeType":"VariableDeclaration","scope":1378,"src":"1137:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1361,"initialValue":{"expression":{"id":1359,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"1153:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"1153:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"1185:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"ExpressionStatement","src":"1177:49:12"},{"id":1377,"nodeType":"UncheckedBlock","src":"1236:61:12","statements":[{"expression":{"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1369,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"1260:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"1260:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"1277:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1376,"nodeType":"ExpressionStatement","src":"1260:26:12"}]}]},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:12","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"counter","nameLocation":"1109:7:12","nodeType":"VariableDeclaration","scope":1379,"src":"1093:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1353,"nodeType":"UserDefinedTypeName","pathNode":{"id":1352,"name":"Counter","nameLocations":["1093:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1325,"src":"1093:7:12"},"referencedDeclaration":1325,"src":"1093:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:12"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"1127:0:12"},"scope":1393,"src":"1074:229:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1391,"nodeType":"Block","src":"1358:35:12","statements":[{"expression":{"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1385,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"1368:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:12","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1324,"src":"1368:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1390,"nodeType":"ExpressionStatement","src":"1368:18:12"}]},"id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:12","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"counter","nameLocation":"1340:7:12","nodeType":"VariableDeclaration","scope":1392,"src":"1324:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1381,"nodeType":"UserDefinedTypeName","pathNode":{"id":1380,"name":"Counter","nameLocations":["1324:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1325,"src":"1324:7:12"},"referencedDeclaration":1325,"src":"1324:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1325_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:12"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"1358:0:12"},"scope":1393,"src":"1309:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1394,"src":"424:971:12","usedErrors":[]}],"src":"87:1309:12"},"id":12},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1398],"ShortStrings":[1609],"StorageSlot":[1719]},"id":1610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1395,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1610,"sourceUnit":1720,"src":"131:27:13","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":1398,"name":"ShortString","nameLocation":"333:11:13","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:13","underlyingType":{"id":1397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"358:876:13","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1609,"linearizedBaseContracts":[1609],"name":"ShortStrings","nameLocation":"1243:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1402,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:13","nodeType":"VariableDeclaration","scope":1609,"src":"1325:112:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1406,"name":"StringTooLong","nameLocation":"1450:13:13","nodeType":"ErrorDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"str","nameLocation":"1471:3:13","nodeType":"VariableDeclaration","scope":1406,"src":"1464:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1403,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:13"},"src":"1444:32:13"},{"errorSelector":"b3512b0c","id":1408,"name":"InvalidShortString","nameLocation":"1487:18:13","nodeType":"ErrorDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"1505:2:13"},"src":"1481:27:13"},{"body":{"id":1451,"nodeType":"Block","src":"1767:208:13","statements":[{"assignments":[1418],"declarations":[{"constant":false,"id":1418,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:13","nodeType":"VariableDeclaration","scope":1451,"src":"1777:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1417,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1423,"initialValue":{"arguments":[{"id":1421,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1803:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1419,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:13","typeDescriptions":{}}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1424,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1821:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:13","memberName":"length","nodeType":"MemberAccess","src":"1821:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1433,"nodeType":"IfStatement","src":"1817:72:13","trueBody":{"id":1432,"nodeType":"Block","src":"1839:50:13","statements":[{"errorCall":{"arguments":[{"id":1429,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1874:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1428,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"1860:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"RevertStatement","src":"1853:25:13"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1442,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1946:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:13","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:13","typeDescriptions":{}}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1445,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1955:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:13","memberName":"length","nodeType":"MemberAccess","src":"1955:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:13","typeDescriptions":{}}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1434,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1905:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"type(ShortString)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"functionReturnParameters":1416,"id":1450,"nodeType":"Return","src":"1898:70:13"}]},"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"1514:170:13","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:13","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"str","nameLocation":"1726:3:13","nodeType":"VariableDeclaration","scope":1452,"src":"1712:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1410,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:13"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"1754:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"},"typeName":{"id":1414,"nodeType":"UserDefinedTypeName","pathNode":{"id":1413,"name":"ShortString","nameLocations":["1754:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"1754:11:13"},"referencedDeclaration":1398,"src":"1754:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:13"},"scope":1609,"src":"1689:286:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"2133:331:13","statements":[{"assignments":[1462],"declarations":[{"constant":false,"id":1462,"mutability":"mutable","name":"len","nameLocation":"2151:3:13","nodeType":"VariableDeclaration","scope":1477,"src":"2143:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1466,"initialValue":{"arguments":[{"id":1464,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2168:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}],"id":1463,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2157:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1398_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:13"},{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"str","nameLocation":"2275:3:13","nodeType":"VariableDeclaration","scope":1477,"src":"2261:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1467,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1473,"initialValue":{"arguments":[{"hexValue":"3332","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1469,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:13"},{"AST":{"nodeType":"YulBlock","src":"2357:81:13","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:13"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:13"},"nodeType":"YulFunctionCall","src":"2371:16:13"},"nodeType":"YulExpressionStatement","src":"2371:16:13"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:13"},"nodeType":"YulFunctionCall","src":"2407:14:13"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:13"},"nodeType":"YulFunctionCall","src":"2400:28:13"},"nodeType":"YulExpressionStatement","src":"2400:28:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1462,"isOffset":false,"isSlot":false,"src":"2383:3:13","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"2423:4:13","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"2378:3:13","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"2411:3:13","valueSize":1}],"id":1474,"nodeType":"InlineAssembly","src":"2348:90:13"},{"expression":{"id":1475,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2454:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1460,"id":1476,"nodeType":"Return","src":"2447:10:13"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"1981:73:13","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:13","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:13","nodeType":"VariableDeclaration","scope":1478,"src":"2077:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"},"typeName":{"id":1455,"nodeType":"UserDefinedTypeName","pathNode":{"id":1454,"name":"ShortString","nameLocations":["2077:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"2077:11:13"},"referencedDeclaration":1398,"src":"2077:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:13"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"2118:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:13"},"scope":1609,"src":"2059:405:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"2606:175:13","statements":[{"assignments":[1488],"declarations":[{"constant":false,"id":1488,"mutability":"mutable","name":"result","nameLocation":"2624:6:13","nodeType":"VariableDeclaration","scope":1509,"src":"2616:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1498,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1493,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"2660:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}],"expression":{"id":1491,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"2641:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"type(ShortString)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1398_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:13","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2687:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"IfStatement","src":"2683:69:13","trueBody":{"id":1505,"nodeType":"Block","src":"2700:52:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1502,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"2721:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1504,"nodeType":"RevertStatement","src":"2714:27:13"}]}},{"expression":{"id":1507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2768:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1486,"id":1508,"nodeType":"Return","src":"2761:13:13"}]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"2470:61:13","text":" @dev Return the length of a `ShortString`."},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:13","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:13","nodeType":"VariableDeclaration","scope":1510,"src":"2556:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"},"typeName":{"id":1481,"nodeType":"UserDefinedTypeName","pathNode":{"id":1480,"name":"ShortString","nameLocations":["2556:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"2556:11:13"},"referencedDeclaration":1398,"src":"2556:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:13"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"2597:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:13"},"scope":1609,"src":"2536:245:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1549,"nodeType":"Block","src":"3004:232:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3024:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1521,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:13","typeDescriptions":{}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:13","memberName":"length","nodeType":"MemberAccess","src":"3018:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1547,"nodeType":"Block","src":"3102:128:13","statements":[{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1536,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"3142:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1533,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"3116:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1719_$","typeString":"type(library StorageSlot)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:13","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"3116:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1627_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1627_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1626,"src":"3116:38:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3157:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1541,"nodeType":"ExpressionStatement","src":"3116:46:13"},{"expression":{"arguments":[{"id":1544,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"3200:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1542,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"3183:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"type(ShortString)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"functionReturnParameters":1520,"id":1546,"nodeType":"Return","src":"3176:43:13"}]},"id":1548,"nodeType":"IfStatement","src":"3014:216:13","trueBody":{"id":1532,"nodeType":"Block","src":"3044:52:13","statements":[{"expression":{"arguments":[{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3079:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1528,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3065:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"functionReturnParameters":1520,"id":1531,"nodeType":"Return","src":"3058:27:13"}]}}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"2787:103:13","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1550,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:13","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"value","nameLocation":"2944:5:13","nodeType":"VariableDeclaration","scope":1550,"src":"2930:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1512,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"store","nameLocation":"2966:5:13","nodeType":"VariableDeclaration","scope":1550,"src":"2951:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1514,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:13"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"2991:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"},"typeName":{"id":1518,"nodeType":"UserDefinedTypeName","pathNode":{"id":1517,"name":"ShortString","nameLocations":["2991:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"2991:11:13"},"referencedDeclaration":1398,"src":"2991:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:13"},"scope":1609,"src":"2895:341:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"3476:159:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3509:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}],"expression":{"id":1561,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"3490:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"type(ShortString)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1398_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1565,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"3519:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1574,"nodeType":"Block","src":"3592:37:13","statements":[{"expression":{"id":1572,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"3613:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1560,"id":1573,"nodeType":"Return","src":"3606:12:13"}]},"id":1575,"nodeType":"IfStatement","src":"3486:143:13","trueBody":{"id":1571,"nodeType":"Block","src":"3539:47:13","statements":[{"expression":{"arguments":[{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3569:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}],"id":1567,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"3560:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1398_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1560,"id":1570,"nodeType":"Return","src":"3553:22:13"}]}}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"3242:120:13","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:13","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"value","nameLocation":"3409:5:13","nodeType":"VariableDeclaration","scope":1577,"src":"3397:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"},"typeName":{"id":1553,"nodeType":"UserDefinedTypeName","pathNode":{"id":1552,"name":"ShortString","nameLocations":["3397:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"3397:11:13"},"referencedDeclaration":1398,"src":"3397:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"store","nameLocation":"3431:5:13","nodeType":"VariableDeclaration","scope":1577,"src":"3416:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1555,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:13"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1577,"src":"3461:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1558,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:13"},"scope":1609,"src":"3367:268:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1607,"nodeType":"Block","src":"4108:175:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4141:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}],"expression":{"id":1588,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"4122:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"type(ShortString)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1398_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1592,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"4151:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1605,"nodeType":"Block","src":"4226:51:13","statements":[{"expression":{"expression":{"arguments":[{"id":1601,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"4253:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:13","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:13","memberName":"length","nodeType":"MemberAccess","src":"4247:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1587,"id":1604,"nodeType":"Return","src":"4240:26:13"}]},"id":1606,"nodeType":"IfStatement","src":"4118:159:13","trueBody":{"id":1598,"nodeType":"Block","src":"4171:49:13","statements":[{"expression":{"arguments":[{"id":1595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4203:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}],"id":1594,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"4192:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1398_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1587,"id":1597,"nodeType":"Return","src":"4185:24:13"}]}}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"3641:357:13","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:13","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"value","nameLocation":"4047:5:13","nodeType":"VariableDeclaration","scope":1608,"src":"4035:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"},"typeName":{"id":1580,"nodeType":"UserDefinedTypeName","pathNode":{"id":1579,"name":"ShortString","nameLocations":["4035:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"4035:11:13"},"referencedDeclaration":1398,"src":"4035:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"store","nameLocation":"4069:5:13","nodeType":"VariableDeclaration","scope":1608,"src":"4054:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1582,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:13"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"4099:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:13"},"scope":1609,"src":"4003:280:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1610,"src":"1235:3050:13","usedErrors":[1406,1408]}],"src":"106:4180:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1719]},"id":1720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1611,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"218:1201:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1719,"linearizedBaseContracts":[1719],"name":"StorageSlot","nameLocation":"1428:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1615,"members":[{"constant":false,"id":1614,"mutability":"mutable","name":"value","nameLocation":"1483:5:14","nodeType":"VariableDeclaration","scope":1615,"src":"1475:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:14","nodeType":"StructDefinition","scope":1719,"src":"1446:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1618,"members":[{"constant":false,"id":1617,"mutability":"mutable","name":"value","nameLocation":"1535:5:14","nodeType":"VariableDeclaration","scope":1618,"src":"1530:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1616,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:14","nodeType":"StructDefinition","scope":1719,"src":"1501:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1621,"members":[{"constant":false,"id":1620,"mutability":"mutable","name":"value","nameLocation":"1590:5:14","nodeType":"VariableDeclaration","scope":1621,"src":"1582:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:14","nodeType":"StructDefinition","scope":1719,"src":"1553:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1624,"members":[{"constant":false,"id":1623,"mutability":"mutable","name":"value","nameLocation":"1645:5:14","nodeType":"VariableDeclaration","scope":1624,"src":"1637:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:14","nodeType":"StructDefinition","scope":1719,"src":"1608:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1627,"members":[{"constant":false,"id":1626,"mutability":"mutable","name":"value","nameLocation":"1698:5:14","nodeType":"VariableDeclaration","scope":1627,"src":"1691:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1625,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:14","nodeType":"StructDefinition","scope":1719,"src":"1663:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1630,"members":[{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"1749:5:14","nodeType":"VariableDeclaration","scope":1630,"src":"1743:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1628,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:14","nodeType":"StructDefinition","scope":1719,"src":"1716:45:14","visibility":"public"},{"body":{"id":1640,"nodeType":"Block","src":"1943:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:14","statements":[{"nodeType":"YulAssignment","src":"2019:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1637,"isOffset":false,"isSlot":true,"src":"2019:6:14","suffix":"slot","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"2029:4:14","valueSize":1}],"id":1639,"nodeType":"InlineAssembly","src":"1996:47:14"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1767:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:14","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"slot","nameLocation":"1891:4:14","nodeType":"VariableDeclaration","scope":1641,"src":"1883:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:14"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"r","nameLocation":"1940:1:14","nodeType":"VariableDeclaration","scope":1641,"src":"1920:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1615_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1636,"nodeType":"UserDefinedTypeName","pathNode":{"id":1635,"name":"AddressSlot","nameLocations":["1920:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1615,"src":"1920:11:14"},"referencedDeclaration":1615,"src":"1920:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1615_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:14"},"scope":1719,"src":"1859:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1651,"nodeType":"Block","src":"2231:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:14","statements":[{"nodeType":"YulAssignment","src":"2307:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1648,"isOffset":false,"isSlot":true,"src":"2307:6:14","suffix":"slot","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"2317:4:14","valueSize":1}],"id":1650,"nodeType":"InlineAssembly","src":"2284:47:14"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"2055:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:14","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"slot","nameLocation":"2179:4:14","nodeType":"VariableDeclaration","scope":1652,"src":"2171:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:14"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"r","nameLocation":"2228:1:14","nodeType":"VariableDeclaration","scope":1652,"src":"2208:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1618_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1647,"nodeType":"UserDefinedTypeName","pathNode":{"id":1646,"name":"BooleanSlot","nameLocations":["2208:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1618,"src":"2208:11:14"},"referencedDeclaration":1618,"src":"2208:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1618_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:14"},"scope":1719,"src":"2147:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1662,"nodeType":"Block","src":"2519:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:14","statements":[{"nodeType":"YulAssignment","src":"2595:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1659,"isOffset":false,"isSlot":true,"src":"2595:6:14","suffix":"slot","valueSize":1},{"declaration":1655,"isOffset":false,"isSlot":false,"src":"2605:4:14","valueSize":1}],"id":1661,"nodeType":"InlineAssembly","src":"2572:47:14"}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"2343:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:14","nodeType":"FunctionDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"slot","nameLocation":"2467:4:14","nodeType":"VariableDeclaration","scope":1663,"src":"2459:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:14"},"returnParameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"r","nameLocation":"2516:1:14","nodeType":"VariableDeclaration","scope":1663,"src":"2496:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1621_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1658,"nodeType":"UserDefinedTypeName","pathNode":{"id":1657,"name":"Bytes32Slot","nameLocations":["2496:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1621,"src":"2496:11:14"},"referencedDeclaration":1621,"src":"2496:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1621_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:14"},"scope":1719,"src":"2435:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1673,"nodeType":"Block","src":"2807:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:14","statements":[{"nodeType":"YulAssignment","src":"2883:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1670,"isOffset":false,"isSlot":true,"src":"2883:6:14","suffix":"slot","valueSize":1},{"declaration":1666,"isOffset":false,"isSlot":false,"src":"2893:4:14","valueSize":1}],"id":1672,"nodeType":"InlineAssembly","src":"2860:47:14"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"2631:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1674,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:14","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"slot","nameLocation":"2755:4:14","nodeType":"VariableDeclaration","scope":1674,"src":"2747:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:14"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"r","nameLocation":"2804:1:14","nodeType":"VariableDeclaration","scope":1674,"src":"2784:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1624_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1669,"nodeType":"UserDefinedTypeName","pathNode":{"id":1668,"name":"Uint256Slot","nameLocations":["2784:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1624,"src":"2784:11:14"},"referencedDeclaration":1624,"src":"2784:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1624_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:14"},"scope":1719,"src":"2723:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1684,"nodeType":"Block","src":"3092:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:14","statements":[{"nodeType":"YulAssignment","src":"3168:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1681,"isOffset":false,"isSlot":true,"src":"3168:6:14","suffix":"slot","valueSize":1},{"declaration":1677,"isOffset":false,"isSlot":false,"src":"3178:4:14","valueSize":1}],"id":1683,"nodeType":"InlineAssembly","src":"3145:47:14"}]},"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"2919:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:14","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"slot","nameLocation":"3041:4:14","nodeType":"VariableDeclaration","scope":1685,"src":"3033:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:14"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"r","nameLocation":"3089:1:14","nodeType":"VariableDeclaration","scope":1685,"src":"3070:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1627_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1680,"nodeType":"UserDefinedTypeName","pathNode":{"id":1679,"name":"StringSlot","nameLocations":["3070:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1627,"src":"3070:10:14"},"referencedDeclaration":1627,"src":"3070:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1627_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:14"},"scope":1719,"src":"3010:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1695,"nodeType":"Block","src":"3400:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:14","statements":[{"nodeType":"YulAssignment","src":"3476:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1692,"isOffset":false,"isSlot":true,"src":"3476:6:14","suffix":"slot","valueSize":1},{"declaration":1688,"isOffset":false,"isSlot":true,"src":"3486:10:14","suffix":"slot","valueSize":1}],"id":1694,"nodeType":"InlineAssembly","src":"3453:53:14"}]},"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"3204:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:14","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"store","nameLocation":"3348:5:14","nodeType":"VariableDeclaration","scope":1696,"src":"3333:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1687,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:14"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"r","nameLocation":"3397:1:14","nodeType":"VariableDeclaration","scope":1696,"src":"3378:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1627_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1691,"nodeType":"UserDefinedTypeName","pathNode":{"id":1690,"name":"StringSlot","nameLocations":["3378:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1627,"src":"3378:10:14"},"referencedDeclaration":1627,"src":"3378:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1627_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:14"},"scope":1719,"src":"3310:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"3688:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:14","statements":[{"nodeType":"YulAssignment","src":"3764:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1703,"isOffset":false,"isSlot":true,"src":"3764:6:14","suffix":"slot","valueSize":1},{"declaration":1699,"isOffset":false,"isSlot":false,"src":"3774:4:14","valueSize":1}],"id":1705,"nodeType":"InlineAssembly","src":"3741:47:14"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"3518:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:14","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"slot","nameLocation":"3638:4:14","nodeType":"VariableDeclaration","scope":1707,"src":"3630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:14"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"r","nameLocation":"3685:1:14","nodeType":"VariableDeclaration","scope":1707,"src":"3667:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1630_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1702,"nodeType":"UserDefinedTypeName","pathNode":{"id":1701,"name":"BytesSlot","nameLocations":["3667:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"3667:9:14"},"referencedDeclaration":1630,"src":"3667:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1630_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:14"},"scope":1719,"src":"3608:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"3991:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:14","statements":[{"nodeType":"YulAssignment","src":"4067:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1714,"isOffset":false,"isSlot":true,"src":"4067:6:14","suffix":"slot","valueSize":1},{"declaration":1710,"isOffset":false,"isSlot":true,"src":"4077:10:14","suffix":"slot","valueSize":1}],"id":1716,"nodeType":"InlineAssembly","src":"4044:53:14"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"3800:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:14","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"store","nameLocation":"3940:5:14","nodeType":"VariableDeclaration","scope":1718,"src":"3926:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1709,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:14"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"r","nameLocation":"3988:1:14","nodeType":"VariableDeclaration","scope":1718,"src":"3970:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1630_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1713,"nodeType":"UserDefinedTypeName","pathNode":{"id":1712,"name":"BytesSlot","nameLocations":["3970:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"3970:9:14"},"referencedDeclaration":1630,"src":"3970:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1630_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:14"},"scope":1719,"src":"3904:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1720,"src":"1420:2685:14","usedErrors":[]}],"src":"193:3913:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3384],"SignedMath":[3489],"Strings":[1948]},"id":1949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1721,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1722,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1949,"sourceUnit":3385,"src":"126:25:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1949,"sourceUnit":3490,"src":"152:31:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"185:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":1948,"linearizedBaseContracts":[1948],"name":"Strings","nameLocation":"228:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1727,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:15","nodeType":"VariableDeclaration","scope":1948,"src":"242:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1725,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1730,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:15","nodeType":"VariableDeclaration","scope":1948,"src":"302:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1728,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1777,"nodeType":"Block","src":"518:625:15","statements":[{"id":1776,"nodeType":"UncheckedBlock","src":"528:609:15","statements":[{"assignments":[1739],"declarations":[{"constant":false,"id":1739,"mutability":"mutable","name":"length","nameLocation":"560:6:15","nodeType":"VariableDeclaration","scope":1776,"src":"552:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1740,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"569:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3384_$","typeString":"type(library Math)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3221,"src":"569:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:15"},{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"buffer","nameLocation":"618:6:15","nodeType":"VariableDeclaration","scope":1776,"src":"604:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1747,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1753,"initialValue":{"arguments":[{"id":1751,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"638:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1749,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:15"},{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"mutability":"mutable","name":"ptr","nameLocation":"667:3:15","nodeType":"VariableDeclaration","scope":1776,"src":"659:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1756,"nodeType":"VariableDeclarationStatement","src":"659:11:15"},{"AST":{"nodeType":"YulBlock","src":"740:67:15","statements":[{"nodeType":"YulAssignment","src":"758:35:15","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:15","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:15"},"nodeType":"YulFunctionCall","src":"777:15:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:15"},"nodeType":"YulFunctionCall","src":"765:28:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1748,"isOffset":false,"isSlot":false,"src":"769:6:15","valueSize":1},{"declaration":1739,"isOffset":false,"isSlot":false,"src":"785:6:15","valueSize":1},{"declaration":1755,"isOffset":false,"isSlot":false,"src":"758:3:15","valueSize":1}],"id":1757,"nodeType":"InlineAssembly","src":"731:76:15"},{"body":{"id":1772,"nodeType":"Block","src":"833:267:15","statements":[{"expression":{"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:15","subExpression":{"id":1759,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"851:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1761,"nodeType":"ExpressionStatement","src":"851:5:15"},{"AST":{"nodeType":"YulBlock","src":"934:84:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:15"},"nodeType":"YulFunctionCall","src":"974:14:15"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:15"},"nodeType":"YulFunctionCall","src":"969:30:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:15"},"nodeType":"YulFunctionCall","src":"956:44:15"},"nodeType":"YulExpressionStatement","src":"956:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1727,"isOffset":false,"isSlot":false,"src":"990:8:15","valueSize":1},{"declaration":1755,"isOffset":false,"isSlot":false,"src":"964:3:15","valueSize":1},{"declaration":1733,"isOffset":false,"isSlot":false,"src":"978:5:15","valueSize":1}],"id":1762,"nodeType":"InlineAssembly","src":"925:93:15"},{"expression":{"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1035:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1766,"nodeType":"ExpressionStatement","src":"1035:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1068:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1771,"nodeType":"IfStatement","src":"1064:21:15","trueBody":{"id":1770,"nodeType":"Break","src":"1080:5:15"}}]},"condition":{"hexValue":"74727565","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1773,"nodeType":"WhileStatement","src":"820:280:15"},{"expression":{"id":1774,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"1120:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1737,"id":1775,"nodeType":"Return","src":"1113:13:15"}]}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"352:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:15","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"value","nameLocation":"473:5:15","nodeType":"VariableDeclaration","scope":1778,"src":"465:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:15"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1778,"src":"503:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1735,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:15"},"scope":1948,"src":"447:696:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"1313:103:15","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"1354:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:15","trueExpression":{"hexValue":"2d","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"1400:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1797,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"1385:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3489_$","typeString":"type(library SignedMath)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3488,"src":"1385:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1796,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1778,1806],"referencedDeclaration":1778,"src":"1376:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1786,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:15","typeDescriptions":{}}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1785,"id":1804,"nodeType":"Return","src":"1323:86:15"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"1149:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:15","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"value","nameLocation":"1268:5:15","nodeType":"VariableDeclaration","scope":1806,"src":"1261:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1780,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:15"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"1298:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:15"},"scope":1948,"src":"1243:173:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1825,"nodeType":"Block","src":"1595:100:15","statements":[{"id":1824,"nodeType":"UncheckedBlock","src":"1605:84:15","statements":[{"expression":{"arguments":[{"id":1815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"1648:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"1667:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1816,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"1655:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3384_$","typeString":"type(library Math)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3344,"src":"1655:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1814,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1826,1902,1922],"referencedDeclaration":1902,"src":"1636:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1813,"id":1823,"nodeType":"Return","src":"1629:49:15"}]}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"1422:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1826,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:15","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"value","nameLocation":"1550:5:15","nodeType":"VariableDeclaration","scope":1826,"src":"1542:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:15"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1826,"src":"1580:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1811,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:15"},"scope":1948,"src":"1521:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"1908:347:15","statements":[{"assignments":[1837],"declarations":[{"constant":false,"id":1837,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:15","nodeType":"VariableDeclaration","scope":1901,"src":"1918:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1836,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1846,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1841,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"1954:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:15"},{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1847,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"1975:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1849,"indexExpression":{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1852,"nodeType":"ExpressionStatement","src":"1975:15:15"},{"expression":{"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1853,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2000:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1855,"indexExpression":{"hexValue":"31","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1858,"nodeType":"ExpressionStatement","src":"2000:15:15"},{"body":{"id":1887,"nodeType":"Block","src":"2070:83:15","statements":[{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1873,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2084:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1875,"indexExpression":{"id":1874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2091:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1876,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2096:8:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1880,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2105:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1882,"nodeType":"ExpressionStatement","src":"2084:33:15"},{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2131:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1886,"nodeType":"ExpressionStatement","src":"2131:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2058:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"initializationExpression":{"assignments":[1860],"declarations":[{"constant":false,"id":1860,"mutability":"mutable","name":"i","nameLocation":"2038:1:15","nodeType":"VariableDeclaration","scope":1888,"src":"2030:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1862,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2046:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:15"},"loopExpression":{"expression":{"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:15","subExpression":{"id":1870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2067:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1872,"nodeType":"ExpressionStatement","src":"2065:3:15"},"nodeType":"ForStatement","src":"2025:128:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2170:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1895,"nodeType":"ExpressionStatement","src":"2162:55:15"},{"expression":{"arguments":[{"id":1898,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2241:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1896,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:15","typeDescriptions":{}}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1835,"id":1900,"nodeType":"Return","src":"2227:21:15"}]},"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"1701:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:15","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"value","nameLocation":"1847:5:15","nodeType":"VariableDeclaration","scope":1902,"src":"1839:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1831,"mutability":"mutable","name":"length","nameLocation":"1862:6:15","nodeType":"VariableDeclaration","scope":1902,"src":"1854:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:15"},"returnParameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1902,"src":"1893:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1833,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:15"},"scope":1948,"src":"1818:437:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"2480:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1915,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"2525:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1913,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:15","typeDescriptions":{}}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:15","typeDescriptions":{}}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1918,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2533:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1910,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1826,1902,1922],"referencedDeclaration":1902,"src":"2497:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1909,"id":1920,"nodeType":"Return","src":"2490:59:15"}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"2261:141:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:15","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"addr","nameLocation":"2436:4:15","nodeType":"VariableDeclaration","scope":1922,"src":"2428:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:15"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"2465:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1907,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:15"},"scope":1948,"src":"2407:149:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"2711:66:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2744:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:15","typeDescriptions":{}}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1932,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"2767:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1939,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:15","typeDescriptions":{}}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1938,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1931,"id":1945,"nodeType":"Return","src":"2721:49:15"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"2562:66:15","text":" @dev Returns true if the two strings are equal."},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:15","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"a","nameLocation":"2662:1:15","nodeType":"VariableDeclaration","scope":1947,"src":"2648:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1924,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"b","nameLocation":"2679:1:15","nodeType":"VariableDeclaration","scope":1947,"src":"2665:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:15"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"2705:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1929,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:15"},"scope":1948,"src":"2633:144:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1949,"src":"220:2559:15","usedErrors":[]}],"src":"101:2679:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2314],"Math":[3384],"SignedMath":[3489],"Strings":[1948]},"id":2315,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1950,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2315,"sourceUnit":1949,"src":"137:24:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"163:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2314,"linearizedBaseContracts":[2314],"name":"ECDSA","nameLocation":"377:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1958,"members":[{"id":1953,"name":"NoError","nameLocation":"417:7:16","nodeType":"EnumValue","src":"417:7:16"},{"id":1954,"name":"InvalidSignature","nameLocation":"434:16:16","nodeType":"EnumValue","src":"434:16:16"},{"id":1955,"name":"InvalidSignatureLength","nameLocation":"460:22:16","nodeType":"EnumValue","src":"460:22:16"},{"id":1956,"name":"InvalidSignatureS","nameLocation":"492:17:16","nodeType":"EnumValue","src":"492:17:16"},{"id":1957,"name":"InvalidSignatureV","nameLocation":"519:17:16","nodeType":"EnumValue","src":"519:17:16"}],"name":"RecoverError","nameLocation":"394:12:16","nodeType":"EnumDefinition","src":"389:175:16"},{"body":{"id":2001,"nodeType":"Block","src":"624:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"638:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1965,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"647:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1958_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1953,"src":"647:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1970,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"734:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1971,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"743:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1958_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1954,"src":"743:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"843:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1980,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"852:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1958_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1955,"src":"852:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"965:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1989,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"974:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1958_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"974:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"nodeType":"IfStatement","src":"961:114:16","trueBody":{"id":1996,"nodeType":"Block","src":"1006:69:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1992,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"1020:44:16"}]}},"id":1998,"nodeType":"IfStatement","src":"839:236:16","trueBody":{"id":1987,"nodeType":"Block","src":"889:66:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1983,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"ExpressionStatement","src":"903:41:16"}]}},"id":1999,"nodeType":"IfStatement","src":"730:345:16","trueBody":{"id":1978,"nodeType":"Block","src":"774:59:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1974,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"ExpressionStatement","src":"788:34:16"}]}},"id":2000,"nodeType":"IfStatement","src":"634:441:16","trueBody":{"id":1969,"nodeType":"Block","src":"669:55:16","statements":[{"functionReturnParameters":1963,"id":1968,"nodeType":"Return","src":"683:7:16"}]}}]},"id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:16","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"error","nameLocation":"604:5:16","nodeType":"VariableDeclaration","scope":2002,"src":"591:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"RecoverError","nameLocations":["591:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1958,"src":"591:12:16"},"referencedDeclaration":1958,"src":"591:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:16"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"624:0:16"},"scope":2314,"src":"570:511:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2047,"nodeType":"Block","src":"2249:626:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2015,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2263:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:16","memberName":"length","nodeType":"MemberAccess","src":"2263:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2045,"nodeType":"Block","src":"2788:81:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:16","typeDescriptions":{}}},"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2041,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2822:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1958_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1955,"src":"2822:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}}],"id":2043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2014,"id":2044,"nodeType":"Return","src":"2802:56:16"}]},"id":2046,"nodeType":"IfStatement","src":"2259:610:16","trueBody":{"id":2036,"nodeType":"Block","src":"2287:495:16","statements":[{"assignments":[2020],"declarations":[{"constant":false,"id":2020,"mutability":"mutable","name":"r","nameLocation":"2309:1:16","nodeType":"VariableDeclaration","scope":2036,"src":"2301:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2021,"nodeType":"VariableDeclarationStatement","src":"2301:9:16"},{"assignments":[2023],"declarations":[{"constant":false,"id":2023,"mutability":"mutable","name":"s","nameLocation":"2332:1:16","nodeType":"VariableDeclaration","scope":2036,"src":"2324:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2024,"nodeType":"VariableDeclarationStatement","src":"2324:9:16"},{"assignments":[2026],"declarations":[{"constant":false,"id":2026,"mutability":"mutable","name":"v","nameLocation":"2353:1:16","nodeType":"VariableDeclaration","scope":2036,"src":"2347:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2025,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2027,"nodeType":"VariableDeclarationStatement","src":"2347:7:16"},{"AST":{"nodeType":"YulBlock","src":"2555:171:16","statements":[{"nodeType":"YulAssignment","src":"2573:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:16"},"nodeType":"YulFunctionCall","src":"2584:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:16"},"nodeType":"YulFunctionCall","src":"2578:27:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:16"}]},{"nodeType":"YulAssignment","src":"2622:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:16"},"nodeType":"YulFunctionCall","src":"2633:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:16"},"nodeType":"YulFunctionCall","src":"2627:27:16"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:16"}]},{"nodeType":"YulAssignment","src":"2671:41:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:16"},"nodeType":"YulFunctionCall","src":"2690:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:16"},"nodeType":"YulFunctionCall","src":"2684:27:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:16"},"nodeType":"YulFunctionCall","src":"2676:36:16"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2020,"isOffset":false,"isSlot":false,"src":"2573:1:16","valueSize":1},{"declaration":2023,"isOffset":false,"isSlot":false,"src":"2622:1:16","valueSize":1},{"declaration":2007,"isOffset":false,"isSlot":false,"src":"2588:9:16","valueSize":1},{"declaration":2007,"isOffset":false,"isSlot":false,"src":"2637:9:16","valueSize":1},{"declaration":2007,"isOffset":false,"isSlot":false,"src":"2694:9:16","valueSize":1},{"declaration":2026,"isOffset":false,"isSlot":false,"src":"2671:1:16","valueSize":1}],"id":2028,"nodeType":"InlineAssembly","src":"2546:180:16"},{"expression":{"arguments":[{"id":2030,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"2757:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2031,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"2763:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2032,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"2766:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2033,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"2769:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2029,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2048,2122,2216],"referencedDeclaration":2216,"src":"2746:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2014,"id":2035,"nodeType":"Return","src":"2739:32:16"}]}}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"1087:1053:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:16","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"hash","nameLocation":"2173:4:16","nodeType":"VariableDeclaration","scope":2048,"src":"2165:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"signature","nameLocation":"2192:9:16","nodeType":"VariableDeclaration","scope":2048,"src":"2179:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2006,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:16"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2048,"src":"2226:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2009,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2048,"src":"2235:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2012,"nodeType":"UserDefinedTypeName","pathNode":{"id":2011,"name":"RecoverError","nameLocations":["2235:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1958,"src":"2235:12:16"},"referencedDeclaration":1958,"src":"2235:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:16"},"scope":2314,"src":"2145:730:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"3748:140:16","statements":[{"assignments":[2059,2062],"declarations":[{"constant":false,"id":2059,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:16","nodeType":"VariableDeclaration","scope":2074,"src":"3759:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"error","nameLocation":"3791:5:16","nodeType":"VariableDeclaration","scope":2074,"src":"3778:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2061,"nodeType":"UserDefinedTypeName","pathNode":{"id":2060,"name":"RecoverError","nameLocations":["3778:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1958,"src":"3778:12:16"},"referencedDeclaration":1958,"src":"3778:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2067,"initialValue":{"arguments":[{"id":2064,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3811:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2065,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"3817:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2063,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2048,2122,2216],"referencedDeclaration":2048,"src":"3800:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:16"},{"expression":{"arguments":[{"id":2069,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"3849:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}],"id":2068,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"3837:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1958_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2071,"nodeType":"ExpressionStatement","src":"3837:18:16"},{"expression":{"id":2072,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"3872:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2057,"id":2073,"nodeType":"Return","src":"3865:16:16"}]},"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"2881:775:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:16","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"hash","nameLocation":"3686:4:16","nodeType":"VariableDeclaration","scope":2075,"src":"3678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"signature","nameLocation":"3705:9:16","nodeType":"VariableDeclaration","scope":2075,"src":"3692:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2052,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:16"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"3739:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:16"},"scope":2314,"src":"3661:227:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2121,"nodeType":"Block","src":"4245:203:16","statements":[{"assignments":[2091],"declarations":[{"constant":false,"id":2091,"mutability":"mutable","name":"s","nameLocation":"4263:1:16","nodeType":"VariableDeclaration","scope":2121,"src":"4255:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2098,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2092,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"4267:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:16","typeDescriptions":{}}},"id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:16"},{"assignments":[2100],"declarations":[{"constant":false,"id":2100,"mutability":"mutable","name":"v","nameLocation":"4363:1:16","nodeType":"VariableDeclaration","scope":2121,"src":"4357:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2099,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2113,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2105,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"4382:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:16","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2101,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:16","typeDescriptions":{}}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:16"},{"expression":{"arguments":[{"id":2115,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4427:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2116,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"4433:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2117,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"4436:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2118,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"4439:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2114,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2048,2122,2216],"referencedDeclaration":2216,"src":"4416:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2089,"id":2120,"nodeType":"Return","src":"4409:32:16"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"3894:243:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:16","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"hash","nameLocation":"4170:4:16","nodeType":"VariableDeclaration","scope":2122,"src":"4162:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"r","nameLocation":"4184:1:16","nodeType":"VariableDeclaration","scope":2122,"src":"4176:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"vs","nameLocation":"4195:2:16","nodeType":"VariableDeclaration","scope":2122,"src":"4187:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:16"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2122,"src":"4222:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2122,"src":"4231:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2087,"nodeType":"UserDefinedTypeName","pathNode":{"id":2086,"name":"RecoverError","nameLocations":["4231:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1958,"src":"4231:12:16"},"referencedDeclaration":1958,"src":"4231:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:16"},"scope":2314,"src":"4142:306:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"4699:136:16","statements":[{"assignments":[2135,2138],"declarations":[{"constant":false,"id":2135,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:16","nodeType":"VariableDeclaration","scope":2151,"src":"4710:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2138,"mutability":"mutable","name":"error","nameLocation":"4742:5:16","nodeType":"VariableDeclaration","scope":2151,"src":"4729:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2137,"nodeType":"UserDefinedTypeName","pathNode":{"id":2136,"name":"RecoverError","nameLocations":["4729:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1958,"src":"4729:12:16"},"referencedDeclaration":1958,"src":"4729:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2144,"initialValue":{"arguments":[{"id":2140,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"4762:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2141,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"4768:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2142,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"4771:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2139,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2048,2122,2216],"referencedDeclaration":2122,"src":"4751:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:16"},{"expression":{"arguments":[{"id":2146,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"4796:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}],"id":2145,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4784:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1958_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2148,"nodeType":"ExpressionStatement","src":"4784:18:16"},{"expression":{"id":2149,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4819:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2133,"id":2150,"nodeType":"Return","src":"4812:16:16"}]},"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"4454:154:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:16","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"hash","nameLocation":"4638:4:16","nodeType":"VariableDeclaration","scope":2152,"src":"4630:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"r","nameLocation":"4652:1:16","nodeType":"VariableDeclaration","scope":2152,"src":"4644:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"vs","nameLocation":"4663:2:16","nodeType":"VariableDeclaration","scope":2152,"src":"4655:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:16"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2152,"src":"4690:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2131,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:16"},"scope":2314,"src":"4613:222:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"5120:1345:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2171,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6016:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:16","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2184,"nodeType":"IfStatement","src":"6004:161:16","trueBody":{"id":2183,"nodeType":"Block","src":"6089:76:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:16","typeDescriptions":{}}},"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2179,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"6123:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1958_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1956,"src":"6123:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}}],"id":2181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2168,"id":2182,"nodeType":"Return","src":"6103:51:16"}]}},{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"signer","nameLocation":"6267:6:16","nodeType":"VariableDeclaration","scope":2215,"src":"6259:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2193,"initialValue":{"arguments":[{"id":2188,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"6286:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2189,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"6292:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2190,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"6295:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2191,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6298:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2187,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2194,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"6314:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:16","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2209,"nodeType":"IfStatement","src":"6310:101:16","trueBody":{"id":2208,"nodeType":"Block","src":"6336:75:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:16","typeDescriptions":{}}},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2204,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"6370:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1958_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1954,"src":"6370:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}}],"id":2206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2168,"id":2207,"nodeType":"Return","src":"6350:50:16"}]}},{"expression":{"components":[{"id":2210,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"6429:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2211,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"6437:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1958_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1953,"src":"6437:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}}],"id":2213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2168,"id":2214,"nodeType":"Return","src":"6421:37:16"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"4841:163:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:16","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"hash","nameLocation":"5037:4:16","nodeType":"VariableDeclaration","scope":2216,"src":"5029:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"v","nameLocation":"5049:1:16","nodeType":"VariableDeclaration","scope":2216,"src":"5043:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2156,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"r","nameLocation":"5060:1:16","nodeType":"VariableDeclaration","scope":2216,"src":"5052:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"s","nameLocation":"5071:1:16","nodeType":"VariableDeclaration","scope":2216,"src":"5063:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:16"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"5097:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2163,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"5106:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2166,"nodeType":"UserDefinedTypeName","pathNode":{"id":2165,"name":"RecoverError","nameLocations":["5106:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1958,"src":"5106:12:16"},"referencedDeclaration":1958,"src":"5106:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:16"},"scope":2314,"src":"5009:1456:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2248,"nodeType":"Block","src":"6692:138:16","statements":[{"assignments":[2231,2234],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:16","nodeType":"VariableDeclaration","scope":2248,"src":"6703:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"error","nameLocation":"6735:5:16","nodeType":"VariableDeclaration","scope":2248,"src":"6722:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2233,"nodeType":"UserDefinedTypeName","pathNode":{"id":2232,"name":"RecoverError","nameLocations":["6722:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":1958,"src":"6722:12:16"},"referencedDeclaration":1958,"src":"6722:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2241,"initialValue":{"arguments":[{"id":2236,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"6755:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2237,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"6761:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2238,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"6764:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2239,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"6767:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2235,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2048,2122,2216],"referencedDeclaration":2216,"src":"6744:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1958_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:16"},{"expression":{"arguments":[{"id":2243,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"6791:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1958","typeString":"enum ECDSA.RecoverError"}],"id":2242,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6779:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1958_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2245,"nodeType":"ExpressionStatement","src":"6779:18:16"},{"expression":{"id":2246,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"6814:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2229,"id":2247,"nodeType":"Return","src":"6807:16:16"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"6471:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2249,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:16","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"hash","nameLocation":"6623:4:16","nodeType":"VariableDeclaration","scope":2249,"src":"6615:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"v","nameLocation":"6635:1:16","nodeType":"VariableDeclaration","scope":2249,"src":"6629:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2220,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"r","nameLocation":"6646:1:16","nodeType":"VariableDeclaration","scope":2249,"src":"6638:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"s","nameLocation":"6657:1:16","nodeType":"VariableDeclaration","scope":2249,"src":"6649:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:16"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2249,"src":"6683:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:16"},"scope":2314,"src":"6598:232:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2258,"nodeType":"Block","src":"7206:310:16","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:16","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:16","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:16"},"nodeType":"YulFunctionCall","src":"7376:48:16"},"nodeType":"YulExpressionStatement","src":"7376:48:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:16","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:16"},"nodeType":"YulFunctionCall","src":"7437:18:16"},"nodeType":"YulExpressionStatement","src":"7437:18:16"},{"nodeType":"YulAssignment","src":"7468:32:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:16","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:16"},"nodeType":"YulFunctionCall","src":"7479:21:16"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2252,"isOffset":false,"isSlot":false,"src":"7450:4:16","valueSize":1},{"declaration":2255,"isOffset":false,"isSlot":false,"src":"7468:7:16","valueSize":1}],"id":2257,"nodeType":"InlineAssembly","src":"7353:157:16"}]},"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"6836:279:16","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2259,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:16","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"hash","nameLocation":"7160:4:16","nodeType":"VariableDeclaration","scope":2259,"src":"7152:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:16"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"message","nameLocation":"7197:7:16","nodeType":"VariableDeclaration","scope":2259,"src":"7189:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:16"},"scope":2314,"src":"7120:396:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2280,"nodeType":"Block","src":"7881:116:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2273,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"7976:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:16","memberName":"length","nodeType":"MemberAccess","src":"7976:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2271,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"7959:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1948_$","typeString":"type(library Strings)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1778,"src":"7959:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2276,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"7987:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2268,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2267,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2266,"id":2279,"nodeType":"Return","src":"7891:99:16"}]},"documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"7522:274:16","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:16","nodeType":"FunctionDefinition","parameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"s","nameLocation":"7846:1:16","nodeType":"VariableDeclaration","scope":2281,"src":"7833:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2261,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:16"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2281,"src":"7872:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:16"},"scope":2314,"src":"7801:196:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2292,"nodeType":"Block","src":"8443:290:16","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:16"},"nodeType":"YulFunctionCall","src":"8530:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:16"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:16","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:16"},"nodeType":"YulFunctionCall","src":"8554:23:16"},"nodeType":"YulExpressionStatement","src":"8554:23:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:16","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:16"},"nodeType":"YulFunctionCall","src":"8597:14:16"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:16"},"nodeType":"YulFunctionCall","src":"8590:39:16"},"nodeType":"YulExpressionStatement","src":"8590:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:16"},"nodeType":"YulFunctionCall","src":"8649:14:16"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:16"},"nodeType":"YulFunctionCall","src":"8642:34:16"},"nodeType":"YulExpressionStatement","src":"8642:34:16"},{"nodeType":"YulAssignment","src":"8689:28:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:16","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:16"},"nodeType":"YulFunctionCall","src":"8697:20:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2289,"isOffset":false,"isSlot":false,"src":"8689:4:16","valueSize":1},{"declaration":2284,"isOffset":false,"isSlot":false,"src":"8613:15:16","valueSize":1},{"declaration":2286,"isOffset":false,"isSlot":false,"src":"8665:10:16","valueSize":1}],"id":2291,"nodeType":"InlineAssembly","src":"8496:231:16"}]},"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"8003:328:16","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:16","nodeType":"FunctionDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:16","nodeType":"VariableDeclaration","scope":2293,"src":"8361:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:16","nodeType":"VariableDeclaration","scope":2293,"src":"8386:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:16"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"data","nameLocation":"8437:4:16","nodeType":"VariableDeclaration","scope":2293,"src":"8429:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:16"},"scope":2314,"src":"8336:397:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"9048:80:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2307,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"9104:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2308,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"9115:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2304,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2303,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2302,"id":2311,"nodeType":"Return","src":"9058:63:16"}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"8739:193:16","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:16","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"validator","nameLocation":"8986:9:16","nodeType":"VariableDeclaration","scope":2313,"src":"8978:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"data","nameLocation":"9010:4:16","nodeType":"VariableDeclaration","scope":2313,"src":"8997:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2297,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:16"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"9039:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:16"},"scope":2314,"src":"8937:191:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2315,"src":"369:8761:16","usedErrors":[]}],"src":"112:9019:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[2314],"EIP712":[2518],"IERC5267":[137],"Math":[3384],"ShortString":[1398],"ShortStrings":[1609],"SignedMath":[3489],"StorageSlot":[1719],"Strings":[1948]},"id":2519,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2316,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":2317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2519,"sourceUnit":2315,"src":"138:21:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2519,"sourceUnit":1610,"src":"160:29:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2519,"sourceUnit":138,"src":"190:39:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2321,"name":"IERC5267","nameLocations":["1837:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":137,"src":"1837:8:17"},"id":2322,"nodeType":"InheritanceSpecifier","src":"1837:8:17"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"231:1577:17","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":2518,"linearizedBaseContracts":[2518,137],"name":"EIP712","nameLocation":"1827:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2324,"libraryName":{"id":2323,"name":"ShortStrings","nameLocations":["1858:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1609,"src":"1858:12:17"},"nodeType":"UsingForDirective","src":"1852:25:17"},{"constant":true,"id":2329,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:17","nodeType":"VariableDeclaration","scope":2518,"src":"1883:141:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2326,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2331,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:17","nodeType":"VariableDeclaration","scope":2518,"src":"2223:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2333,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:17","nodeType":"VariableDeclaration","scope":2518,"src":"2277:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2335,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:17","nodeType":"VariableDeclaration","scope":2518,"src":"2323:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2337,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:17","nodeType":"VariableDeclaration","scope":2518,"src":"2367:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2339,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:17","nodeType":"VariableDeclaration","scope":2518,"src":"2410:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2342,"mutability":"immutable","name":"_name","nameLocation":"2487:5:17","nodeType":"VariableDeclaration","scope":2518,"src":"2457:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"},"typeName":{"id":2341,"nodeType":"UserDefinedTypeName","pathNode":{"id":2340,"name":"ShortString","nameLocations":["2457:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"2457:11:17"},"referencedDeclaration":1398,"src":"2457:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2345,"mutability":"immutable","name":"_version","nameLocation":"2528:8:17","nodeType":"VariableDeclaration","scope":2518,"src":"2498:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"},"typeName":{"id":2344,"nodeType":"UserDefinedTypeName","pathNode":{"id":2343,"name":"ShortString","nameLocations":["2498:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"2498:11:17"},"referencedDeclaration":1398,"src":"2498:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2347,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:17","nodeType":"VariableDeclaration","scope":2518,"src":"2542:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2346,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2349,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:17","nodeType":"VariableDeclaration","scope":2518,"src":"2576:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2348,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2406,"nodeType":"Block","src":"3233:376:17","statements":[{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2357,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"3243:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2360,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"3282:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2358,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3251:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1550,"src":"3251:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1398_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"src":"3243:53:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"id":2363,"nodeType":"ExpressionStatement","src":"3243:53:17"},{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2364,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"3306:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2367,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3351:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2365,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"3317:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1550,"src":"3317:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1398_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"src":"3306:62:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"id":2370,"nodeType":"ExpressionStatement","src":"3306:62:17"},{"expression":{"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2371,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3378:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2375,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"3408:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2373,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:17","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2372,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2379,"nodeType":"ExpressionStatement","src":"3378:36:17"},{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2380,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"3424:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2384,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"3457:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2382,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:17","typeDescriptions":{}}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2381,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2388,"nodeType":"ExpressionStatement","src":"3424:42:17"},{"expression":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2389,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"3477:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2390,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2393,"nodeType":"ExpressionStatement","src":"3477:30:17"},{"expression":{"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2394,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"3517:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2395,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3542:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2398,"nodeType":"ExpressionStatement","src":"3517:48:17"},{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2399,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3575:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2402,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2518","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2518","typeString":"contract EIP712"}],"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:17","typeDescriptions":{}}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2405,"nodeType":"ExpressionStatement","src":"3575:27:17"}]},"documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"2614:559:17","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2407,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"name","nameLocation":"3204:4:17","nodeType":"VariableDeclaration","scope":2407,"src":"3190:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2351,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"version","nameLocation":"3224:7:17","nodeType":"VariableDeclaration","scope":2407,"src":"3210:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2353,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:17"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[],"src":"3233:0:17"},"scope":2518,"src":"3178:431:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2432,"nodeType":"Block","src":"3757:200:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2415,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2518","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2518","typeString":"contract EIP712"}],"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:17","typeDescriptions":{}}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2417,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3788:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2419,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2421,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"3820:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2430,"nodeType":"Block","src":"3896:55:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2427,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3917:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2412,"id":2429,"nodeType":"Return","src":"3910:30:17"}]},"id":2431,"nodeType":"IfStatement","src":"3767:184:17","trueBody":{"id":2426,"nodeType":"Block","src":"3836:54:17","statements":[{"expression":{"id":2424,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"3857:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2412,"id":2425,"nodeType":"Return","src":"3850:29:17"}]}}]},"documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"3615:75:17","text":" @dev Returns the domain separator for the current chain."},"id":2433,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:17","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"3722:2:17"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"3748:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:17"},"scope":2518,"src":"3695:262:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2453,"nodeType":"Block","src":"4027:116:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2441,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"4065:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2442,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4077:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2443,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"4090:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2444,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2448,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2518","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2518","typeString":"contract EIP712"}],"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:17","typeDescriptions":{}}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2439,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2438,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2437,"id":2452,"nodeType":"Return","src":"4037:99:17"}]},"id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:17","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[],"src":"3993:2:17"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"4018:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:17"},"scope":2518,"src":"3963:180:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2469,"nodeType":"Block","src":"4854:79:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2464,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"4893:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2466,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4915:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2462,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4871:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2314_$","typeString":"type(library ECDSA)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:17","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2293,"src":"4871:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2461,"id":2468,"nodeType":"Return","src":"4864:62:17"}]},"documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"4149:614:17","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:17","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:17","nodeType":"VariableDeclaration","scope":2470,"src":"4794:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:17"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"4845:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:17"},"scope":2518,"src":"4768:165:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[136],"body":{"id":2516,"nodeType":"Block","src":"5366:288:17","statements":[{"expression":{"components":[{"hexValue":"0f","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":2493,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"5454:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2491,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"5427:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1577,"src":"5427:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1398_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":2497,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"5512:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2495,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"5482:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1398","typeString":"ShortString"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1577,"src":"5482:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1398_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1398_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2503,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2518","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2518","typeString":"contract EIP712"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:17","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:17","typeDescriptions":{}}},"id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2510,"nodeType":"ArrayTypeName","src":"5625:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2489,"id":2515,"nodeType":"Return","src":"5376:271:17"}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"4939:77:17","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:17","nodeType":"FunctionDefinition","overrides":{"id":2473,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:17"},"parameters":{"id":2472,"nodeType":"ParameterList","parameters":[],"src":"5042:2:17"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"fields","nameLocation":"5143:6:17","nodeType":"VariableDeclaration","scope":2517,"src":"5136:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2474,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"name","nameLocation":"5177:4:17","nodeType":"VariableDeclaration","scope":2517,"src":"5163:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2476,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"version","nameLocation":"5209:7:17","nodeType":"VariableDeclaration","scope":2517,"src":"5195:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2478,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:17","nodeType":"VariableDeclaration","scope":2517,"src":"5230:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:17","nodeType":"VariableDeclaration","scope":2517,"src":"5259:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"salt","nameLocation":"5306:4:17","nodeType":"VariableDeclaration","scope":2517,"src":"5298:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:17","nodeType":"VariableDeclaration","scope":2517,"src":"5324:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2487,"nodeType":"ArrayTypeName","src":"5324:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:17"},"scope":2518,"src":"5021:633:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2519,"src":"1809:3847:17","usedErrors":[1406,1408]}],"src":"113:5544:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3384]},"id":3385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2520,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"128:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3384,"linearizedBaseContracts":[3384],"name":"Math","nameLocation":"210:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2525,"members":[{"id":2522,"name":"Down","nameLocation":"245:4:18","nodeType":"EnumValue","src":"245:4:18"},{"id":2523,"name":"Up","nameLocation":"287:2:18","nodeType":"EnumValue","src":"287:2:18"},{"id":2524,"name":"Zero","nameLocation":"318:4:18","nodeType":"EnumValue","src":"318:4:18"}],"name":"Rounding","nameLocation":"226:8:18","nodeType":"EnumDefinition","src":"221:122:18"},{"body":{"id":2542,"nodeType":"Block","src":"480:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"497:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"501:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"509:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:18","trueExpression":{"id":2538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"505:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2534,"id":2541,"nodeType":"Return","src":"490:20:18"}]},"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"349:59:18","text":" @dev Returns the largest of two numbers."},"id":2543,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:18","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"a","nameLocation":"434:1:18","nodeType":"VariableDeclaration","scope":2543,"src":"426:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"b","nameLocation":"445:1:18","nodeType":"VariableDeclaration","scope":2543,"src":"437:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:18"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2543,"src":"471:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:18"},"scope":3384,"src":"413:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"655:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"672:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"676:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"684:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:18","trueExpression":{"id":2556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"680:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2552,"id":2559,"nodeType":"Return","src":"665:20:18"}]},"documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"523:60:18","text":" @dev Returns the smallest of two numbers."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:18","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"a","nameLocation":"609:1:18","nodeType":"VariableDeclaration","scope":2561,"src":"601:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"b","nameLocation":"620:1:18","nodeType":"VariableDeclaration","scope":2561,"src":"612:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:18"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2561,"src":"646:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:18"},"scope":3384,"src":"588:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"876:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"931:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"935:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"941:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"945:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2570,"id":2582,"nodeType":"Return","src":"923:28:18"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"698:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:18","nodeType":"FunctionDefinition","parameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"a","nameLocation":"830:1:18","nodeType":"VariableDeclaration","scope":2584,"src":"822:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"b","nameLocation":"841:1:18","nodeType":"VariableDeclaration","scope":2584,"src":"833:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:18"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"867:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:18"},"scope":3384,"src":"805:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"1228:123:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"1330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1339:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:18","trueExpression":{"hexValue":"30","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2593,"id":2607,"nodeType":"Return","src":"1309:35:18"}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"964:188:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:18","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"a","nameLocation":"1182:1:18","nodeType":"VariableDeclaration","scope":2609,"src":"1174:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"b","nameLocation":"1193:1:18","nodeType":"VariableDeclaration","scope":2609,"src":"1185:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:18"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"1219:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:18"},"scope":3384,"src":"1157:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2731,"nodeType":"Block","src":"1765:4115:18","statements":[{"id":2730,"nodeType":"UncheckedBlock","src":"1775:4099:18","statements":[{"assignments":[2622],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:18","nodeType":"VariableDeclaration","scope":2730,"src":"2096:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2623,"nodeType":"VariableDeclarationStatement","src":"2096:13:18"},{"assignments":[2625],"declarations":[{"constant":false,"id":2625,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:18","nodeType":"VariableDeclaration","scope":2730,"src":"2168:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2626,"nodeType":"VariableDeclarationStatement","src":"2168:13:18"},{"AST":{"nodeType":"YulBlock","src":"2248:157:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:18"},"nodeType":"YulFunctionCall","src":"2289:6:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:18"},"nodeType":"YulFunctionCall","src":"2276:20:18"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:18","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:18"},"nodeType":"YulFunctionCall","src":"2322:9:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:18"}]},{"nodeType":"YulAssignment","src":"2348:43:18","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:18"},"nodeType":"YulFunctionCall","src":"2361:14:18"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:18"},"nodeType":"YulFunctionCall","src":"2377:13:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:18"},"nodeType":"YulFunctionCall","src":"2357:34:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2622,"isOffset":false,"isSlot":false,"src":"2313:5:18","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"2369:5:18","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"2384:5:18","valueSize":1},{"declaration":2625,"isOffset":false,"isSlot":false,"src":"2348:5:18","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"2283:1:18","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"2326:1:18","valueSize":1},{"declaration":2614,"isOffset":false,"isSlot":false,"src":"2286:1:18","valueSize":1},{"declaration":2614,"isOffset":false,"isSlot":false,"src":"2329:1:18","valueSize":1}],"id":2627,"nodeType":"InlineAssembly","src":"2239:166:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"2486:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2636,"nodeType":"IfStatement","src":"2482:368:18","trueBody":{"id":2635,"nodeType":"Block","src":"2498:352:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"2816:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2632,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"2824:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2620,"id":2634,"nodeType":"Return","src":"2809:26:18"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"2960:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2639,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"2974:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2643,"nodeType":"ExpressionStatement","src":"2952:53:18"},{"assignments":[2645],"declarations":[{"constant":false,"id":2645,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:18","nodeType":"VariableDeclaration","scope":2730,"src":"3261:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"nodeType":"VariableDeclarationStatement","src":"3261:17:18"},{"AST":{"nodeType":"YulBlock","src":"3301:291:18","statements":[{"nodeType":"YulAssignment","src":"3370:38:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:18"},"nodeType":"YulFunctionCall","src":"3383:25:18"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:18"}]},{"nodeType":"YulAssignment","src":"3490:41:18","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:18"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:18"},"nodeType":"YulFunctionCall","src":"3510:20:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:18"},"nodeType":"YulFunctionCall","src":"3499:32:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:18"}]},{"nodeType":"YulAssignment","src":"3548:30:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:18"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:18"},"nodeType":"YulFunctionCall","src":"3557:21:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2616,"isOffset":false,"isSlot":false,"src":"3396:11:18","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"3524:5:18","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"3548:5:18","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"3561:5:18","valueSize":1},{"declaration":2625,"isOffset":false,"isSlot":false,"src":"3490:5:18","valueSize":1},{"declaration":2625,"isOffset":false,"isSlot":false,"src":"3503:5:18","valueSize":1},{"declaration":2645,"isOffset":false,"isSlot":false,"src":"3370:9:18","valueSize":1},{"declaration":2645,"isOffset":false,"isSlot":false,"src":"3513:9:18","valueSize":1},{"declaration":2645,"isOffset":false,"isSlot":false,"src":"3568:9:18","valueSize":1},{"declaration":2612,"isOffset":false,"isSlot":false,"src":"3390:1:18","valueSize":1},{"declaration":2614,"isOffset":false,"isSlot":false,"src":"3393:1:18","valueSize":1}],"id":2647,"nodeType":"InlineAssembly","src":"3292:300:18"},{"assignments":[2649],"declarations":[{"constant":false,"id":2649,"mutability":"mutable","name":"twos","nameLocation":"3907:4:18","nodeType":"VariableDeclaration","scope":2730,"src":"3899:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2657,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3914:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:18","subExpression":{"id":2651,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3930:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:18"},{"AST":{"nodeType":"YulBlock","src":"3969:362:18","statements":[{"nodeType":"YulAssignment","src":"4034:37:18","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:18"},"nodeType":"YulFunctionCall","src":"4049:22:18"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:18"}]},{"nodeType":"YulAssignment","src":"4138:25:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:18"},"nodeType":"YulFunctionCall","src":"4147:16:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:18"}]},{"nodeType":"YulAssignment","src":"4278:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:18","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:18"},"nodeType":"YulFunctionCall","src":"4294:12:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:18"},"nodeType":"YulFunctionCall","src":"4290:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:18"},"nodeType":"YulFunctionCall","src":"4286:31:18"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2616,"isOffset":false,"isSlot":false,"src":"4034:11:18","valueSize":1},{"declaration":2616,"isOffset":false,"isSlot":false,"src":"4053:11:18","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"4138:5:18","valueSize":1},{"declaration":2622,"isOffset":false,"isSlot":false,"src":"4151:5:18","valueSize":1},{"declaration":2649,"isOffset":false,"isSlot":false,"src":"4066:4:18","valueSize":1},{"declaration":2649,"isOffset":false,"isSlot":false,"src":"4158:4:18","valueSize":1},{"declaration":2649,"isOffset":false,"isSlot":false,"src":"4278:4:18","valueSize":1},{"declaration":2649,"isOffset":false,"isSlot":false,"src":"4301:4:18","valueSize":1},{"declaration":2649,"isOffset":false,"isSlot":false,"src":"4308:4:18","valueSize":1}],"id":2658,"nodeType":"InlineAssembly","src":"3960:371:18"},{"expression":{"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2659,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4406:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2661,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"4414:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2664,"nodeType":"ExpressionStatement","src":"4397:21:18"},{"assignments":[2666],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:18","nodeType":"VariableDeclaration","scope":2730,"src":"4736:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2673,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2668,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"4759:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:18"},{"expression":{"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2674,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4992:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"5007:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2677,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5021:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2681,"nodeType":"ExpressionStatement","src":"4992:36:18"},{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2682,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2684,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"5076:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2685,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5090:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"5061:36:18"},{"expression":{"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2690,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5131:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2692,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"5146:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2693,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2697,"nodeType":"ExpressionStatement","src":"5131:36:18"},{"expression":{"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2698,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5201:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"5216:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2701,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2705,"nodeType":"ExpressionStatement","src":"5201:36:18"},{"expression":{"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2706,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"5286:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2709,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5300:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2713,"nodeType":"ExpressionStatement","src":"5271:36:18"},{"expression":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2714,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5342:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2716,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"5357:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2717,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2721,"nodeType":"ExpressionStatement","src":"5342:36:18"},{"expression":{"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"5812:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"5821:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2724,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5829:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2727,"nodeType":"ExpressionStatement","src":"5812:24:18"},{"expression":{"id":2728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"5857:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2620,"id":2729,"nodeType":"Return","src":"5850:13:18"}]}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"1357:305:18","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2732,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:18","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"x","nameLocation":"1691:1:18","nodeType":"VariableDeclaration","scope":2732,"src":"1683:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"y","nameLocation":"1702:1:18","nodeType":"VariableDeclaration","scope":2732,"src":"1694:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:18","nodeType":"VariableDeclaration","scope":2732,"src":"1705:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:18"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"result","nameLocation":"1757:6:18","nodeType":"VariableDeclaration","scope":2732,"src":"1749:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:18"},"scope":3384,"src":"1667:4213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2775,"nodeType":"Block","src":"6122:189:18","statements":[{"assignments":[2748],"declarations":[{"constant":false,"id":2748,"mutability":"mutable","name":"result","nameLocation":"6140:6:18","nodeType":"VariableDeclaration","scope":2775,"src":"6132:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2754,"initialValue":{"arguments":[{"id":2750,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6156:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2751,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"6159:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2752,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6162:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2749,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2732,2776],"referencedDeclaration":2732,"src":"6149:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2755,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"6188:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2756,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6200:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2525_$","typeString":"type(enum Math.Rounding)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"6200:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"src":"6188:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2760,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2761,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"6225:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2762,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6228:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2759,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2772,"nodeType":"IfStatement","src":"6184:98:18","trueBody":{"id":2771,"nodeType":"Block","src":"6246:36:18","statements":[{"expression":{"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"6260:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2770,"nodeType":"ExpressionStatement","src":"6260:11:18"}]}},{"expression":{"id":2773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"6298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2746,"id":2774,"nodeType":"Return","src":"6291:13:18"}]},"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"5886:121:18","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2776,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:18","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"x","nameLocation":"6036:1:18","nodeType":"VariableDeclaration","scope":2776,"src":"6028:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2737,"mutability":"mutable","name":"y","nameLocation":"6047:1:18","nodeType":"VariableDeclaration","scope":2776,"src":"6039:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:18","nodeType":"VariableDeclaration","scope":2776,"src":"6050:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:18","nodeType":"VariableDeclaration","scope":2776,"src":"6071:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"typeName":{"id":2741,"nodeType":"UserDefinedTypeName","pathNode":{"id":2740,"name":"Rounding","nameLocations":["6071:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"6071:8:18"},"referencedDeclaration":2525,"src":"6071:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:18"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2776,"src":"6113:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:18"},"scope":3384,"src":"6012:299:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2887,"nodeType":"Block","src":"6587:1585:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"6601:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2790,"nodeType":"IfStatement","src":"6597:45:18","trueBody":{"id":2789,"nodeType":"Block","src":"6609:33:18","statements":[{"expression":{"hexValue":"30","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2783,"id":2788,"nodeType":"Return","src":"6623:8:18"}]}},{"assignments":[2792],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"result","nameLocation":"7329:6:18","nodeType":"VariableDeclaration","scope":2887,"src":"7321:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2801,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"7349:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2794,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3056,3092],"referencedDeclaration":3056,"src":"7344:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:18"},{"id":2886,"nodeType":"UncheckedBlock","src":"7758:408:18","statements":[{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7782:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7792:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"7801:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7805:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"7782:35:18"},{"expression":{"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7831:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7841:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"7850:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7854:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2823,"nodeType":"ExpressionStatement","src":"7831:35:18"},{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7890:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"7899:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2827,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7903:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2834,"nodeType":"ExpressionStatement","src":"7880:35:18"},{"expression":{"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7929:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7939:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"7948:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7952:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2845,"nodeType":"ExpressionStatement","src":"7929:35:18"},{"expression":{"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7978:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"7988:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"7997:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8001:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2856,"nodeType":"ExpressionStatement","src":"7978:35:18"},{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8027:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8037:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2859,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"8046:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8050:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"8027:35:18"},{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8076:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8086:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"8095:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8099:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"8076:35:18"},{"expression":{"arguments":[{"id":2880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8136:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"8144:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"8148:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2879,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"8132:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2783,"id":2885,"nodeType":"Return","src":"8125:30:18"}]}]},"documentation":{"id":2777,"nodeType":"StructuredDocumentation","src":"6317:208:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2888,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:18","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"a","nameLocation":"6552:1:18","nodeType":"VariableDeclaration","scope":2888,"src":"6544:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:18"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2888,"src":"6578:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:18"},"scope":3384,"src":"6530:1642:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"8348:161:18","statements":[{"id":2922,"nodeType":"UncheckedBlock","src":"8358:145:18","statements":[{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"result","nameLocation":"8390:6:18","nodeType":"VariableDeclaration","scope":2922,"src":"8382:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2904,"initialValue":{"arguments":[{"id":2902,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"8404:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2901,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2888,2924],"referencedDeclaration":2888,"src":"8399:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8427:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"8437:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2907,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"8449:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2525_$","typeString":"type(enum Math.Rounding)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"8449:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"src":"8437:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8464:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8473:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"8482:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:18","trueExpression":{"hexValue":"31","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2898,"id":2921,"nodeType":"Return","src":"8420:72:18"}]}]},"documentation":{"id":2889,"nodeType":"StructuredDocumentation","src":"8178:89:18","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:18","nodeType":"FunctionDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"a","nameLocation":"8294:1:18","nodeType":"VariableDeclaration","scope":2924,"src":"8286:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2894,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:18","nodeType":"VariableDeclaration","scope":2924,"src":"8297:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"typeName":{"id":2893,"nodeType":"UserDefinedTypeName","pathNode":{"id":2892,"name":"Rounding","nameLocations":["8297:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"8297:8:18"},"referencedDeclaration":2525,"src":"8297:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:18"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"8339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:18"},"scope":3384,"src":"8272:237:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3055,"nodeType":"Block","src":"8694:922:18","statements":[{"assignments":[2933],"declarations":[{"constant":false,"id":2933,"mutability":"mutable","name":"result","nameLocation":"8712:6:18","nodeType":"VariableDeclaration","scope":3055,"src":"8704:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2935,"initialValue":{"hexValue":"30","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:18"},{"id":3052,"nodeType":"UncheckedBlock","src":"8732:855:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"8760:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"8756:99:18","trueBody":{"id":2949,"nodeType":"Block","src":"8778:77:18","statements":[{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"8796:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ExpressionStatement","src":"8796:13:18"},{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"8827:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"8827:13:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"8872:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2965,"nodeType":"IfStatement","src":"8868:96:18","trueBody":{"id":2964,"nodeType":"Block","src":"8889:75:18","statements":[{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"8907:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"8907:12:18"},{"expression":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"8937:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2963,"nodeType":"ExpressionStatement","src":"8937:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"8981:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2980,"nodeType":"IfStatement","src":"8977:96:18","trueBody":{"id":2979,"nodeType":"Block","src":"8998:75:18","statements":[{"expression":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9016:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2974,"nodeType":"ExpressionStatement","src":"9016:12:18"},{"expression":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"9046:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2978,"nodeType":"ExpressionStatement","src":"9046:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9090:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2995,"nodeType":"IfStatement","src":"9086:96:18","trueBody":{"id":2994,"nodeType":"Block","src":"9107:75:18","statements":[{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9125:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2989,"nodeType":"ExpressionStatement","src":"9125:12:18"},{"expression":{"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"9155:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2993,"nodeType":"ExpressionStatement","src":"9155:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9199:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3010,"nodeType":"IfStatement","src":"9195:93:18","trueBody":{"id":3009,"nodeType":"Block","src":"9215:73:18","statements":[{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9233:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3004,"nodeType":"ExpressionStatement","src":"9233:11:18"},{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"9262:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"9262:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9305:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"9301:93:18","trueBody":{"id":3024,"nodeType":"Block","src":"9321:73:18","statements":[{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9339:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3019,"nodeType":"ExpressionStatement","src":"9339:11:18"},{"expression":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"9368:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3023,"nodeType":"ExpressionStatement","src":"9368:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9411:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3040,"nodeType":"IfStatement","src":"9407:93:18","trueBody":{"id":3039,"nodeType":"Block","src":"9427:73:18","statements":[{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9445:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3034,"nodeType":"ExpressionStatement","src":"9445:11:18"},{"expression":{"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"9474:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3038,"nodeType":"ExpressionStatement","src":"9474:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"9517:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3051,"nodeType":"IfStatement","src":"9513:64:18","trueBody":{"id":3050,"nodeType":"Block","src":"9533:44:18","statements":[{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"9551:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3049,"nodeType":"ExpressionStatement","src":"9551:11:18"}]}}]},{"expression":{"id":3053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"9603:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2931,"id":3054,"nodeType":"Return","src":"9596:13:18"}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"8515:113:18","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3056,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:18","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"value","nameLocation":"8655:5:18","nodeType":"VariableDeclaration","scope":3056,"src":"8647:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:18"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3056,"src":"8685:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:18"},"scope":3384,"src":"8633:983:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3091,"nodeType":"Block","src":"9849:165:18","statements":[{"id":3090,"nodeType":"UncheckedBlock","src":"9859:149:18","statements":[{"assignments":[3068],"declarations":[{"constant":false,"id":3068,"mutability":"mutable","name":"result","nameLocation":"9891:6:18","nodeType":"VariableDeclaration","scope":3090,"src":"9883:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3072,"initialValue":{"arguments":[{"id":3070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"9905:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3069,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3056,3092],"referencedDeclaration":3056,"src":"9900:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"9932:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"9942:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3075,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"9954:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2525_$","typeString":"type(enum Math.Rounding)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"9954:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"src":"9942:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"9974:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"9983:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:18","trueExpression":{"hexValue":"31","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3066,"id":3089,"nodeType":"Return","src":"9925:72:18"}]}]},"documentation":{"id":3057,"nodeType":"StructuredDocumentation","src":"9622:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3092,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:18","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"value","nameLocation":"9791:5:18","nodeType":"VariableDeclaration","scope":3092,"src":"9783:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:18","nodeType":"VariableDeclaration","scope":3092,"src":"9798:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"typeName":{"id":3061,"nodeType":"UserDefinedTypeName","pathNode":{"id":3060,"name":"Rounding","nameLocations":["9798:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"9798:8:18"},"referencedDeclaration":2525,"src":"9798:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:18"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3092,"src":"9840:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:18"},"scope":3384,"src":"9769:245:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3220,"nodeType":"Block","src":"10201:854:18","statements":[{"assignments":[3101],"declarations":[{"constant":false,"id":3101,"mutability":"mutable","name":"result","nameLocation":"10219:6:18","nodeType":"VariableDeclaration","scope":3220,"src":"10211:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3103,"initialValue":{"hexValue":"30","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:18"},{"id":3217,"nodeType":"UncheckedBlock","src":"10239:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10267:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"IfStatement","src":"10263:103:18","trueBody":{"id":3119,"nodeType":"Block","src":"10286:80:18","statements":[{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10304:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"nodeType":"ExpressionStatement","src":"10304:17:18"},{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10339:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3118,"nodeType":"ExpressionStatement","src":"10339:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10383:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3137,"nodeType":"IfStatement","src":"10379:103:18","trueBody":{"id":3136,"nodeType":"Block","src":"10402:80:18","statements":[{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10420:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"10420:17:18"},{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10455:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"nodeType":"ExpressionStatement","src":"10455:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10499:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3154,"nodeType":"IfStatement","src":"10495:103:18","trueBody":{"id":3153,"nodeType":"Block","src":"10518:80:18","statements":[{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10536:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3148,"nodeType":"ExpressionStatement","src":"10536:17:18"},{"expression":{"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10571:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3152,"nodeType":"ExpressionStatement","src":"10571:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10615:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"IfStatement","src":"10611:100:18","trueBody":{"id":3170,"nodeType":"Block","src":"10633:78:18","statements":[{"expression":{"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10651:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3165,"nodeType":"ExpressionStatement","src":"10651:16:18"},{"expression":{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10685:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3169,"nodeType":"ExpressionStatement","src":"10685:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10728:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3188,"nodeType":"IfStatement","src":"10724:100:18","trueBody":{"id":3187,"nodeType":"Block","src":"10746:78:18","statements":[{"expression":{"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10764:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3182,"nodeType":"ExpressionStatement","src":"10764:16:18"},{"expression":{"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10798:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3186,"nodeType":"ExpressionStatement","src":"10798:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10841:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3205,"nodeType":"IfStatement","src":"10837:100:18","trueBody":{"id":3204,"nodeType":"Block","src":"10859:78:18","statements":[{"expression":{"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10877:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3199,"nodeType":"ExpressionStatement","src":"10877:16:18"},{"expression":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10911:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3203,"nodeType":"ExpressionStatement","src":"10911:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"10954:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"IfStatement","src":"10950:66:18","trueBody":{"id":3215,"nodeType":"Block","src":"10972:44:18","statements":[{"expression":{"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3211,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"10990:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3214,"nodeType":"ExpressionStatement","src":"10990:11:18"}]}}]},{"expression":{"id":3218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"11042:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3099,"id":3219,"nodeType":"Return","src":"11035:13:18"}]},"documentation":{"id":3093,"nodeType":"StructuredDocumentation","src":"10020:114:18","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3221,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:18","nodeType":"FunctionDefinition","parameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"value","nameLocation":"10162:5:18","nodeType":"VariableDeclaration","scope":3221,"src":"10154:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:18"},"returnParameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3221,"src":"10192:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:18"},"scope":3384,"src":"10139:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3256,"nodeType":"Block","src":"11290:167:18","statements":[{"id":3255,"nodeType":"UncheckedBlock","src":"11300:151:18","statements":[{"assignments":[3233],"declarations":[{"constant":false,"id":3233,"mutability":"mutable","name":"result","nameLocation":"11332:6:18","nodeType":"VariableDeclaration","scope":3255,"src":"11324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3237,"initialValue":{"arguments":[{"id":3235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"11347:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3234,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3221,3257],"referencedDeclaration":3221,"src":"11341:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"11374:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"11384:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3240,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"11396:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2525_$","typeString":"type(enum Math.Rounding)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"11396:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"src":"11384:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"11417:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"11426:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:18","trueExpression":{"hexValue":"31","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3231,"id":3254,"nodeType":"Return","src":"11367:73:18"}]}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"11061:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3257,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:18","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"value","nameLocation":"11232:5:18","nodeType":"VariableDeclaration","scope":3257,"src":"11224:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:18","nodeType":"VariableDeclaration","scope":3257,"src":"11239:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"typeName":{"id":3226,"nodeType":"UserDefinedTypeName","pathNode":{"id":3225,"name":"Rounding","nameLocations":["11239:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"11239:8:18"},"referencedDeclaration":2525,"src":"11239:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:18"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3257,"src":"11281:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:18"},"scope":3384,"src":"11209:248:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3343,"nodeType":"Block","src":"11771:600:18","statements":[{"assignments":[3266],"declarations":[{"constant":false,"id":3266,"mutability":"mutable","name":"result","nameLocation":"11789:6:18","nodeType":"VariableDeclaration","scope":3343,"src":"11781:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3268,"initialValue":{"hexValue":"30","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:18"},{"id":3340,"nodeType":"UncheckedBlock","src":"11809:533:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"11837:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"IfStatement","src":"11833:98:18","trueBody":{"id":3282,"nodeType":"Block","src":"11855:76:18","statements":[{"expression":{"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"11873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3277,"nodeType":"ExpressionStatement","src":"11873:13:18"},{"expression":{"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"11904:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3281,"nodeType":"ExpressionStatement","src":"11904:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"11948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3298,"nodeType":"IfStatement","src":"11944:95:18","trueBody":{"id":3297,"nodeType":"Block","src":"11965:74:18","statements":[{"expression":{"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"11983:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3292,"nodeType":"ExpressionStatement","src":"11983:12:18"},{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"12013:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3296,"nodeType":"ExpressionStatement","src":"12013:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"12056:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3313,"nodeType":"IfStatement","src":"12052:95:18","trueBody":{"id":3312,"nodeType":"Block","src":"12073:74:18","statements":[{"expression":{"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"12091:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3307,"nodeType":"ExpressionStatement","src":"12091:12:18"},{"expression":{"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"12121:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3311,"nodeType":"ExpressionStatement","src":"12121:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"12164:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3328,"nodeType":"IfStatement","src":"12160:95:18","trueBody":{"id":3327,"nodeType":"Block","src":"12181:74:18","statements":[{"expression":{"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"12199:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3322,"nodeType":"ExpressionStatement","src":"12199:12:18"},{"expression":{"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"12229:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3326,"nodeType":"ExpressionStatement","src":"12229:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"12272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3339,"nodeType":"IfStatement","src":"12268:64:18","trueBody":{"id":3338,"nodeType":"Block","src":"12288:44:18","statements":[{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"12306:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3337,"nodeType":"ExpressionStatement","src":"12306:11:18"}]}}]},{"expression":{"id":3341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"12358:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3264,"id":3342,"nodeType":"Return","src":"12351:13:18"}]},"documentation":{"id":3258,"nodeType":"StructuredDocumentation","src":"11463:240:18","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:18","nodeType":"FunctionDefinition","parameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"value","nameLocation":"11732:5:18","nodeType":"VariableDeclaration","scope":3344,"src":"11724:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:18"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"11762:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:18"},"scope":3384,"src":"11708:663:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3382,"nodeType":"Block","src":"12608:174:18","statements":[{"id":3381,"nodeType":"UncheckedBlock","src":"12618:158:18","statements":[{"assignments":[3356],"declarations":[{"constant":false,"id":3356,"mutability":"mutable","name":"result","nameLocation":"12650:6:18","nodeType":"VariableDeclaration","scope":3381,"src":"12642:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3360,"initialValue":{"arguments":[{"id":3358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"12666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3357,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3344,3383],"referencedDeclaration":3344,"src":"12659:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"12693:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"12703:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3363,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12715:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2525_$","typeString":"type(enum Math.Rounding)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2523,"src":"12715:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"src":"12703:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"12736:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"12751:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:18","trueExpression":{"hexValue":"31","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3354,"id":3380,"nodeType":"Return","src":"12686:79:18"}]}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"12377:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:18","nodeType":"FunctionDefinition","parameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"value","nameLocation":"12550:5:18","nodeType":"VariableDeclaration","scope":3383,"src":"12542:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:18","nodeType":"VariableDeclaration","scope":3383,"src":"12557:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"},"typeName":{"id":3349,"nodeType":"UserDefinedTypeName","pathNode":{"id":3348,"name":"Rounding","nameLocations":["12557:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2525,"src":"12557:8:18"},"referencedDeclaration":2525,"src":"12557:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2525","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:18"},"returnParameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"12599:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:18"},"scope":3384,"src":"12526:256:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3385,"src":"202:12582:18","usedErrors":[]}],"src":"103:12682:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3489]},"id":3490,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3386,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3387,"nodeType":"StructuredDocumentation","src":"134:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3489,"linearizedBaseContracts":[3489],"name":"SignedMath","nameLocation":"223:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3404,"nodeType":"Block","src":"375:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"392:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"396:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3401,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"404:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:19","trueExpression":{"id":3400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"400:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3396,"id":3403,"nodeType":"Return","src":"385:20:19"}]},"documentation":{"id":3388,"nodeType":"StructuredDocumentation","src":"240:66:19","text":" @dev Returns the largest of two signed numbers."},"id":3405,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:19","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"a","nameLocation":"331:1:19","nodeType":"VariableDeclaration","scope":3405,"src":"324:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3389,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"b","nameLocation":"341:1:19","nodeType":"VariableDeclaration","scope":3405,"src":"334:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3391,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:19"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3405,"src":"367:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3394,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:19"},"scope":3489,"src":"311:101:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3422,"nodeType":"Block","src":"554:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"571:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"575:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"583:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:19","trueExpression":{"id":3418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"579:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3414,"id":3421,"nodeType":"Return","src":"564:20:19"}]},"documentation":{"id":3406,"nodeType":"StructuredDocumentation","src":"418:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":3423,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:19","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"a","nameLocation":"510:1:19","nodeType":"VariableDeclaration","scope":3423,"src":"503:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3407,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"b","nameLocation":"520:1:19","nodeType":"VariableDeclaration","scope":3423,"src":"513:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3409,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:19"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3423,"src":"546:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3412,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:19"},"scope":3489,"src":"490:101:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"796:162:19","statements":[{"assignments":[3434],"declarations":[{"constant":false,"id":3434,"mutability":"mutable","name":"x","nameLocation":"865:1:19","nodeType":"VariableDeclaration","scope":3466,"src":"858:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3433,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3447,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"870:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"874:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"881:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"885:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"910:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3453,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"930:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:19","typeDescriptions":{}}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3449,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:19","typeDescriptions":{}}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"944:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"948:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3432,"id":3465,"nodeType":"Return","src":"903:48:19"}]},"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"597:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:19","nodeType":"FunctionDefinition","parameters":{"id":3429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"a","nameLocation":"752:1:19","nodeType":"VariableDeclaration","scope":3467,"src":"745:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3425,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"b","nameLocation":"762:1:19","nodeType":"VariableDeclaration","scope":3467,"src":"755:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3427,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:19"},"returnParameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3467,"src":"788:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3430,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:19"},"scope":3489,"src":"728:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3487,"nodeType":"Block","src":"1102:158:19","statements":[{"id":3486,"nodeType":"UncheckedBlock","src":"1112:142:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"1227:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:19","subExpression":{"id":3481,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"1241:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:19","trueExpression":{"id":3480,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"1236:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:19","typeDescriptions":{}}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3474,"id":3485,"nodeType":"Return","src":"1212:31:19"}]}]},"documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"964:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:19","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"n","nameLocation":"1067:1:19","nodeType":"VariableDeclaration","scope":3488,"src":"1060:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3469,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:19"},"returnParameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"1093:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:19"},"scope":3489,"src":"1047:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3490,"src":"215:1047:19","usedErrors":[]}],"src":"109:1154:19"},"id":19},"contracts/gCOTI.sol":{"ast":{"absolutePath":"contracts/gCOTI.sol","exportedSymbols":{"ERC20":[832],"ERC20Burnable":[954],"ERC20Capped":[1019],"ERC20Pausable":[1056],"ERC20Permit":[1228],"Ownable":[112],"gCOTI":[3619]},"id":3620,"nodeType":"SourceUnit","nodes":[{"id":3491,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"0:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3620,"sourceUnit":833,"src":"26:68:20","symbolAliases":[{"foreign":{"id":3492,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"34:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","id":3495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3620,"sourceUnit":1020,"src":"95:91:20","symbolAliases":[{"foreign":{"id":3494,"name":"ERC20Capped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"103:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":3497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3620,"sourceUnit":955,"src":"187:95:20","symbolAliases":[{"foreign":{"id":3496,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"195:13:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":3499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3620,"sourceUnit":1057,"src":"283:95:20","symbolAliases":[{"foreign":{"id":3498,"name":"ERC20Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"291:13:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3620,"sourceUnit":113,"src":"379:67:20","symbolAliases":[{"foreign":{"id":3500,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"387:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":3503,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3620,"sourceUnit":1229,"src":"447:91:20","symbolAliases":[{"foreign":{"id":3502,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"455:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3504,"name":"ERC20","nameLocations":["558:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"558:5:20"},"id":3505,"nodeType":"InheritanceSpecifier","src":"558:5:20"},{"baseName":{"id":3506,"name":"ERC20Capped","nameLocations":["565:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"565:11:20"},"id":3507,"nodeType":"InheritanceSpecifier","src":"565:11:20"},{"baseName":{"id":3508,"name":"ERC20Burnable","nameLocations":["578:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"578:13:20"},"id":3509,"nodeType":"InheritanceSpecifier","src":"578:13:20"},{"baseName":{"id":3510,"name":"ERC20Pausable","nameLocations":["593:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"593:13:20"},"id":3511,"nodeType":"InheritanceSpecifier","src":"593:13:20"},{"baseName":{"id":3512,"name":"Ownable","nameLocations":["608:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"608:7:20"},"id":3513,"nodeType":"InheritanceSpecifier","src":"608:7:20"},{"baseName":{"id":3514,"name":"ERC20Permit","nameLocations":["617:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1228,"src":"617:11:20"},"id":3515,"nodeType":"InheritanceSpecifier","src":"617:11:20"}],"canonicalName":"gCOTI","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3619,"linearizedBaseContracts":[3619,1228,2518,137,1289,112,1056,245,954,1019,832,1253,910,1319],"name":"gCOTI","nameLocation":"549:5:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3545,"nodeType":"Block","src":"850:88:20","statements":[{"expression":{"arguments":[{"id":3537,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"866:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3538,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"877:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3536,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[3618],"referencedDeclaration":3618,"src":"860:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"860:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3540,"nodeType":"ExpressionStatement","src":"860:29:20"},{"expression":{"arguments":[{"id":3542,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"918:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3541,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"899:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"899:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3544,"nodeType":"ExpressionStatement","src":"899:32:20"}]},"id":3546,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"434f544920547265617375727920476f7665726e616e636520546f6b656e","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"723:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b433640bec62be41bedacf84c5f656c83356800ed76863b7dcd98c29b03775ce","typeString":"literal_string \"COTI Treasury Governance Token\""},"value":"COTI Treasury Governance Token"},{"hexValue":"67434f5449","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"757:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f49aa1991fd76ee2f354247b726ad0815e26adec9b07b974b87700ef2ae9f8ff","typeString":"literal_string \"gCOTI\""},"value":"gCOTI"}],"id":3526,"kind":"baseConstructorSpecifier","modifierName":{"id":3523,"name":"ERC20","nameLocations":["717:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"717:5:20"},"nodeType":"ModifierInvocation","src":"717:48:20"},{"arguments":[{"id":3528,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"786:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3529,"kind":"baseConstructorSpecifier","modifierName":{"id":3527,"name":"ERC20Capped","nameLocations":["774:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"774:11:20"},"nodeType":"ModifierInvocation","src":"774:24:20"},{"arguments":[],"id":3531,"kind":"baseConstructorSpecifier","modifierName":{"id":3530,"name":"Ownable","nameLocations":["807:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"807:7:20"},"nodeType":"ModifierInvocation","src":"807:9:20"},{"arguments":[{"hexValue":"67434f5449","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"837:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f49aa1991fd76ee2f354247b726ad0815e26adec9b07b974b87700ef2ae9f8ff","typeString":"literal_string \"gCOTI\""},"value":"gCOTI"}],"id":3534,"kind":"baseConstructorSpecifier","modifierName":{"id":3532,"name":"ERC20Permit","nameLocations":["825:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1228,"src":"825:11:20"},"nodeType":"ModifierInvocation","src":"825:20:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"initialOwner","nameLocation":"655:12:20","nodeType":"VariableDeclaration","scope":3546,"src":"647:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3516,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3519,"mutability":"mutable","name":"recipient","nameLocation":"677:9:20","nodeType":"VariableDeclaration","scope":3546,"src":"669:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3521,"mutability":"mutable","name":"totalSupply","nameLocation":"696:11:20","nodeType":"VariableDeclaration","scope":3546,"src":"688:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"688:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:62:20"},"returnParameters":{"id":3535,"nodeType":"ParameterList","parameters":[],"src":"850:0:20"},"scope":3619,"src":"635:303:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3554,"nodeType":"Block","src":"978:25:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3551,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"988:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"988:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3553,"nodeType":"ExpressionStatement","src":"988:8:20"}]},"functionSelector":"8456cb59","id":3555,"implemented":true,"kind":"function","modifiers":[{"id":3549,"kind":"modifierInvocation","modifierName":{"id":3548,"name":"onlyOwner","nameLocations":["968:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"968:9:20"},"nodeType":"ModifierInvocation","src":"968:9:20"}],"name":"pause","nameLocation":"953:5:20","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[],"src":"958:2:20"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[],"src":"978:0:20"},"scope":3619,"src":"944:59:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3563,"nodeType":"Block","src":"1045:27:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3560,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"1055:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1055:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3562,"nodeType":"ExpressionStatement","src":"1055:10:20"}]},"functionSelector":"3f4ba83a","id":3564,"implemented":true,"kind":"function","modifiers":[{"id":3558,"kind":"modifierInvocation","modifierName":{"id":3557,"name":"onlyOwner","nameLocations":["1035:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1035:9:20"},"nodeType":"ModifierInvocation","src":"1035:9:20"}],"name":"unpause","nameLocation":"1018:7:20","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[],"src":"1025:2:20"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[],"src":"1045:0:20"},"scope":3619,"src":"1009:63:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3578,"nodeType":"Block","src":"1137:34:20","statements":[{"expression":{"arguments":[{"id":3574,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"1153:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"1157:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3573,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[3618],"referencedDeclaration":3618,"src":"1147:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3577,"nodeType":"ExpressionStatement","src":"1147:17:20"}]},"functionSelector":"40c10f19","id":3579,"implemented":true,"kind":"function","modifiers":[{"id":3571,"kind":"modifierInvocation","modifierName":{"id":3570,"name":"onlyOwner","nameLocations":["1127:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1127:9:20"},"nodeType":"ModifierInvocation","src":"1127:9:20"}],"name":"mint","nameLocation":"1087:4:20","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"to","nameLocation":"1100:2:20","nodeType":"VariableDeclaration","scope":3579,"src":"1092:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3565,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"amount","nameLocation":"1112:6:20","nodeType":"VariableDeclaration","scope":3579,"src":"1104:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1091:28:20"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[],"src":"1137:0:20"},"scope":3619,"src":"1078:93:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[820,1055],"body":{"id":3599,"nodeType":"Block","src":"1357:61:20","statements":[{"expression":{"arguments":[{"id":3594,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"1394:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3595,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"1400:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3596,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"1404:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3591,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1367:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_gCOTI_$3619_$","typeString":"type(contract super gCOTI)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1373:20:20","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1055,"src":"1367:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1367:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3598,"nodeType":"ExpressionStatement","src":"1367:44:20"}]},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1254:20:20","nodeType":"FunctionDefinition","overrides":{"id":3589,"nodeType":"OverrideSpecifier","overrides":[{"id":3587,"name":"ERC20","nameLocations":["1335:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1335:5:20"},{"id":3588,"name":"ERC20Pausable","nameLocations":["1342:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"1342:13:20"}],"src":"1326:30:20"},"parameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"from","nameLocation":"1283:4:20","nodeType":"VariableDeclaration","scope":3600,"src":"1275:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3580,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"to","nameLocation":"1297:2:20","nodeType":"VariableDeclaration","scope":3600,"src":"1289:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3582,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"amount","nameLocation":"1309:6:20","nodeType":"VariableDeclaration","scope":3600,"src":"1301:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1274:42:20"},"returnParameters":{"id":3590,"nodeType":"ParameterList","parameters":[],"src":"1357:0:20"},"scope":3619,"src":"1245:173:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[649,1018],"body":{"id":3617,"nodeType":"Block","src":"1510:45:20","statements":[{"expression":{"arguments":[{"id":3613,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"1532:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3614,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1541:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3610,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1520:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_gCOTI_$3619_$","typeString":"type(contract super gCOTI)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1526:5:20","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1018,"src":"1520:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1520:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3616,"nodeType":"ExpressionStatement","src":"1520:28:20"}]},"id":3618,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"1433:5:20","nodeType":"FunctionDefinition","overrides":{"id":3608,"nodeType":"OverrideSpecifier","overrides":[{"id":3606,"name":"ERC20","nameLocations":["1490:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":832,"src":"1490:5:20"},{"id":3607,"name":"ERC20Capped","nameLocations":["1497:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1497:11:20"}],"src":"1481:28:20"},"parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"account","nameLocation":"1447:7:20","nodeType":"VariableDeclaration","scope":3618,"src":"1439:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"1439:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"amount","nameLocation":"1464:6:20","nodeType":"VariableDeclaration","scope":3618,"src":"1456:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1456:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1438:33:20"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[],"src":"1510:0:20"},"scope":3619,"src":"1424:131:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3620,"src":"540:1017:20","usedErrors":[1406,1408]}],"src":"0:1557:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_290":{"entryPoint":null,"id":290,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:21"},"nodeType":"YulFunctionCall","src":"66:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:21"},"nodeType":"YulFunctionCall","src":"56:31:21"},"nodeType":"YulExpressionStatement","src":"56:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:21"},"nodeType":"YulFunctionCall","src":"96:15:21"},"nodeType":"YulExpressionStatement","src":"96:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:21"},"nodeType":"YulFunctionCall","src":"120:15:21"},"nodeType":"YulExpressionStatement","src":"120:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:21"},{"body":{"nodeType":"YulBlock","src":"210:776:21","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:21"},"nodeType":"YulFunctionCall","src":"261:12:21"},"nodeType":"YulExpressionStatement","src":"261:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:21"},"nodeType":"YulFunctionCall","src":"234:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:21"},"nodeType":"YulFunctionCall","src":"230:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:21"},"nodeType":"YulFunctionCall","src":"223:35:21"},"nodeType":"YulIf","src":"220:55:21"},{"nodeType":"YulVariableDeclaration","src":"284:23:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:21"},"nodeType":"YulFunctionCall","src":"294:13:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:21"},"nodeType":"YulFunctionCall","src":"330:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:21"},"nodeType":"YulFunctionCall","src":"326:18:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:21"},"nodeType":"YulFunctionCall","src":"369:18:21"},"nodeType":"YulExpressionStatement","src":"369:18:21"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:21"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:21"},"nodeType":"YulFunctionCall","src":"356:10:21"},"nodeType":"YulIf","src":"353:36:21"},{"nodeType":"YulVariableDeclaration","src":"398:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:21"},"nodeType":"YulFunctionCall","src":"408:7:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:21"},"nodeType":"YulFunctionCall","src":"438:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:21"},"nodeType":"YulFunctionCall","src":"498:13:21"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:21"},"nodeType":"YulFunctionCall","src":"494:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:21"},"nodeType":"YulFunctionCall","src":"490:31:21"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:21"},"nodeType":"YulFunctionCall","src":"486:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:21"},"nodeType":"YulFunctionCall","src":"474:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:21"},"nodeType":"YulFunctionCall","src":"588:18:21"},"nodeType":"YulExpressionStatement","src":"588:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:21"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:21"},"nodeType":"YulFunctionCall","src":"542:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:21"},"nodeType":"YulFunctionCall","src":"562:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:21"},"nodeType":"YulFunctionCall","src":"539:46:21"},"nodeType":"YulIf","src":"536:72:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:21"},"nodeType":"YulFunctionCall","src":"617:22:21"},"nodeType":"YulExpressionStatement","src":"617:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:21"},"nodeType":"YulFunctionCall","src":"648:18:21"},"nodeType":"YulExpressionStatement","src":"648:18:21"},{"nodeType":"YulVariableDeclaration","src":"675:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:21"},"nodeType":"YulFunctionCall","src":"737:12:21"},"nodeType":"YulExpressionStatement","src":"737:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:21"},"nodeType":"YulFunctionCall","src":"708:15:21"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:21"},"nodeType":"YulFunctionCall","src":"704:24:21"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:21"},"nodeType":"YulFunctionCall","src":"701:33:21"},"nodeType":"YulIf","src":"698:53:21"},{"nodeType":"YulVariableDeclaration","src":"760:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:21"},"nodeType":"YulFunctionCall","src":"850:14:21"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:21"},"nodeType":"YulFunctionCall","src":"846:23:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:21"},"nodeType":"YulFunctionCall","src":"881:14:21"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:21"},"nodeType":"YulFunctionCall","src":"877:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:21"},"nodeType":"YulFunctionCall","src":"871:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:21"},"nodeType":"YulFunctionCall","src":"839:63:21"},"nodeType":"YulExpressionStatement","src":"839:63:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:21"},"nodeType":"YulFunctionCall","src":"787:9:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:21","statements":[{"nodeType":"YulAssignment","src":"799:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:21"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:21"},"nodeType":"YulFunctionCall","src":"804:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:21","statements":[]},"src":"779:133:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:21"},"nodeType":"YulFunctionCall","src":"932:15:21"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:21"},"nodeType":"YulFunctionCall","src":"928:24:21"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:21"},"nodeType":"YulFunctionCall","src":"921:35:21"},"nodeType":"YulExpressionStatement","src":"921:35:21"},{"nodeType":"YulAssignment","src":"965:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:21"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:21","type":""}],"src":"146:840:21"},{"body":{"nodeType":"YulBlock","src":"1109:444:21","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:21"},"nodeType":"YulFunctionCall","src":"1157:12:21"},"nodeType":"YulExpressionStatement","src":"1157:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:21"},"nodeType":"YulFunctionCall","src":"1126:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:21"},"nodeType":"YulFunctionCall","src":"1122:32:21"},"nodeType":"YulIf","src":"1119:52:21"},{"nodeType":"YulVariableDeclaration","src":"1180:30:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:21"},"nodeType":"YulFunctionCall","src":"1194:16:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:21"},"nodeType":"YulFunctionCall","src":"1233:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:21"},"nodeType":"YulFunctionCall","src":"1229:18:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:21"},"nodeType":"YulFunctionCall","src":"1276:12:21"},"nodeType":"YulExpressionStatement","src":"1276:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:21"},"nodeType":"YulFunctionCall","src":"1259:14:21"},"nodeType":"YulIf","src":"1256:34:21"},{"nodeType":"YulAssignment","src":"1299:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:21"},"nodeType":"YulFunctionCall","src":"1338:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:21"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:21"},"nodeType":"YulFunctionCall","src":"1309:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:21"},"nodeType":"YulFunctionCall","src":"1401:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:21"},"nodeType":"YulFunctionCall","src":"1395:25:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:21"},"nodeType":"YulFunctionCall","src":"1451:12:21"},"nodeType":"YulExpressionStatement","src":"1451:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:21"},"nodeType":"YulFunctionCall","src":"1432:16:21"},"nodeType":"YulIf","src":"1429:36:21"},{"nodeType":"YulAssignment","src":"1474:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:21"},"nodeType":"YulFunctionCall","src":"1513:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:21"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:21"},"nodeType":"YulFunctionCall","src":"1484:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:21","type":""}],"src":"991:562:21"},{"body":{"nodeType":"YulBlock","src":"1613:325:21","statements":[{"nodeType":"YulAssignment","src":"1623:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:21"},"nodeType":"YulFunctionCall","src":"1633:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:21"},"nodeType":"YulFunctionCall","src":"1680:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:21","statements":[{"nodeType":"YulAssignment","src":"1733:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:21"},"nodeType":"YulFunctionCall","src":"1743:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:21"},"nodeType":"YulFunctionCall","src":"1704:26:21"},"nodeType":"YulIf","src":"1701:61:21"},{"body":{"nodeType":"YulBlock","src":"1821:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:21"},"nodeType":"YulFunctionCall","src":"1845:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:21"},"nodeType":"YulFunctionCall","src":"1835:31:21"},"nodeType":"YulExpressionStatement","src":"1835:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:21"},"nodeType":"YulFunctionCall","src":"1879:15:21"},"nodeType":"YulExpressionStatement","src":"1879:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:21"},"nodeType":"YulFunctionCall","src":"1907:15:21"},"nodeType":"YulExpressionStatement","src":"1907:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:21"},"nodeType":"YulFunctionCall","src":"1797:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:21"},"nodeType":"YulFunctionCall","src":"1774:38:21"},"nodeType":"YulIf","src":"1771:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:21","type":""}],"src":"1558:380:21"},{"body":{"nodeType":"YulBlock","src":"1999:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:21"},"nodeType":"YulFunctionCall","src":"2009:14:21"},"nodeType":"YulExpressionStatement","src":"2009:14:21"},{"nodeType":"YulAssignment","src":"2032:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:21"},"nodeType":"YulFunctionCall","src":"2040:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:21"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:21","type":""}],"src":"1943:121:21"},{"body":{"nodeType":"YulBlock","src":"2150:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:21"},"nodeType":"YulFunctionCall","src":"2221:17:21"},"nodeType":"YulExpressionStatement","src":"2221:17:21"},{"nodeType":"YulVariableDeclaration","src":"2251:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:21"},"nodeType":"YulFunctionCall","src":"2263:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:21"},"nodeType":"YulFunctionCall","src":"2331:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:21"},"nodeType":"YulFunctionCall","src":"2324:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:21"},"nodeType":"YulFunctionCall","src":"2314:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:21","statements":[{"nodeType":"YulAssignment","src":"2391:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:21"},"nodeType":"YulFunctionCall","src":"2368:20:21"},"nodeType":"YulIf","src":"2365:47:21"},{"nodeType":"YulVariableDeclaration","src":"2425:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:21"},"nodeType":"YulFunctionCall","src":"2452:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:21"},"nodeType":"YulFunctionCall","src":"2445:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:21"},"nodeType":"YulFunctionCall","src":"2435:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:21"},"nodeType":"YulFunctionCall","src":"2579:17:21"},"nodeType":"YulExpressionStatement","src":"2579:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:21"},"nodeType":"YulFunctionCall","src":"2524:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:21","statements":[{"nodeType":"YulAssignment","src":"2540:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:21"},"nodeType":"YulFunctionCall","src":"2549:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:21","statements":[]},"src":"2516:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:21"},"nodeType":"YulFunctionCall","src":"2163:11:21"},"nodeType":"YulIf","src":"2160:448:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:21","type":""}],"src":"2069:545:21"},{"body":{"nodeType":"YulBlock","src":"2704:81:21","statements":[{"nodeType":"YulAssignment","src":"2714:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:21"},"nodeType":"YulFunctionCall","src":"2743:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:21"},"nodeType":"YulFunctionCall","src":"2756:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:21"},"nodeType":"YulFunctionCall","src":"2739:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:21"},"nodeType":"YulFunctionCall","src":"2735:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:21"},"nodeType":"YulFunctionCall","src":"2725:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:21"},"nodeType":"YulFunctionCall","src":"2767:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:21"},"nodeType":"YulFunctionCall","src":"2722:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:21","type":""}],"src":"2619:166:21"},{"body":{"nodeType":"YulBlock","src":"2886:1256:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:21"},"nodeType":"YulFunctionCall","src":"2910:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:21"},"nodeType":"YulFunctionCall","src":"2965:18:21"},"nodeType":"YulExpressionStatement","src":"2965:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:21"},"nodeType":"YulFunctionCall","src":"2947:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:21"},"nodeType":"YulFunctionCall","src":"2943:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:21"},"nodeType":"YulFunctionCall","src":"2932:30:21"},"nodeType":"YulIf","src":"2929:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:21"},"nodeType":"YulFunctionCall","src":"3070:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:21"},"nodeType":"YulFunctionCall","src":"3044:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:21"},"nodeType":"YulFunctionCall","src":"2994:97:21"},"nodeType":"YulExpressionStatement","src":"2994:97:21"},{"nodeType":"YulVariableDeclaration","src":"3100:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:21","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:21"},"nodeType":"YulFunctionCall","src":"3270:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:21"},"nodeType":"YulFunctionCall","src":"3258:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:21"},"nodeType":"YulFunctionCall","src":"3305:35:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:21"},"nodeType":"YulFunctionCall","src":"3479:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:21"},"nodeType":"YulFunctionCall","src":"3473:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:21"},"nodeType":"YulFunctionCall","src":"3458:42:21"},"nodeType":"YulExpressionStatement","src":"3458:42:21"},{"nodeType":"YulAssignment","src":"3517:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:21"},"nodeType":"YulFunctionCall","src":"3527:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:21"}]},{"nodeType":"YulAssignment","src":"3558:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:21"},"nodeType":"YulFunctionCall","src":"3571:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:21"},"nodeType":"YulFunctionCall","src":"3384:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:21","statements":[{"nodeType":"YulAssignment","src":"3401:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:21"},"nodeType":"YulFunctionCall","src":"3406:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:21","statements":[]},"src":"3376:236:21"},{"body":{"nodeType":"YulBlock","src":"3660:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:21"},"nodeType":"YulFunctionCall","src":"3701:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:21"},"nodeType":"YulFunctionCall","src":"3695:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:21"},"nodeType":"YulFunctionCall","src":"3780:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:21"},"nodeType":"YulFunctionCall","src":"3776:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:21"},"nodeType":"YulFunctionCall","src":"3802:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:21"},"nodeType":"YulFunctionCall","src":"3772:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:21"},"nodeType":"YulFunctionCall","src":"3768:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:21"},"nodeType":"YulFunctionCall","src":"3753:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:21"},"nodeType":"YulFunctionCall","src":"3738:74:21"},"nodeType":"YulExpressionStatement","src":"3738:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:21"},"nodeType":"YulFunctionCall","src":"3628:19:21"},"nodeType":"YulIf","src":"3625:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:21"},"nodeType":"YulFunctionCall","src":"3856:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:21"},"nodeType":"YulFunctionCall","src":"3852:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:21"},"nodeType":"YulFunctionCall","src":"3839:36:21"},"nodeType":"YulExpressionStatement","src":"3839:36:21"}]},"nodeType":"YulCase","src":"3222:663:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:21","statements":[{"nodeType":"YulAssignment","src":"3983:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:21"},"nodeType":"YulFunctionCall","src":"3998:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:21"},"nodeType":"YulFunctionCall","src":"3992:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:21"},"nodeType":"YulIf","src":"3943:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:21"},"nodeType":"YulFunctionCall","src":"4058:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:21"},"nodeType":"YulFunctionCall","src":"4045:81:21"},"nodeType":"YulExpressionStatement","src":"4045:81:21"}]},"nodeType":"YulCase","src":"3894:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:21"},"nodeType":"YulFunctionCall","src":"3199:14:21"},"nodeType":"YulSwitch","src":"3192:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:21","type":""}],"src":"2790:1352:21"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122043ab6bc4f2fa98319a34b30e084706a9ec2bf0751fce864689103ad7d2862e5864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xAB PUSH12 0xC4F2FA98319A34B30E084706 0xA9 0xEC 0x2B CREATE PUSH22 0x1FCE864689103AD7D2862E5864736F6C634300081300 CALLER ","sourceMap":"1532:11312:3:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:3;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:21;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:21;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:21;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:21:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:21;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:21;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:21;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:21;;;3992:26;3943:89;-1:-1:-1;;2747:1:21;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:21;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:21;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:21;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:21:o;:::-;1532:11312:3;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_831":{"entryPoint":null,"id":831,"parameterSlots":3,"returnSlots":0},"@_approve_766":{"entryPoint":858,"id":766,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_820":{"entryPoint":null,"id":820,"parameterSlots":3,"returnSlots":0},"@_msgSender_1301":{"entryPoint":null,"id":1301,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_809":{"entryPoint":1150,"id":809,"parameterSlots":3,"returnSlots":0},"@_transfer_592":{"entryPoint":1272,"id":592,"parameterSlots":3,"returnSlots":0},"@allowance_387":{"entryPoint":815,"id":387,"parameterSlots":2,"returnSlots":1},"@approve_412":{"entryPoint":562,"id":412,"parameterSlots":2,"returnSlots":1},"@balanceOf_344":{"entryPoint":null,"id":344,"parameterSlots":1,"returnSlots":1},"@decimals_320":{"entryPoint":null,"id":320,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_515":{"entryPoint":673,"id":515,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_474":{"entryPoint":624,"id":474,"parameterSlots":2,"returnSlots":1},"@name_300":{"entryPoint":416,"id":300,"parameterSlots":0,"returnSlots":1},"@symbol_310":{"entryPoint":658,"id":310,"parameterSlots":0,"returnSlots":1},"@totalSupply_330":{"entryPoint":null,"id":330,"parameterSlots":0,"returnSlots":1},"@transferFrom_445":{"entryPoint":588,"id":445,"parameterSlots":3,"returnSlots":1},"@transfer_369":{"entryPoint":801,"id":369,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1985,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:21","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:21"},"nodeType":"YulFunctionCall","src":"166:21:21"},"nodeType":"YulExpressionStatement","src":"166:21:21"},{"nodeType":"YulVariableDeclaration","src":"196:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:21"},"nodeType":"YulFunctionCall","src":"210:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:21"},"nodeType":"YulFunctionCall","src":"239:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:21"},"nodeType":"YulFunctionCall","src":"232:34:21"},"nodeType":"YulExpressionStatement","src":"232:34:21"},{"nodeType":"YulVariableDeclaration","src":"275:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:21"},"nodeType":"YulFunctionCall","src":"369:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:21"},"nodeType":"YulFunctionCall","src":"365:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:21"},"nodeType":"YulFunctionCall","src":"403:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:21"},"nodeType":"YulFunctionCall","src":"393:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:21"},"nodeType":"YulFunctionCall","src":"358:66:21"},"nodeType":"YulExpressionStatement","src":"358:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:21"},"nodeType":"YulFunctionCall","src":"302:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:21","statements":[{"nodeType":"YulAssignment","src":"318:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:21"},"nodeType":"YulFunctionCall","src":"323:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:21","statements":[]},"src":"294:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:21"},"nodeType":"YulFunctionCall","src":"454:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:21"},"nodeType":"YulFunctionCall","src":"450:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:21"},"nodeType":"YulFunctionCall","src":"443:42:21"},"nodeType":"YulExpressionStatement","src":"443:42:21"},{"nodeType":"YulAssignment","src":"494:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:21"},"nodeType":"YulFunctionCall","src":"525:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:21"},"nodeType":"YulFunctionCall","src":"542:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:21"},"nodeType":"YulFunctionCall","src":"521:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:21"},"nodeType":"YulFunctionCall","src":"506:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:21"},"nodeType":"YulFunctionCall","src":"502:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:21","type":""}],"src":"14:548:21"},{"body":{"nodeType":"YulBlock","src":"616:124:21","statements":[{"nodeType":"YulAssignment","src":"626:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:21"},"nodeType":"YulFunctionCall","src":"635:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:21"}]},{"body":{"nodeType":"YulBlock","src":"718:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:21"},"nodeType":"YulFunctionCall","src":"720:12:21"},"nodeType":"YulExpressionStatement","src":"720:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:21"},"nodeType":"YulFunctionCall","src":"699:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:21"},"nodeType":"YulFunctionCall","src":"695:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:21"},"nodeType":"YulFunctionCall","src":"684:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:21"},"nodeType":"YulFunctionCall","src":"674:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:21"},"nodeType":"YulFunctionCall","src":"667:50:21"},"nodeType":"YulIf","src":"664:70:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:21","type":""}],"src":"567:173:21"},{"body":{"nodeType":"YulBlock","src":"832:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:21"},"nodeType":"YulFunctionCall","src":"880:12:21"},"nodeType":"YulExpressionStatement","src":"880:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:21"},"nodeType":"YulFunctionCall","src":"849:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:21"},"nodeType":"YulFunctionCall","src":"845:32:21"},"nodeType":"YulIf","src":"842:52:21"},{"nodeType":"YulAssignment","src":"903:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:21"},"nodeType":"YulFunctionCall","src":"913:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:21"}]},{"nodeType":"YulAssignment","src":"951:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:21"},"nodeType":"YulFunctionCall","src":"974:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:21"},"nodeType":"YulFunctionCall","src":"961:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:21","type":""}],"src":"745:254:21"},{"body":{"nodeType":"YulBlock","src":"1099:92:21","statements":[{"nodeType":"YulAssignment","src":"1109:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:21"},"nodeType":"YulFunctionCall","src":"1117:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:21"},"nodeType":"YulFunctionCall","src":"1169:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:21"},"nodeType":"YulFunctionCall","src":"1162:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:21"},"nodeType":"YulFunctionCall","src":"1144:41:21"},"nodeType":"YulExpressionStatement","src":"1144:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:21","type":""}],"src":"1004:187:21"},{"body":{"nodeType":"YulBlock","src":"1297:76:21","statements":[{"nodeType":"YulAssignment","src":"1307:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:21"},"nodeType":"YulFunctionCall","src":"1315:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:21"},"nodeType":"YulFunctionCall","src":"1342:25:21"},"nodeType":"YulExpressionStatement","src":"1342:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:21","type":""}],"src":"1196:177:21"},{"body":{"nodeType":"YulBlock","src":"1482:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:21"},"nodeType":"YulFunctionCall","src":"1530:12:21"},"nodeType":"YulExpressionStatement","src":"1530:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:21"},"nodeType":"YulFunctionCall","src":"1499:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:21"},"nodeType":"YulFunctionCall","src":"1495:32:21"},"nodeType":"YulIf","src":"1492:52:21"},{"nodeType":"YulAssignment","src":"1553:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:21"},"nodeType":"YulFunctionCall","src":"1563:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:21"}]},{"nodeType":"YulAssignment","src":"1601:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:21"},"nodeType":"YulFunctionCall","src":"1630:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:21"},"nodeType":"YulFunctionCall","src":"1611:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:21"}]},{"nodeType":"YulAssignment","src":"1658:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:21"},"nodeType":"YulFunctionCall","src":"1681:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:21"},"nodeType":"YulFunctionCall","src":"1668:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:21","type":""}],"src":"1378:328:21"},{"body":{"nodeType":"YulBlock","src":"1808:87:21","statements":[{"nodeType":"YulAssignment","src":"1818:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:21"},"nodeType":"YulFunctionCall","src":"1826:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:21"},"nodeType":"YulFunctionCall","src":"1871:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:21"},"nodeType":"YulFunctionCall","src":"1853:36:21"},"nodeType":"YulExpressionStatement","src":"1853:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:21","type":""}],"src":"1711:184:21"},{"body":{"nodeType":"YulBlock","src":"1970:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:21"},"nodeType":"YulFunctionCall","src":"2018:12:21"},"nodeType":"YulExpressionStatement","src":"2018:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:21"},"nodeType":"YulFunctionCall","src":"1987:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:21"},"nodeType":"YulFunctionCall","src":"1983:32:21"},"nodeType":"YulIf","src":"1980:52:21"},{"nodeType":"YulAssignment","src":"2041:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:21"},"nodeType":"YulFunctionCall","src":"2051:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:21","type":""}],"src":"1900:186:21"},{"body":{"nodeType":"YulBlock","src":"2178:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:21"},"nodeType":"YulFunctionCall","src":"2226:12:21"},"nodeType":"YulExpressionStatement","src":"2226:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:21"},"nodeType":"YulFunctionCall","src":"2195:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:21"},"nodeType":"YulFunctionCall","src":"2191:32:21"},"nodeType":"YulIf","src":"2188:52:21"},{"nodeType":"YulAssignment","src":"2249:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:21"},"nodeType":"YulFunctionCall","src":"2259:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:21"}]},{"nodeType":"YulAssignment","src":"2297:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:21"},"nodeType":"YulFunctionCall","src":"2326:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:21"},"nodeType":"YulFunctionCall","src":"2307:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:21","type":""}],"src":"2091:260:21"},{"body":{"nodeType":"YulBlock","src":"2411:325:21","statements":[{"nodeType":"YulAssignment","src":"2421:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:21"},"nodeType":"YulFunctionCall","src":"2431:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:21"},"nodeType":"YulFunctionCall","src":"2478:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:21","statements":[{"nodeType":"YulAssignment","src":"2531:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:21"},"nodeType":"YulFunctionCall","src":"2541:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:21"},"nodeType":"YulFunctionCall","src":"2502:26:21"},"nodeType":"YulIf","src":"2499:61:21"},{"body":{"nodeType":"YulBlock","src":"2619:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:21"},"nodeType":"YulFunctionCall","src":"2643:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:21"},"nodeType":"YulFunctionCall","src":"2633:31:21"},"nodeType":"YulExpressionStatement","src":"2633:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:21"},"nodeType":"YulFunctionCall","src":"2677:15:21"},"nodeType":"YulExpressionStatement","src":"2677:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:21"},"nodeType":"YulFunctionCall","src":"2705:15:21"},"nodeType":"YulExpressionStatement","src":"2705:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:21"},"nodeType":"YulFunctionCall","src":"2595:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:21"},"nodeType":"YulFunctionCall","src":"2572:38:21"},"nodeType":"YulIf","src":"2569:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:21","type":""}],"src":"2356:380:21"},{"body":{"nodeType":"YulBlock","src":"2789:174:21","statements":[{"nodeType":"YulAssignment","src":"2799:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:21"},"nodeType":"YulFunctionCall","src":"2806:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:21"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:21"},"nodeType":"YulFunctionCall","src":"2870:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:21"},"nodeType":"YulFunctionCall","src":"2860:31:21"},"nodeType":"YulExpressionStatement","src":"2860:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:21"},"nodeType":"YulFunctionCall","src":"2904:15:21"},"nodeType":"YulExpressionStatement","src":"2904:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:21"},"nodeType":"YulFunctionCall","src":"2932:15:21"},"nodeType":"YulExpressionStatement","src":"2932:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:21"},"nodeType":"YulFunctionCall","src":"2827:10:21"},"nodeType":"YulIf","src":"2824:133:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:21","type":""}],"src":"2741:222:21"},{"body":{"nodeType":"YulBlock","src":"3142:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:21"},"nodeType":"YulFunctionCall","src":"3152:21:21"},"nodeType":"YulExpressionStatement","src":"3152:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:21"},"nodeType":"YulFunctionCall","src":"3189:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:21"},"nodeType":"YulFunctionCall","src":"3182:30:21"},"nodeType":"YulExpressionStatement","src":"3182:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:21"},"nodeType":"YulFunctionCall","src":"3228:18:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:21"},"nodeType":"YulFunctionCall","src":"3221:62:21"},"nodeType":"YulExpressionStatement","src":"3221:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:21"},"nodeType":"YulFunctionCall","src":"3299:18:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:21"},"nodeType":"YulFunctionCall","src":"3292:35:21"},"nodeType":"YulExpressionStatement","src":"3292:35:21"},{"nodeType":"YulAssignment","src":"3336:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:21"},"nodeType":"YulFunctionCall","src":"3344:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:21","type":""}],"src":"2968:401:21"},{"body":{"nodeType":"YulBlock","src":"3548:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:21"},"nodeType":"YulFunctionCall","src":"3558:21:21"},"nodeType":"YulExpressionStatement","src":"3558:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:21"},"nodeType":"YulFunctionCall","src":"3595:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:21"},"nodeType":"YulFunctionCall","src":"3588:30:21"},"nodeType":"YulExpressionStatement","src":"3588:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:21"},"nodeType":"YulFunctionCall","src":"3634:18:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:21"},"nodeType":"YulFunctionCall","src":"3627:62:21"},"nodeType":"YulExpressionStatement","src":"3627:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:21"},"nodeType":"YulFunctionCall","src":"3705:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:21"},"nodeType":"YulFunctionCall","src":"3698:34:21"},"nodeType":"YulExpressionStatement","src":"3698:34:21"},{"nodeType":"YulAssignment","src":"3741:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:21"},"nodeType":"YulFunctionCall","src":"3749:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:21","type":""}],"src":"3374:400:21"},{"body":{"nodeType":"YulBlock","src":"3953:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:21"},"nodeType":"YulFunctionCall","src":"3963:21:21"},"nodeType":"YulExpressionStatement","src":"3963:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:21"},"nodeType":"YulFunctionCall","src":"4000:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:21"},"nodeType":"YulFunctionCall","src":"3993:30:21"},"nodeType":"YulExpressionStatement","src":"3993:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:21"},"nodeType":"YulFunctionCall","src":"4039:18:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:21"},"nodeType":"YulFunctionCall","src":"4032:62:21"},"nodeType":"YulExpressionStatement","src":"4032:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:21"},"nodeType":"YulFunctionCall","src":"4110:18:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:21"},"nodeType":"YulFunctionCall","src":"4103:32:21"},"nodeType":"YulExpressionStatement","src":"4103:32:21"},{"nodeType":"YulAssignment","src":"4144:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:21"},"nodeType":"YulFunctionCall","src":"4152:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:21","type":""}],"src":"3779:398:21"},{"body":{"nodeType":"YulBlock","src":"4356:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:21"},"nodeType":"YulFunctionCall","src":"4366:21:21"},"nodeType":"YulExpressionStatement","src":"4366:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:21"},"nodeType":"YulFunctionCall","src":"4403:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:21"},"nodeType":"YulFunctionCall","src":"4396:30:21"},"nodeType":"YulExpressionStatement","src":"4396:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:21"},"nodeType":"YulFunctionCall","src":"4442:18:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:21"},"nodeType":"YulFunctionCall","src":"4435:59:21"},"nodeType":"YulExpressionStatement","src":"4435:59:21"},{"nodeType":"YulAssignment","src":"4503:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:21"},"nodeType":"YulFunctionCall","src":"4511:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:21","type":""}],"src":"4182:353:21"},{"body":{"nodeType":"YulBlock","src":"4714:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:21"},"nodeType":"YulFunctionCall","src":"4724:21:21"},"nodeType":"YulExpressionStatement","src":"4724:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:21"},"nodeType":"YulFunctionCall","src":"4761:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:21"},"nodeType":"YulFunctionCall","src":"4754:30:21"},"nodeType":"YulExpressionStatement","src":"4754:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:21"},"nodeType":"YulFunctionCall","src":"4800:18:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:21"},"nodeType":"YulFunctionCall","src":"4793:62:21"},"nodeType":"YulExpressionStatement","src":"4793:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:21"},"nodeType":"YulFunctionCall","src":"4871:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:21"},"nodeType":"YulFunctionCall","src":"4864:35:21"},"nodeType":"YulExpressionStatement","src":"4864:35:21"},{"nodeType":"YulAssignment","src":"4908:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:21"},"nodeType":"YulFunctionCall","src":"4916:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:21","type":""}],"src":"4540:401:21"},{"body":{"nodeType":"YulBlock","src":"5120:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:21"},"nodeType":"YulFunctionCall","src":"5130:21:21"},"nodeType":"YulExpressionStatement","src":"5130:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:21"},"nodeType":"YulFunctionCall","src":"5167:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:21"},"nodeType":"YulFunctionCall","src":"5160:30:21"},"nodeType":"YulExpressionStatement","src":"5160:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:21"},"nodeType":"YulFunctionCall","src":"5206:18:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:21"},"nodeType":"YulFunctionCall","src":"5199:62:21"},"nodeType":"YulExpressionStatement","src":"5199:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:21"},"nodeType":"YulFunctionCall","src":"5277:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:21"},"nodeType":"YulFunctionCall","src":"5270:33:21"},"nodeType":"YulExpressionStatement","src":"5270:33:21"},{"nodeType":"YulAssignment","src":"5312:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:21"},"nodeType":"YulFunctionCall","src":"5320:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:21","type":""}],"src":"4946:399:21"},{"body":{"nodeType":"YulBlock","src":"5524:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:21"},"nodeType":"YulFunctionCall","src":"5534:21:21"},"nodeType":"YulExpressionStatement","src":"5534:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:21"},"nodeType":"YulFunctionCall","src":"5571:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:21"},"nodeType":"YulFunctionCall","src":"5564:30:21"},"nodeType":"YulExpressionStatement","src":"5564:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:21"},"nodeType":"YulFunctionCall","src":"5610:18:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:21"},"nodeType":"YulFunctionCall","src":"5603:62:21"},"nodeType":"YulExpressionStatement","src":"5603:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:21"},"nodeType":"YulFunctionCall","src":"5681:18:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:21"},"nodeType":"YulFunctionCall","src":"5674:36:21"},"nodeType":"YulExpressionStatement","src":"5674:36:21"},{"nodeType":"YulAssignment","src":"5719:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:21"},"nodeType":"YulFunctionCall","src":"5727:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:21","type":""}],"src":"5350:402:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122043ab6bc4f2fa98319a34b30e084706a9ec2bf0751fce864689103ad7d2862e5864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xAB PUSH12 0xC4F2FA98319A34B30E084706 0xA9 0xEC 0x2B CREATE PUSH22 0x1FCE864689103AD7D2862E5864736F6C634300081300 CALLER ","sourceMap":"1532:11312:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:21;;1162:22;1144:41;;1132:2;1117:18;4444:197:3;1004:187:21;3255:106:3;3342:12;;3255:106;;;1342:25:21;;;1330:2;1315:18;3255:106:3;1196:177:21;5203:256:3;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:21;;1841:2;1826:18;3104:91:3;1711:184:21;5854:234:3;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:3;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:11;4581:32:3;734:10:11;4597:7:3;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;734:10:11;5356:38:3;5372:4;734:10:11;5387:6:3;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:3;;5203:256;-1:-1:-1;;;;5203:256:3:o;5854:234::-;5942:4;734:10:11;5996:64:3;734:10:11;6012:7:3;6049:10;6021:25;734:10:11;6012:7:3;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;734:10:11;6668:4:3;6749:25;734:10:11;6766:7:3;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:3;;3170:2:21;6784:85:3;;;3152:21:21;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:21;;;3292:35;3344:19;;6784:85:3;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;734:10:11;3873:28:3;734:10:11;3890:2:3;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:3;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:3;;10550:68;;;;-1:-1:-1;;;10550:68:3;;3576:2:21;10550:68:3;;;3558:21:21;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:21;;;3698:34;3749:19;;10550:68:3;3374:400:21;10550:68:3;-1:-1:-1;;;;;10636:21:3;;10628:68;;;;-1:-1:-1;;;10628:68:3;;3981:2:21;10628:68:3;;;3963:21:21;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:21;;;4103:32;4152:19;;10628:68:3;3779:398:21;10628:68:3;-1:-1:-1;;;;;10707:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:21;;;10758:32:3;;1315:18:21;10758:32:3;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:3;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:3;;4384:2:21;11297:68:3;;;4366:21:21;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:3;4182:353:21;11297:68:3;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:3;;7544:68;;;;-1:-1:-1;;;7544:68:3;;4742:2:21;7544:68:3;;;4724:21:21;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:21;;;4864:35;4916:19;;7544:68:3;4540:401:21;7544:68:3;-1:-1:-1;;;;;7630:16:3;;7622:64;;;;-1:-1:-1;;;7622:64:3;;5148:2:21;7622:64:3;;;5130:21:21;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:21;;;5270:33;5320:19;;7622:64:3;4946:399:21;7622:64:3;-1:-1:-1;;;;;7768:15:3;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:3;;5552:2:21;7793:72:3;;;5534:21:21;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:21;;;5674:36;5727:19;;7793:72:3;5350:402:21;7793:72:3;-1:-1:-1;;;;;7899:15:3;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:21;;;8114:13:3;;8163:26;;1315:18:21;8163:26:3;;;;;;;8200:37;12073:91;14:548:21;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:21;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:21:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:21:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"ERC20Capped":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cap()":"355274ea","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x3fe04ed1daf0f12454333fde982a25b103860d8a010dd5d8479b83ebf1dfb788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8322152771e94c9e28a3bd9e7c9d5dd4fdd00ae214f95915962a6638d8dfc7d6\",\"dweb:/ipfs/QmaXJvF3UjRHacx3nPgt94DwAuXCkEoz6fS7MLr2jbuJyW\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract unpausable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061ff10289f043bf5939e7e851238bbb80d8104c7b6ace582472994a8ff859e9964736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFF10 0x28 SWAP16 DIV EXTCODESIZE CREATE2 SWAP4 SWAP15 PUSH31 0x851238BBB80D8104C7B6ACE582472994A8FF859E9964736F6C634300081300 CALLER ","sourceMap":"424:971:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061ff10289f043bf5939e7e851238bbb80d8104c7b6ace582472994a8ff859e9964736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFF10 0x28 SWAP16 DIV EXTCODESIZE CREATE2 SWAP4 SWAP15 PUSH31 0x851238BBB80D8104C7B6ACE582472994A8FF859E9964736F6C634300081300 CALLER ","sourceMap":"424:971:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061590f6cd635a06290c02b99def67baf87094bf1650d78eeb998755045f1522764736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x590F PUSH13 0xD635A06290C02B99DEF67BAF87 MULMOD 0x4B CALL PUSH6 0xD78EEB99875 POP GASLIMIT CALL MSTORE 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1235:3050:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1235:3050:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061590f6cd635a06290c02b99def67baf87094bf1650d78eeb998755045f1522764736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x590F PUSH13 0xD635A06290C02B99DEF67BAF87 MULMOD 0x4B CALL PUSH6 0xD78EEB99875 POP GASLIMIT CALL MSTORE 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1235:3050:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d7c79cc0d2dc5a13cd1f9ec7db59a64db211d68e514f0971fff90f2f3fff0a564736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD PUSH29 0x79CC0D2DC5A13CD1F9EC7DB59A64DB211D68E514F0971FFF90F2F3FFF0 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2685:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d7c79cc0d2dc5a13cd1f9ec7db59a64db211d68e514f0971fff90f2f3fff0a564736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD PUSH29 0x79CC0D2DC5A13CD1F9EC7DB59A64DB211D68E514F0971FFF90F2F3FFF0 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2685:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d4b54bc80c0b44d0162d73c9c1dba9b336560313d5935c1ed2a4804e8673e864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD4 0xB5 0x4B 0xC8 0xC SIGNEXTEND PREVRANDAO 0xD0 AND 0x2D PUSH20 0xC9C1DBA9B336560313D5935C1ED2A4804E8673E8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d4b54bc80c0b44d0162d73c9c1dba9b336560313d5935c1ed2a4804e8673e864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD4 0xB5 0x4B 0xC8 0xC SIGNEXTEND PREVRANDAO 0xD0 AND 0x2D PUSH20 0xC9C1DBA9B336560313D5935C1ED2A4804E8673E8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086682acbdd4e0874dc4db602c6c53be31c2ddbd1bce28c53f0aa84d9cdf7cde164736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0x2ACBDD4E0874DC4DB6 MUL 0xC6 0xC5 EXTCODESIZE 0xE3 SHR 0x2D 0xDB 0xD1 0xBC 0xE2 DUP13 MSTORE8 CREATE 0xAA DUP5 0xD9 0xCD 0xF7 0xCD 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8761:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086682acbdd4e0874dc4db602c6c53be31c2ddbd1bce28c53f0aa84d9cdf7cde164736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0x2ACBDD4E0874DC4DB6 MUL 0xC6 0xC5 EXTCODESIZE 0xE3 SHR 0x2D 0xDB 0xD1 0xBC 0xE2 DUP13 MSTORE8 CREATE 0xAA DUP5 0xD9 0xCD 0xF7 0xCD 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8761:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91d0b72d0ff009b3ea09e6b95963bbe902271bfde10f6c03cf48d240255864664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SAR SIGNEXTEND PUSH19 0xD0FF009B3EA09E6B95963BBE902271BFDE10F6 0xC0 EXTCODECOPY DELEGATECALL DUP14 0x24 MUL SSTORE DUP7 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91d0b72d0ff009b3ea09e6b95963bbe902271bfde10f6c03cf48d240255864664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SAR SIGNEXTEND PUSH19 0xD0FF009B3EA09E6B95963BBE902271BFDE10F6 0xC0 EXTCODECOPY DELEGATECALL DUP14 0x24 MUL SSTORE DUP7 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088366b59ea99732082b3124288e8358f874708936e6768c5650b9be28fa19db664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATASIZE PUSH12 0x59EA99732082B3124288E835 DUP16 DUP8 SELFBALANCE ADDMOD SWAP4 PUSH15 0x6768C5650B9BE28FA19DB664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"215:1047:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088366b59ea99732082b3124288e8358f874708936e6768c5650b9be28fa19db664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATASIZE PUSH12 0x59EA99732082B3124288E835 DUP16 DUP8 SELFBALANCE ADDMOD SWAP4 PUSH15 0x6768C5650B9BE28FA19DB664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"215:1047:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/gCOTI.sol":{"gCOTI":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1098":{"entryPoint":null,"id":1098,"parameterSlots":1,"returnSlots":0},"@_164":{"entryPoint":null,"id":164,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_2407":{"entryPoint":null,"id":2407,"parameterSlots":2,"returnSlots":0},"@_290":{"entryPoint":null,"id":290,"parameterSlots":2,"returnSlots":0},"@_3546":{"entryPoint":null,"id":3546,"parameterSlots":3,"returnSlots":0},"@_980":{"entryPoint":null,"id":980,"parameterSlots":1,"returnSlots":0},"@_afterTokenTransfer_831":{"entryPoint":null,"id":831,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1055":{"entryPoint":1125,"id":1055,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_3600":{"entryPoint":1107,"id":3600,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_820":{"entryPoint":null,"id":820,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_2454":{"entryPoint":null,"id":2454,"parameterSlots":0,"returnSlots":1},"@_mint_1018":{"entryPoint":786,"id":1018,"parameterSlots":2,"returnSlots":0},"@_mint_3618":{"entryPoint":703,"id":3618,"parameterSlots":2,"returnSlots":0},"@_mint_649":{"entryPoint":null,"id":649,"parameterSlots":2,"returnSlots":0},"@_msgSender_1301":{"entryPoint":null,"id":1301,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":556,"id":111,"parameterSlots":1,"returnSlots":0},"@cap_989":{"entryPoint":null,"id":989,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1696":{"entryPoint":null,"id":1696,"parameterSlots":1,"returnSlots":1},"@paused_189":{"entryPoint":null,"id":189,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_1550":{"entryPoint":646,"id":1550,"parameterSlots":2,"returnSlots":1},"@toShortString_1452":{"entryPoint":719,"id":1452,"parameterSlots":1,"returnSlots":1},"@totalSupply_330":{"entryPoint":null,"id":330,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory":{"entryPoint":1258,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1808,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1405,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1771,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1487,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1345,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":1323,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6506:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:21","statements":[{"nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:21"},"nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:21"}]},{"body":{"nodeType":"YulBlock","src":"169:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:21"},"nodeType":"YulFunctionCall","src":"171:12:21"},"nodeType":"YulExpressionStatement","src":"171:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:21"},"nodeType":"YulFunctionCall","src":"150:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:21"},"nodeType":"YulFunctionCall","src":"146:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:21"},"nodeType":"YulFunctionCall","src":"135:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:21"},"nodeType":"YulFunctionCall","src":"125:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:21"},"nodeType":"YulFunctionCall","src":"118:50:21"},"nodeType":"YulIf","src":"115:70:21"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:177:21"},{"body":{"nodeType":"YulBlock","src":"311:239:21","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:21"},"nodeType":"YulFunctionCall","src":"359:12:21"},"nodeType":"YulExpressionStatement","src":"359:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:21"},"nodeType":"YulFunctionCall","src":"328:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:21"},"nodeType":"YulFunctionCall","src":"324:32:21"},"nodeType":"YulIf","src":"321:52:21"},{"nodeType":"YulAssignment","src":"382:50:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:21"},"nodeType":"YulFunctionCall","src":"392:40:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:21"}]},{"nodeType":"YulAssignment","src":"441:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:21"},"nodeType":"YulFunctionCall","src":"481:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"451:29:21"},"nodeType":"YulFunctionCall","src":"451:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:21"}]},{"nodeType":"YulAssignment","src":"509:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"529:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:21"},"nodeType":"YulFunctionCall","src":"525:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"519:5:21"},"nodeType":"YulFunctionCall","src":"519:25:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"509:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:21","type":""}],"src":"196:354:21"},{"body":{"nodeType":"YulBlock","src":"587:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"611:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"616:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"607:3:21"},"nodeType":"YulFunctionCall","src":"607:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:21"},"nodeType":"YulFunctionCall","src":"597:31:21"},"nodeType":"YulExpressionStatement","src":"597:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"644:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"647:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"637:6:21"},"nodeType":"YulFunctionCall","src":"637:15:21"},"nodeType":"YulExpressionStatement","src":"637:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"668:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"671:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"661:6:21"},"nodeType":"YulFunctionCall","src":"661:15:21"},"nodeType":"YulExpressionStatement","src":"661:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"555:127:21"},{"body":{"nodeType":"YulBlock","src":"742:325:21","statements":[{"nodeType":"YulAssignment","src":"752:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"766:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"769:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"762:3:21"},"nodeType":"YulFunctionCall","src":"762:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"752:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"783:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"813:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"819:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"809:3:21"},"nodeType":"YulFunctionCall","src":"809:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"787:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"860:31:21","statements":[{"nodeType":"YulAssignment","src":"862:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"876:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"884:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"872:3:21"},"nodeType":"YulFunctionCall","src":"872:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"862:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"840:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"833:6:21"},"nodeType":"YulFunctionCall","src":"833:26:21"},"nodeType":"YulIf","src":"830:61:21"},{"body":{"nodeType":"YulBlock","src":"950:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"978:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"983:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"974:3:21"},"nodeType":"YulFunctionCall","src":"974:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"964:6:21"},"nodeType":"YulFunctionCall","src":"964:31:21"},"nodeType":"YulExpressionStatement","src":"964:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1015:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1018:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1008:6:21"},"nodeType":"YulFunctionCall","src":"1008:15:21"},"nodeType":"YulExpressionStatement","src":"1008:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1043:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1046:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1036:6:21"},"nodeType":"YulFunctionCall","src":"1036:15:21"},"nodeType":"YulExpressionStatement","src":"1036:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"906:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"929:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"937:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"926:2:21"},"nodeType":"YulFunctionCall","src":"926:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"903:2:21"},"nodeType":"YulFunctionCall","src":"903:38:21"},"nodeType":"YulIf","src":"900:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"722:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"731:6:21","type":""}],"src":"687:380:21"},{"body":{"nodeType":"YulBlock","src":"1128:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1145:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1148:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1138:6:21"},"nodeType":"YulFunctionCall","src":"1138:14:21"},"nodeType":"YulExpressionStatement","src":"1138:14:21"},{"nodeType":"YulAssignment","src":"1161:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1179:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1182:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1169:9:21"},"nodeType":"YulFunctionCall","src":"1169:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1161:4:21"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1111:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1119:4:21","type":""}],"src":"1072:121:21"},{"body":{"nodeType":"YulBlock","src":"1279:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"1312:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1326:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1336:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1330:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1357:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"1361:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1350:6:21"},"nodeType":"YulFunctionCall","src":"1350:17:21"},"nodeType":"YulExpressionStatement","src":"1350:17:21"},{"nodeType":"YulVariableDeclaration","src":"1380:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1402:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"1406:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1392:9:21"},"nodeType":"YulFunctionCall","src":"1392:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1384:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1424:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1447:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1457:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1464:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1476:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1460:3:21"},"nodeType":"YulFunctionCall","src":"1460:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1453:3:21"},"nodeType":"YulFunctionCall","src":"1453:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1443:3:21"},"nodeType":"YulFunctionCall","src":"1443:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1428:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1518:23:21","statements":[{"nodeType":"YulAssignment","src":"1520:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"1535:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1520:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1500:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1512:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1497:2:21"},"nodeType":"YulFunctionCall","src":"1497:20:21"},"nodeType":"YulIf","src":"1494:47:21"},{"nodeType":"YulVariableDeclaration","src":"1554:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1568:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1578:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1585:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1590:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1581:3:21"},"nodeType":"YulFunctionCall","src":"1581:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1574:3:21"},"nodeType":"YulFunctionCall","src":"1574:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1564:3:21"},"nodeType":"YulFunctionCall","src":"1564:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1558:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1608:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1621:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1612:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1706:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1715:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1722:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1708:6:21"},"nodeType":"YulFunctionCall","src":"1708:17:21"},"nodeType":"YulExpressionStatement","src":"1708:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1656:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"1663:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1653:2:21"},"nodeType":"YulFunctionCall","src":"1653:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1667:26:21","statements":[{"nodeType":"YulAssignment","src":"1669:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1682:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1689:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1678:3:21"},"nodeType":"YulFunctionCall","src":"1678:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1669:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1649:3:21","statements":[]},"src":"1645:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1295:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1300:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1292:2:21"},"nodeType":"YulFunctionCall","src":"1292:11:21"},"nodeType":"YulIf","src":"1289:448:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1251:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"1258:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1263:10:21","type":""}],"src":"1198:545:21"},{"body":{"nodeType":"YulBlock","src":"1833:81:21","statements":[{"nodeType":"YulAssignment","src":"1843:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1858:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1876:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1879:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1872:3:21"},"nodeType":"YulFunctionCall","src":"1872:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1889:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1885:3:21"},"nodeType":"YulFunctionCall","src":"1885:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1868:3:21"},"nodeType":"YulFunctionCall","src":"1868:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1864:3:21"},"nodeType":"YulFunctionCall","src":"1864:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1854:3:21"},"nodeType":"YulFunctionCall","src":"1854:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1900:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1903:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1896:3:21"},"nodeType":"YulFunctionCall","src":"1896:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1851:2:21"},"nodeType":"YulFunctionCall","src":"1851:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1843:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1810:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"1816:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1824:4:21","type":""}],"src":"1748:166:21"},{"body":{"nodeType":"YulBlock","src":"2015:1256:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2025:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2045:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2039:5:21"},"nodeType":"YulFunctionCall","src":"2039:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2029:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2092:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2094:16:21"},"nodeType":"YulFunctionCall","src":"2094:18:21"},"nodeType":"YulExpressionStatement","src":"2094:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2064:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2080:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2084:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2076:3:21"},"nodeType":"YulFunctionCall","src":"2076:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2088:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2072:3:21"},"nodeType":"YulFunctionCall","src":"2072:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2061:2:21"},"nodeType":"YulFunctionCall","src":"2061:30:21"},"nodeType":"YulIf","src":"2058:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2167:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2205:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2199:5:21"},"nodeType":"YulFunctionCall","src":"2199:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2173:25:21"},"nodeType":"YulFunctionCall","src":"2173:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"2213:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2123:43:21"},"nodeType":"YulFunctionCall","src":"2123:97:21"},"nodeType":"YulExpressionStatement","src":"2123:97:21"},{"nodeType":"YulVariableDeclaration","src":"2229:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2246:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2233:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2256:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2275:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2260:11:21","type":""}]},{"nodeType":"YulAssignment","src":"2288:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2301:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2288:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2358:656:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2372:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2391:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2403:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2399:3:21"},"nodeType":"YulFunctionCall","src":"2399:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2387:3:21"},"nodeType":"YulFunctionCall","src":"2387:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2376:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2420:49:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2464:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2434:29:21"},"nodeType":"YulFunctionCall","src":"2434:35:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2424:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2482:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2491:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2486:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2569:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2594:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2612:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2617:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2608:3:21"},"nodeType":"YulFunctionCall","src":"2608:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2602:5:21"},"nodeType":"YulFunctionCall","src":"2602:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2587:6:21"},"nodeType":"YulFunctionCall","src":"2587:42:21"},"nodeType":"YulExpressionStatement","src":"2587:42:21"},{"nodeType":"YulAssignment","src":"2646:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2660:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2668:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2656:3:21"},"nodeType":"YulFunctionCall","src":"2656:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2646:6:21"}]},{"nodeType":"YulAssignment","src":"2687:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2704:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2715:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2700:3:21"},"nodeType":"YulFunctionCall","src":"2700:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2687:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2516:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2519:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2513:2:21"},"nodeType":"YulFunctionCall","src":"2513:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2528:28:21","statements":[{"nodeType":"YulAssignment","src":"2530:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2539:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2542:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:21"},"nodeType":"YulFunctionCall","src":"2535:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2530:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2509:3:21","statements":[]},"src":"2505:236:21"},{"body":{"nodeType":"YulBlock","src":"2789:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2807:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2834:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2839:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2830:3:21"},"nodeType":"YulFunctionCall","src":"2830:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2824:5:21"},"nodeType":"YulFunctionCall","src":"2824:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2811:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2874:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2886:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2913:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2916:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2909:3:21"},"nodeType":"YulFunctionCall","src":"2909:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"2925:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2905:3:21"},"nodeType":"YulFunctionCall","src":"2905:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2935:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2931:3:21"},"nodeType":"YulFunctionCall","src":"2931:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2901:3:21"},"nodeType":"YulFunctionCall","src":"2901:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2897:3:21"},"nodeType":"YulFunctionCall","src":"2897:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2882:3:21"},"nodeType":"YulFunctionCall","src":"2882:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2867:6:21"},"nodeType":"YulFunctionCall","src":"2867:74:21"},"nodeType":"YulExpressionStatement","src":"2867:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2760:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"2769:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2757:2:21"},"nodeType":"YulFunctionCall","src":"2757:19:21"},"nodeType":"YulIf","src":"2754:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2975:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2989:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2992:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2985:3:21"},"nodeType":"YulFunctionCall","src":"2985:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3001:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2981:3:21"},"nodeType":"YulFunctionCall","src":"2981:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2968:6:21"},"nodeType":"YulFunctionCall","src":"2968:36:21"},"nodeType":"YulExpressionStatement","src":"2968:36:21"}]},"nodeType":"YulCase","src":"2351:663:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2356:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3031:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3045:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3058:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3049:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3094:67:21","statements":[{"nodeType":"YulAssignment","src":"3112:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3131:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3136:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3127:3:21"},"nodeType":"YulFunctionCall","src":"3127:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3121:5:21"},"nodeType":"YulFunctionCall","src":"3121:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3112:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3075:6:21"},"nodeType":"YulIf","src":"3072:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3181:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3240:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"3247:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3187:52:21"},"nodeType":"YulFunctionCall","src":"3187:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3174:6:21"},"nodeType":"YulFunctionCall","src":"3174:81:21"},"nodeType":"YulExpressionStatement","src":"3174:81:21"}]},"nodeType":"YulCase","src":"3023:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2331:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2339:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2328:2:21"},"nodeType":"YulFunctionCall","src":"2328:14:21"},"nodeType":"YulSwitch","src":"2321:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2000:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"2006:3:21","type":""}],"src":"1919:1352:21"},{"body":{"nodeType":"YulBlock","src":"3450:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3478:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3460:6:21"},"nodeType":"YulFunctionCall","src":"3460:21:21"},"nodeType":"YulExpressionStatement","src":"3460:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3501:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3512:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3497:3:21"},"nodeType":"YulFunctionCall","src":"3497:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3517:2:21","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3490:6:21"},"nodeType":"YulFunctionCall","src":"3490:30:21"},"nodeType":"YulExpressionStatement","src":"3490:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3551:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:21"},"nodeType":"YulFunctionCall","src":"3536:18:21"},{"hexValue":"45524332304361707065643a206361702069732030","kind":"string","nodeType":"YulLiteral","src":"3556:23:21","type":"","value":"ERC20Capped: cap is 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3529:6:21"},"nodeType":"YulFunctionCall","src":"3529:51:21"},"nodeType":"YulExpressionStatement","src":"3529:51:21"},{"nodeType":"YulAssignment","src":"3589:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3601:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3612:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3597:3:21"},"nodeType":"YulFunctionCall","src":"3597:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3589:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3427:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3441:4:21","type":""}],"src":"3276:345:21"},{"body":{"nodeType":"YulBlock","src":"3839:276:21","statements":[{"nodeType":"YulAssignment","src":"3849:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3861:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3872:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:21"},"nodeType":"YulFunctionCall","src":"3857:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3849:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3892:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"3903:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:21"},"nodeType":"YulFunctionCall","src":"3885:25:21"},"nodeType":"YulExpressionStatement","src":"3885:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3930:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3941:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3926:3:21"},"nodeType":"YulFunctionCall","src":"3926:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"3946:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3919:6:21"},"nodeType":"YulFunctionCall","src":"3919:34:21"},"nodeType":"YulExpressionStatement","src":"3919:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3973:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3984:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3969:3:21"},"nodeType":"YulFunctionCall","src":"3969:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"3989:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3962:6:21"},"nodeType":"YulFunctionCall","src":"3962:34:21"},"nodeType":"YulExpressionStatement","src":"3962:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4016:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4027:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4012:3:21"},"nodeType":"YulFunctionCall","src":"4012:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"4032:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4005:6:21"},"nodeType":"YulFunctionCall","src":"4005:34:21"},"nodeType":"YulExpressionStatement","src":"4005:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4059:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4070:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4055:3:21"},"nodeType":"YulFunctionCall","src":"4055:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4080:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4096:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4101:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4092:3:21"},"nodeType":"YulFunctionCall","src":"4092:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4105:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4088:3:21"},"nodeType":"YulFunctionCall","src":"4088:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4076:3:21"},"nodeType":"YulFunctionCall","src":"4076:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4048:6:21"},"nodeType":"YulFunctionCall","src":"4048:61:21"},"nodeType":"YulExpressionStatement","src":"4048:61:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3776:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3787:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3795:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3803:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3811:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3819:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3830:4:21","type":""}],"src":"3626:489:21"},{"body":{"nodeType":"YulBlock","src":"4241:427:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4251:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4261:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4255:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4279:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4290:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4272:6:21"},"nodeType":"YulFunctionCall","src":"4272:21:21"},"nodeType":"YulExpressionStatement","src":"4272:21:21"},{"nodeType":"YulVariableDeclaration","src":"4302:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4322:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4316:5:21"},"nodeType":"YulFunctionCall","src":"4316:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4306:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4349:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4360:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4345:3:21"},"nodeType":"YulFunctionCall","src":"4345:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"4365:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4338:6:21"},"nodeType":"YulFunctionCall","src":"4338:34:21"},"nodeType":"YulExpressionStatement","src":"4338:34:21"},{"nodeType":"YulVariableDeclaration","src":"4381:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4390:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4385:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4450:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4479:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"4490:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4475:3:21"},"nodeType":"YulFunctionCall","src":"4475:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"4494:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4471:3:21"},"nodeType":"YulFunctionCall","src":"4471:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4513:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"4521:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4509:3:21"},"nodeType":"YulFunctionCall","src":"4509:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4525:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4505:3:21"},"nodeType":"YulFunctionCall","src":"4505:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4499:5:21"},"nodeType":"YulFunctionCall","src":"4499:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4464:6:21"},"nodeType":"YulFunctionCall","src":"4464:66:21"},"nodeType":"YulExpressionStatement","src":"4464:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4411:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"4414:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4408:2:21"},"nodeType":"YulFunctionCall","src":"4408:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4422:19:21","statements":[{"nodeType":"YulAssignment","src":"4424:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4433:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4436:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4429:3:21"},"nodeType":"YulFunctionCall","src":"4429:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4424:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"4404:3:21","statements":[]},"src":"4400:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4564:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"4575:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4560:3:21"},"nodeType":"YulFunctionCall","src":"4560:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"4584:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4556:3:21"},"nodeType":"YulFunctionCall","src":"4556:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"4589:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4549:6:21"},"nodeType":"YulFunctionCall","src":"4549:42:21"},"nodeType":"YulExpressionStatement","src":"4549:42:21"},{"nodeType":"YulAssignment","src":"4600:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4616:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4635:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4643:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4631:3:21"},"nodeType":"YulFunctionCall","src":"4631:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4652:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4648:3:21"},"nodeType":"YulFunctionCall","src":"4648:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4627:3:21"},"nodeType":"YulFunctionCall","src":"4627:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4612:3:21"},"nodeType":"YulFunctionCall","src":"4612:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"4659:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:21"},"nodeType":"YulFunctionCall","src":"4608:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4600:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4210:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4221:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4232:4:21","type":""}],"src":"4120:548:21"},{"body":{"nodeType":"YulBlock","src":"4767:203:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4777:26:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4797:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4791:5:21"},"nodeType":"YulFunctionCall","src":"4791:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4781:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4812:32:21","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4831:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4838:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4827:3:21"},"nodeType":"YulFunctionCall","src":"4827:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4821:5:21"},"nodeType":"YulFunctionCall","src":"4821:23:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4812:5:21"}]},{"body":{"nodeType":"YulBlock","src":"4881:83:21","statements":[{"nodeType":"YulAssignment","src":"4895:59:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4908:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4923:1:21","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4930:4:21","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"4936:6:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4926:3:21"},"nodeType":"YulFunctionCall","src":"4926:17:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4919:3:21"},"nodeType":"YulFunctionCall","src":"4919:25:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4950:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4946:3:21"},"nodeType":"YulFunctionCall","src":"4946:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4915:3:21"},"nodeType":"YulFunctionCall","src":"4915:38:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4904:3:21"},"nodeType":"YulFunctionCall","src":"4904:50:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4895:5:21"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4859:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4867:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4856:2:21"},"nodeType":"YulFunctionCall","src":"4856:16:21"},"nodeType":"YulIf","src":"4853:111:21"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4747:5:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4757:5:21","type":""}],"src":"4673:297:21"},{"body":{"nodeType":"YulBlock","src":"5023:174:21","statements":[{"nodeType":"YulAssignment","src":"5033:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5044:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"5047:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5040:3:21"},"nodeType":"YulFunctionCall","src":"5040:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5033:3:21"}]},{"body":{"nodeType":"YulBlock","src":"5080:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5101:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5108:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5113:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5104:3:21"},"nodeType":"YulFunctionCall","src":"5104:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5094:6:21"},"nodeType":"YulFunctionCall","src":"5094:31:21"},"nodeType":"YulExpressionStatement","src":"5094:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5145:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5148:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5138:6:21"},"nodeType":"YulFunctionCall","src":"5138:15:21"},"nodeType":"YulExpressionStatement","src":"5138:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5173:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5176:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5166:6:21"},"nodeType":"YulFunctionCall","src":"5166:15:21"},"nodeType":"YulExpressionStatement","src":"5166:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5064:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"5067:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5061:2:21"},"nodeType":"YulFunctionCall","src":"5061:10:21"},"nodeType":"YulIf","src":"5058:133:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5006:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"5009:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5015:3:21","type":""}],"src":"4975:222:21"},{"body":{"nodeType":"YulBlock","src":"5376:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5393:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5404:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5386:6:21"},"nodeType":"YulFunctionCall","src":"5386:21:21"},"nodeType":"YulExpressionStatement","src":"5386:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5427:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5438:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5423:3:21"},"nodeType":"YulFunctionCall","src":"5423:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5443:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5416:6:21"},"nodeType":"YulFunctionCall","src":"5416:30:21"},"nodeType":"YulExpressionStatement","src":"5416:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5466:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5477:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5462:3:21"},"nodeType":"YulFunctionCall","src":"5462:18:21"},{"hexValue":"45524332304361707065643a20636170206578636565646564","kind":"string","nodeType":"YulLiteral","src":"5482:27:21","type":"","value":"ERC20Capped: cap exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5455:6:21"},"nodeType":"YulFunctionCall","src":"5455:55:21"},"nodeType":"YulExpressionStatement","src":"5455:55:21"},{"nodeType":"YulAssignment","src":"5519:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5542:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5527:3:21"},"nodeType":"YulFunctionCall","src":"5527:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5519:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5353:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5367:4:21","type":""}],"src":"5202:349:21"},{"body":{"nodeType":"YulBlock","src":"5730:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5747:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5758:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5740:6:21"},"nodeType":"YulFunctionCall","src":"5740:21:21"},"nodeType":"YulExpressionStatement","src":"5740:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5781:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5792:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5777:3:21"},"nodeType":"YulFunctionCall","src":"5777:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5797:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5770:6:21"},"nodeType":"YulFunctionCall","src":"5770:30:21"},"nodeType":"YulExpressionStatement","src":"5770:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5820:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5831:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5816:3:21"},"nodeType":"YulFunctionCall","src":"5816:18:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"5836:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5809:6:21"},"nodeType":"YulFunctionCall","src":"5809:61:21"},"nodeType":"YulExpressionStatement","src":"5809:61:21"},{"nodeType":"YulAssignment","src":"5879:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5902:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5887:3:21"},"nodeType":"YulFunctionCall","src":"5887:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5879:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5707:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5721:4:21","type":""}],"src":"5556:355:21"},{"body":{"nodeType":"YulBlock","src":"6017:76:21","statements":[{"nodeType":"YulAssignment","src":"6027:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6039:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6050:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6035:3:21"},"nodeType":"YulFunctionCall","src":"6035:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6027:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6069:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"6080:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6062:6:21"},"nodeType":"YulFunctionCall","src":"6062:25:21"},"nodeType":"YulExpressionStatement","src":"6062:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5986:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5997:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6008:4:21","type":""}],"src":"5916:177:21"},{"body":{"nodeType":"YulBlock","src":"6272:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6289:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6300:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6282:6:21"},"nodeType":"YulFunctionCall","src":"6282:21:21"},"nodeType":"YulExpressionStatement","src":"6282:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6323:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6334:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6319:3:21"},"nodeType":"YulFunctionCall","src":"6319:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6339:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6312:6:21"},"nodeType":"YulFunctionCall","src":"6312:30:21"},"nodeType":"YulExpressionStatement","src":"6312:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6362:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6373:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6358:3:21"},"nodeType":"YulFunctionCall","src":"6358:18:21"},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768","kind":"string","nodeType":"YulLiteral","src":"6378:34:21","type":"","value":"ERC20Pausable: token transfer wh"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6351:6:21"},"nodeType":"YulFunctionCall","src":"6351:62:21"},"nodeType":"YulExpressionStatement","src":"6351:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6433:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6444:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6429:3:21"},"nodeType":"YulFunctionCall","src":"6429:18:21"},{"hexValue":"696c6520706175736564","kind":"string","nodeType":"YulLiteral","src":"6449:12:21","type":"","value":"ile paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6422:6:21"},"nodeType":"YulFunctionCall","src":"6422:40:21"},"nodeType":"YulExpressionStatement","src":"6422:40:21"},{"nodeType":"YulAssignment","src":"6471:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6483:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6494:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6479:3:21"},"nodeType":"YulFunctionCall","src":"6479:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6471:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6249:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6263:4:21","type":""}],"src":"6098:406:21"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20Capped: cap is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1FB7 CODESIZE SUB DUP1 PUSH3 0x1FB7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x67434F5449 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434F544920547265617375727920476F7665726E616E636520546F6B656E0000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x67434F5449 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xD4 SWAP2 SWAP1 PUSH3 0x5CF JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xE3 DUP3 DUP3 PUSH3 0x5CF JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP2 GT PUSH3 0x13C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020697320300000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x80 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x154 CALLER PUSH3 0x22C JUMP JUMPDEST PUSH3 0x161 DUP3 PUSH1 0x6 PUSH3 0x286 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH3 0x172 DUP2 PUSH1 0x7 PUSH3 0x286 JUMP JUMPDEST PUSH2 0x160 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x100 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x120 MSTORE CHAINID PUSH1 0xC0 MSTORE PUSH3 0x202 PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA0 MSTORE POP POP ADDRESS PUSH1 0xE0 MSTORE POP PUSH3 0x218 DUP3 DUP3 PUSH3 0x2BF JUMP JUMPDEST PUSH3 0x223 DUP4 PUSH3 0x22C JUMP JUMPDEST POP POP POP PUSH3 0x732 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x2A6 JUMPI PUSH3 0x29E DUP4 PUSH3 0x2CF JUMP JUMPDEST SWAP1 POP PUSH3 0x2B9 JUMP JUMPDEST DUP2 PUSH3 0x2B3 DUP5 DUP3 PUSH3 0x5CF JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2CB DUP3 DUP3 PUSH3 0x312 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x2FD JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x133 SWAP2 SWAP1 PUSH3 0x69B JUMP JUMPDEST DUP1 MLOAD PUSH3 0x30A DUP3 PUSH3 0x6EB JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD DUP2 PUSH3 0x320 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH3 0x32C SWAP2 SWAP1 PUSH3 0x710 JUMP JUMPDEST GT ISZERO PUSH3 0x37C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x133 JUMP JUMPDEST PUSH3 0x2CB DUP3 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x133 JUMP JUMPDEST PUSH3 0x3E8 PUSH1 0x0 DUP4 DUP4 PUSH3 0x453 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x3FC SWAP2 SWAP1 PUSH3 0x710 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x460 DUP4 DUP4 DUP4 PUSH3 0x465 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x133 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x50B DUP5 PUSH3 0x4CD JUMP JUMPDEST SWAP3 POP PUSH3 0x51B PUSH1 0x20 DUP6 ADD PUSH3 0x4CD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x556 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x577 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x460 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x5A6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5C7 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x5B2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x5EB JUMPI PUSH3 0x5EB PUSH3 0x52B JUMP JUMPDEST PUSH3 0x603 DUP2 PUSH3 0x5FC DUP5 SLOAD PUSH3 0x541 JUMP JUMPDEST DUP5 PUSH3 0x57D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x63B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x622 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x5C7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x66C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x64B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x68B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6CA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x6AC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x577 JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x2B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x1818 PUSH3 0x79F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x537 ADD MSTORE PUSH1 0x0 PUSH2 0x50C ADD MSTORE PUSH1 0x0 PUSH2 0xC51 ADD MSTORE PUSH1 0x0 PUSH2 0xC29 ADD MSTORE PUSH1 0x0 PUSH2 0xB84 ADD MSTORE PUSH1 0x0 PUSH2 0xBAE ADD MSTORE PUSH1 0x0 PUSH2 0xBD8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1EF ADD MSTORE PUSH2 0x10AE ADD MSTORE PUSH2 0x1818 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15CB JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x443 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST PUSH2 0x180 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x1777 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AE SWAP1 PUSH2 0x1777 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x413 DUP2 DUP6 DUP6 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x42D DUP6 DUP3 DUP6 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x438 DUP6 DUP6 DUP6 PUSH2 0x9C8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x413 DUP2 DUP6 DUP6 PUSH2 0x465 DUP4 DUP4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH2 0x47C PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x484 PUSH2 0xD02 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x48E PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0xD54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4A6 CALLER DUP3 PUSH2 0xD5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x484 PUSH1 0x0 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x4C6 DUP3 CALLER DUP4 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x419 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x484 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x532 PUSH32 0x0 PUSH1 0x6 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x55D PUSH32 0x0 PUSH1 0x7 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x5A4 DUP3 DUP7 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x438 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x829 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x413 DUP2 DUP6 DUP6 PUSH2 0x9C8 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6A3 DUP13 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x6FE DUP3 PUSH2 0x1003 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x70E DUP3 DUP8 DUP8 DUP8 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x77C DUP11 DUP11 DUP11 PUSH2 0x829 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7BB PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x4A6 DUP2 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95A DUP5 DUP5 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9C2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x9C2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x829 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xA99 DUP4 DUP4 DUP4 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xBD0 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xBFA JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x44D PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xD0A PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xDCA DUP3 PUSH1 0x0 DUP4 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x941 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEFB PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD37 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xF4A JUMPI PUSH2 0xF43 DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP1 POP PUSH2 0x419 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xF56 SWAP1 PUSH2 0x1777 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF82 SWAP1 PUSH2 0x1777 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFCF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFB2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x419 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x419 PUSH2 0x1010 PUSH2 0xB77 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1041 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x104E DUP2 PUSH2 0x1282 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE94 DUP4 DUP4 DUP4 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x10D7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST GT ISZERO PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x118C DUP4 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x11F5 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1272 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1296 JUMPI PUSH2 0x1296 PUSH2 0x17CC JUMP JUMPDEST SUB PUSH2 0x129E JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12B2 JUMPI PUSH2 0x12B2 PUSH2 0x17CC JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1313 PUSH2 0x17CC JUMP JUMPDEST SUB PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1374 JUMPI PUSH2 0x1374 PUSH2 0x17CC JUMP JUMPDEST SUB PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x1494 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1058 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14A6 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x154B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x152F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x157E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1525 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x159C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15BD DUP4 PUSH2 0x1585 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E9 DUP5 PUSH2 0x1585 JUMP JUMPDEST SWAP3 POP PUSH2 0x15F7 PUSH1 0x20 DUP6 ADD PUSH2 0x1585 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x157E DUP3 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x165B PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1525 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x166D DUP2 DUP11 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16BF JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x16A3 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F5 DUP9 PUSH2 0x1585 JUMP JUMPDEST SWAP7 POP PUSH2 0x1703 PUSH1 0x20 DUP10 ADD PUSH2 0x1585 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1760 DUP4 PUSH2 0x1585 JUMP JUMPDEST SWAP2 POP PUSH2 0x176E PUSH1 0x20 DUP5 ADD PUSH2 0x1585 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x178B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x419 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xE 0xE5 RETURNDATASIZE DUP6 0xA8 0xDE PUSH32 0xBAA07977B5FF726DDBAFDF4F22A3E2F3A3880966B90DF01564736F6C63430008 SGT STOP CALLER ","sourceMap":"540:1017:20:-:0;;;635:303;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1817:52:8;;;;;;;;;;;;;-1:-1:-1;;;1817:52:8;;;1856:4;3178:431:17;;;;;;;;;;;;;-1:-1:-1;;;3178:431:17;;;786:11:20;1980:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:3;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:3;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;501:1:6;494:4;:8;486:42;;;;-1:-1:-1;;;486:42:6;;3478:2:21;486:42:6;;;3460:21:21;3517:2;3497:18;;;3490:30;3556:23;3536:18;;;3529:51;3597:18;;486:42:6;;;;;;;;;538:11;;996:7:2;:15;;-1:-1:-1;;996:15:2;;;936:32:0;734:10:11;936:18:0;:32::i;:::-;3251:45:17;:4;3282:13;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;3885:25:21;3926:18;;;3919:34;;;;3969:18;;;3962:34;4106:13:17;4012:18:21;;;4005:34;4129:4:17;4055:19:21;;;4048:61;4018:7:17;;3857:19:21;;4054:81:17;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:17;3575:27;;-1:-1:-1;860:29:20::4;866:9:::0;877:11;860:5:::4;:29::i;:::-;899:32;918:12:::0;899:18:::4;:32::i;:::-;635:303:::0;;;540:1017;;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2895:341:13:-;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:13;;-1:-1:-1;3014:216:13;2895:341;;;;:::o;1424:131:20:-;1520:28;1532:7;1541:6;1520:11;:28::i;:::-;1424:131;;:::o;1689:286:13:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:13;;;;;;;;:::i;1817:72::-;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:13:o;769:204:6:-;705:4;;883:6;861:19;3342:12:3;;;3255:106;861:19:6;:28;;;;:::i;:::-;:37;;853:75;;;;-1:-1:-1;;;853:75:6;;5404:2:21;853:75:6;;;5386:21:21;5443:2;5423:18;;;5416:30;5482:27;5462:18;;;5455:55;5527:18;;853:75:6;5202:349:21;853:75:6;938:28;950:7;959:6;-1:-1:-1;;;;;8603:21:3;;8595:65;;;;-1:-1:-1;;;8595:65:3;;5758:2:21;8595:65:3;;;5740:21:21;5797:2;5777:18;;;5770:30;5836:33;5816:18;;;5809:61;5887:18;;8595:65:3;5556:355:21;8595:65:3;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:3;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;6062:25:21;;;8952:37:3;;6035:18:21;8952:37:3;;;;;;;1424:131:20;;:::o;1245:173::-;1367:44;1394:4;1400:2;1404:6;1367:26;:44::i;:::-;1245:173;;;:::o;1046:234:7:-;1685:7:2;;;;1217:9:7;1209:64;;;;-1:-1:-1;;;1209:64:7;;6300:2:21;1209:64:7;;;6282:21:21;6339:2;6319:18;;;6312:30;6378:34;6358:18;;;6351:62;-1:-1:-1;;;6429:18:21;;;6422:40;6479:19;;1209:64:7;6098:406:21;14:177;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;540:2;529:9;525:18;519:25;509:35;;196:354;;;;;:::o;555:127::-;616:10;611:3;607:20;604:1;597:31;647:4;644:1;637:15;671:4;668:1;661:15;687:380;766:1;762:12;;;;809;;;830:61;;884:4;876:6;872:17;862:27;;830:61;937:2;929:6;926:14;906:18;903:38;900:161;;983:10;978:3;974:20;971:1;964:31;1018:4;1015:1;1008:15;1046:4;1043:1;1036:15;900:161;;687:380;;;:::o;1198:545::-;1300:2;1295:3;1292:11;1289:448;;;1336:1;1361:5;1357:2;1350:17;1406:4;1402:2;1392:19;1476:2;1464:10;1460:19;1457:1;1453:27;1447:4;1443:38;1512:4;1500:10;1497:20;1494:47;;;-1:-1:-1;1535:4:21;1494:47;1590:2;1585:3;1581:12;1578:1;1574:20;1568:4;1564:31;1554:41;;1645:82;1663:2;1656:5;1653:13;1645:82;;;1708:17;;;1689:1;1678:13;1645:82;;;1649:3;;;1198:545;;;:::o;1919:1352::-;2039:10;;-1:-1:-1;;;;;2061:30:21;;2058:56;;;2094:18;;:::i;:::-;2123:97;2213:6;2173:38;2205:4;2199:11;2173:38;:::i;:::-;2167:4;2123:97;:::i;:::-;2275:4;;2339:2;2328:14;;2356:1;2351:663;;;;3058:1;3075:6;3072:89;;;-1:-1:-1;3127:19:21;;;3121:26;3072:89;-1:-1:-1;;1876:1:21;1872:11;;;1868:24;1864:29;1854:40;1900:1;1896:11;;;1851:57;3174:81;;2321:944;;2351:663;1145:1;1138:14;;;1182:4;1169:18;;-1:-1:-1;;2387:20:21;;;2505:236;2519:7;2516:1;2513:14;2505:236;;;2608:19;;;2602:26;2587:42;;2700:27;;;;2668:1;2656:14;;;;2535:19;;2505:236;;;2509:3;2769:6;2760:7;2757:19;2754:201;;;2830:19;;;2824:26;-1:-1:-1;;2913:1:21;2909:14;;;2925:3;2905:24;2901:37;2897:42;2882:58;2867:74;;2754:201;-1:-1:-1;;;;;3001:1:21;2985:14;;;2981:22;2968:36;;-1:-1:-1;1919:1352:21:o;4120:548::-;4232:4;4261:2;4290;4279:9;4272:21;4322:6;4316:13;4365:6;4360:2;4349:9;4345:18;4338:34;4390:1;4400:140;4414:6;4411:1;4408:13;4400:140;;;4509:14;;;4505:23;;4499:30;4475:17;;;4494:2;4471:26;4464:66;4429:10;;4400:140;;;4404:3;4589:1;4584:2;4575:6;4564:9;4560:22;4556:31;4549:42;4659:2;4652;4648:7;4643:2;4635:6;4631:15;4627:29;4616:9;4612:45;4608:54;4600:62;;;;4120:548;;;;:::o;4673:297::-;4791:12;;4838:4;4827:16;;;4821:23;;4791:12;4856:16;;4853:111;;;-1:-1:-1;;4930:4:21;4926:17;;;;4923:1;4919:25;4915:38;4904:50;;4673:297;-1:-1:-1;4673:297:21:o;4975:222::-;5040:9;;;5061:10;;;5058:133;;;5113:10;5108:3;5104:20;5101:1;5094:31;5148:4;5145:1;5138:15;5176:4;5173:1;5166:15;6098:406;540:1017:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1198":{"entryPoint":1091,"id":1198,"parameterSlots":0,"returnSlots":1},"@_afterTokenTransfer_831":{"entryPoint":null,"id":831,"parameterSlots":3,"returnSlots":0},"@_approve_766":{"entryPoint":2089,"id":766,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1055":{"entryPoint":5068,"id":1055,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_3600":{"entryPoint":4184,"id":3600,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_820":{"entryPoint":null,"id":820,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_2454":{"entryPoint":null,"id":2454,"parameterSlots":0,"returnSlots":1},"@_burn_721":{"entryPoint":3422,"id":721,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":3234,"id":54,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_2433":{"entryPoint":2935,"id":2433,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2470":{"entryPoint":4099,"id":2470,"parameterSlots":1,"returnSlots":1},"@_mint_1018":{"entryPoint":4268,"id":1018,"parameterSlots":2,"returnSlots":0},"@_mint_3618":{"entryPoint":3412,"id":3618,"parameterSlots":2,"returnSlots":0},"@_mint_649":{"entryPoint":5170,"id":649,"parameterSlots":2,"returnSlots":0},"@_msgSender_1301":{"entryPoint":null,"id":1301,"parameterSlots":0,"returnSlots":1},"@_pause_228":{"entryPoint":3827,"id":228,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_201":{"entryPoint":4409,"id":201,"parameterSlots":0,"returnSlots":0},"@_requirePaused_212":{"entryPoint":4195,"id":212,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_809":{"entryPoint":2382,"id":809,"parameterSlots":3,"returnSlots":0},"@_throwError_2002":{"entryPoint":4738,"id":2002,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":3737,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_592":{"entryPoint":2504,"id":592,"parameterSlots":3,"returnSlots":0},"@_unpause_244":{"entryPoint":3330,"id":244,"parameterSlots":0,"returnSlots":0},"@_useNonce_1227":{"entryPoint":4059,"id":1227,"parameterSlots":1,"returnSlots":1},"@allowance_387":{"entryPoint":1928,"id":387,"parameterSlots":2,"returnSlots":1},"@approve_412":{"entryPoint":1029,"id":412,"parameterSlots":2,"returnSlots":1},"@balanceOf_344":{"entryPoint":null,"id":344,"parameterSlots":1,"returnSlots":1},"@burnFrom_953":{"entryPoint":1211,"id":953,"parameterSlots":2,"returnSlots":0},"@burn_932":{"entryPoint":1180,"id":932,"parameterSlots":1,"returnSlots":0},"@byteLength_1510":{"entryPoint":5373,"id":1510,"parameterSlots":1,"returnSlots":1},"@cap_989":{"entryPoint":null,"id":989,"parameterSlots":0,"returnSlots":1},"@current_1337":{"entryPoint":null,"id":1337,"parameterSlots":1,"returnSlots":1},"@decimals_320":{"entryPoint":null,"id":320,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_515":{"entryPoint":1430,"id":515,"parameterSlots":2,"returnSlots":1},"@eip712Domain_2517":{"entryPoint":1278,"id":2517,"parameterSlots":0,"returnSlots":7},"@increaseAllowance_474":{"entryPoint":1106,"id":474,"parameterSlots":2,"returnSlots":1},"@increment_1351":{"entryPoint":null,"id":1351,"parameterSlots":1,"returnSlots":0},"@mint_3579":{"entryPoint":1158,"id":3579,"parameterSlots":2,"returnSlots":0},"@name_300":{"entryPoint":883,"id":300,"parameterSlots":0,"returnSlots":1},"@nonces_1187":{"entryPoint":1232,"id":1187,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@pause_3555":{"entryPoint":1262,"id":3555,"parameterSlots":0,"returnSlots":0},"@paused_189":{"entryPoint":null,"id":189,"parameterSlots":0,"returnSlots":1},"@permit_1171":{"entryPoint":1572,"id":1171,"parameterSlots":7,"returnSlots":0},"@recover_2249":{"entryPoint":4144,"id":2249,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":1193,"id":68,"parameterSlots":0,"returnSlots":0},"@symbol_310":{"entryPoint":1415,"id":310,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1577":{"entryPoint":3888,"id":1577,"parameterSlots":2,"returnSlots":1},"@toString_1478":{"entryPoint":4479,"id":1478,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2293":{"entryPoint":null,"id":2293,"parameterSlots":2,"returnSlots":1},"@totalSupply_330":{"entryPoint":null,"id":330,"parameterSlots":0,"returnSlots":1},"@transferFrom_445":{"entryPoint":1055,"id":445,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":1971,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_369":{"entryPoint":1558,"id":369,"parameterSlots":2,"returnSlots":1},"@tryRecover_2216":{"entryPoint":4542,"id":2216,"parameterSlots":4,"returnSlots":2},"@unpause_3564":{"entryPoint":1140,"id":3564,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":5509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5956,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5579,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":5841,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5537,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":5639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5691,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6059,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6007,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":6092,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15373:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:373:21","statements":[{"nodeType":"YulVariableDeclaration","src":"74:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"94:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:21"},"nodeType":"YulFunctionCall","src":"88:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"78:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"116:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"121:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109:6:21"},"nodeType":"YulFunctionCall","src":"109:19:21"},"nodeType":"YulExpressionStatement","src":"109:19:21"},{"nodeType":"YulVariableDeclaration","src":"137:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"146:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"141:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"208:110:21","statements":[{"nodeType":"YulVariableDeclaration","src":"222:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"232:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"226:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"264:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"269:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"260:3:21"},"nodeType":"YulFunctionCall","src":"260:11:21"},{"name":"_1","nodeType":"YulIdentifier","src":"273:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"256:3:21"},"nodeType":"YulFunctionCall","src":"256:20:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:21"},{"name":"i","nodeType":"YulIdentifier","src":"299:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:21"},"nodeType":"YulFunctionCall","src":"288:13:21"},{"name":"_1","nodeType":"YulIdentifier","src":"303:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:21"},"nodeType":"YulFunctionCall","src":"284:22:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"278:5:21"},"nodeType":"YulFunctionCall","src":"278:29:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"249:6:21"},"nodeType":"YulFunctionCall","src":"249:59:21"},"nodeType":"YulExpressionStatement","src":"249:59:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"167:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"170:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"164:2:21"},"nodeType":"YulFunctionCall","src":"164:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"178:21:21","statements":[{"nodeType":"YulAssignment","src":"180:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"189:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"192:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"185:3:21"},"nodeType":"YulFunctionCall","src":"185:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"180:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"160:3:21","statements":[]},"src":"156:162:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"342:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"347:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"338:3:21"},"nodeType":"YulFunctionCall","src":"338:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"356:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"334:3:21"},"nodeType":"YulFunctionCall","src":"334:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"327:6:21"},"nodeType":"YulFunctionCall","src":"327:38:21"},"nodeType":"YulExpressionStatement","src":"327:38:21"},{"nodeType":"YulAssignment","src":"374:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"389:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"402:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"410:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"398:3:21"},"nodeType":"YulFunctionCall","src":"398:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"419:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"415:3:21"},"nodeType":"YulFunctionCall","src":"415:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"394:3:21"},"nodeType":"YulFunctionCall","src":"394:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"385:3:21"},"nodeType":"YulFunctionCall","src":"385:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"426:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"381:3:21"},"nodeType":"YulFunctionCall","src":"381:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"374:3:21"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56:3:21","type":""}],"src":"14:423:21"},{"body":{"nodeType":"YulBlock","src":"563:99:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"580:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"591:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"573:6:21"},"nodeType":"YulFunctionCall","src":"573:21:21"},"nodeType":"YulExpressionStatement","src":"573:21:21"},{"nodeType":"YulAssignment","src":"603:53:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"629:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"641:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"652:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"637:3:21"},"nodeType":"YulFunctionCall","src":"637:18:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"611:17:21"},"nodeType":"YulFunctionCall","src":"611:45:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"603:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"532:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"543:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"554:4:21","type":""}],"src":"442:220:21"},{"body":{"nodeType":"YulBlock","src":"716:124:21","statements":[{"nodeType":"YulAssignment","src":"726:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"748:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"735:12:21"},"nodeType":"YulFunctionCall","src":"735:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:21"}]},{"body":{"nodeType":"YulBlock","src":"818:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"827:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"830:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"820:6:21"},"nodeType":"YulFunctionCall","src":"820:12:21"},"nodeType":"YulExpressionStatement","src":"820:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"777:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"788:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"803:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"808:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"799:3:21"},"nodeType":"YulFunctionCall","src":"799:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"812:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"795:3:21"},"nodeType":"YulFunctionCall","src":"795:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"784:3:21"},"nodeType":"YulFunctionCall","src":"784:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"774:2:21"},"nodeType":"YulFunctionCall","src":"774:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"767:6:21"},"nodeType":"YulFunctionCall","src":"767:50:21"},"nodeType":"YulIf","src":"764:70:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"695:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"706:5:21","type":""}],"src":"667:173:21"},{"body":{"nodeType":"YulBlock","src":"932:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"978:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"987:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"990:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"980:6:21"},"nodeType":"YulFunctionCall","src":"980:12:21"},"nodeType":"YulExpressionStatement","src":"980:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"953:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"962:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"949:3:21"},"nodeType":"YulFunctionCall","src":"949:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"974:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"945:3:21"},"nodeType":"YulFunctionCall","src":"945:32:21"},"nodeType":"YulIf","src":"942:52:21"},{"nodeType":"YulAssignment","src":"1003:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1032:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1013:18:21"},"nodeType":"YulFunctionCall","src":"1013:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1003:6:21"}]},{"nodeType":"YulAssignment","src":"1051:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1089:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1074:3:21"},"nodeType":"YulFunctionCall","src":"1074:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1061:12:21"},"nodeType":"YulFunctionCall","src":"1061:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1051:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"890:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"901:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"913:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"921:6:21","type":""}],"src":"845:254:21"},{"body":{"nodeType":"YulBlock","src":"1199:92:21","statements":[{"nodeType":"YulAssignment","src":"1209:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1221:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1232:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1217:3:21"},"nodeType":"YulFunctionCall","src":"1217:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1209:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1251:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1276:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1269:6:21"},"nodeType":"YulFunctionCall","src":"1269:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1262:6:21"},"nodeType":"YulFunctionCall","src":"1262:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1244:6:21"},"nodeType":"YulFunctionCall","src":"1244:41:21"},"nodeType":"YulExpressionStatement","src":"1244:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1179:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1190:4:21","type":""}],"src":"1104:187:21"},{"body":{"nodeType":"YulBlock","src":"1397:76:21","statements":[{"nodeType":"YulAssignment","src":"1407:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1430:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1415:3:21"},"nodeType":"YulFunctionCall","src":"1415:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1407:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1449:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"1460:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1442:6:21"},"nodeType":"YulFunctionCall","src":"1442:25:21"},"nodeType":"YulExpressionStatement","src":"1442:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1377:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1388:4:21","type":""}],"src":"1296:177:21"},{"body":{"nodeType":"YulBlock","src":"1582:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"1628:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1640:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1630:6:21"},"nodeType":"YulFunctionCall","src":"1630:12:21"},"nodeType":"YulExpressionStatement","src":"1630:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1603:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1612:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1599:3:21"},"nodeType":"YulFunctionCall","src":"1599:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1624:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1595:3:21"},"nodeType":"YulFunctionCall","src":"1595:32:21"},"nodeType":"YulIf","src":"1592:52:21"},{"nodeType":"YulAssignment","src":"1653:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1682:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1663:18:21"},"nodeType":"YulFunctionCall","src":"1663:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1653:6:21"}]},{"nodeType":"YulAssignment","src":"1701:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:21"},"nodeType":"YulFunctionCall","src":"1730:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1711:18:21"},"nodeType":"YulFunctionCall","src":"1711:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1701:6:21"}]},{"nodeType":"YulAssignment","src":"1758:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1785:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1796:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1781:3:21"},"nodeType":"YulFunctionCall","src":"1781:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1768:12:21"},"nodeType":"YulFunctionCall","src":"1768:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1758:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1532:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1543:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1555:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1563:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1571:6:21","type":""}],"src":"1478:328:21"},{"body":{"nodeType":"YulBlock","src":"1908:87:21","statements":[{"nodeType":"YulAssignment","src":"1918:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1930:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1941:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1926:3:21"},"nodeType":"YulFunctionCall","src":"1926:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1918:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1960:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1975:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1983:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1971:3:21"},"nodeType":"YulFunctionCall","src":"1971:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:21"},"nodeType":"YulFunctionCall","src":"1953:36:21"},"nodeType":"YulExpressionStatement","src":"1953:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1877:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1888:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1899:4:21","type":""}],"src":"1811:184:21"},{"body":{"nodeType":"YulBlock","src":"2101:76:21","statements":[{"nodeType":"YulAssignment","src":"2111:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2134:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2119:3:21"},"nodeType":"YulFunctionCall","src":"2119:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2111:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2153:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"2164:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2146:6:21"},"nodeType":"YulFunctionCall","src":"2146:25:21"},"nodeType":"YulExpressionStatement","src":"2146:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2070:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2081:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2092:4:21","type":""}],"src":"2000:177:21"},{"body":{"nodeType":"YulBlock","src":"2252:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"2298:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2307:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2310:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2300:6:21"},"nodeType":"YulFunctionCall","src":"2300:12:21"},"nodeType":"YulExpressionStatement","src":"2300:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2273:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2282:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2269:3:21"},"nodeType":"YulFunctionCall","src":"2269:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2294:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2265:3:21"},"nodeType":"YulFunctionCall","src":"2265:32:21"},"nodeType":"YulIf","src":"2262:52:21"},{"nodeType":"YulAssignment","src":"2323:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2346:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2333:12:21"},"nodeType":"YulFunctionCall","src":"2333:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2323:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2218:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2229:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2241:6:21","type":""}],"src":"2182:180:21"},{"body":{"nodeType":"YulBlock","src":"2437:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"2483:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2492:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2495:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2485:6:21"},"nodeType":"YulFunctionCall","src":"2485:12:21"},"nodeType":"YulExpressionStatement","src":"2485:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2458:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2467:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2454:3:21"},"nodeType":"YulFunctionCall","src":"2454:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2479:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2450:3:21"},"nodeType":"YulFunctionCall","src":"2450:32:21"},"nodeType":"YulIf","src":"2447:52:21"},{"nodeType":"YulAssignment","src":"2508:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2537:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2518:18:21"},"nodeType":"YulFunctionCall","src":"2518:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2508:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2403:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2414:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2426:6:21","type":""}],"src":"2367:186:21"},{"body":{"nodeType":"YulBlock","src":"2915:902:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2932:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2947:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2959:3:21","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"2964:3:21","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2955:3:21"},"nodeType":"YulFunctionCall","src":"2955:13:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2943:3:21"},"nodeType":"YulFunctionCall","src":"2943:26:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2925:6:21"},"nodeType":"YulFunctionCall","src":"2925:45:21"},"nodeType":"YulExpressionStatement","src":"2925:45:21"},{"nodeType":"YulVariableDeclaration","src":"2979:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2989:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2983:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3011:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3022:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3007:3:21"},"nodeType":"YulFunctionCall","src":"3007:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3027:3:21","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3000:6:21"},"nodeType":"YulFunctionCall","src":"3000:31:21"},"nodeType":"YulExpressionStatement","src":"3000:31:21"},{"nodeType":"YulVariableDeclaration","src":"3040:60:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3072:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3084:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3095:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3080:3:21"},"nodeType":"YulFunctionCall","src":"3080:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3054:17:21"},"nodeType":"YulFunctionCall","src":"3054:46:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3044:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3120:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3131:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3116:3:21"},"nodeType":"YulFunctionCall","src":"3116:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3140:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3148:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3136:3:21"},"nodeType":"YulFunctionCall","src":"3136:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3109:6:21"},"nodeType":"YulFunctionCall","src":"3109:50:21"},"nodeType":"YulExpressionStatement","src":"3109:50:21"},{"nodeType":"YulVariableDeclaration","src":"3168:47:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3200:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3208:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3182:17:21"},"nodeType":"YulFunctionCall","src":"3182:33:21"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3172:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3235:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3246:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3231:3:21"},"nodeType":"YulFunctionCall","src":"3231:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"3251:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3224:6:21"},"nodeType":"YulFunctionCall","src":"3224:34:21"},"nodeType":"YulExpressionStatement","src":"3224:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3278:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3289:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3274:3:21"},"nodeType":"YulFunctionCall","src":"3274:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3299:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3315:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3320:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3311:3:21"},"nodeType":"YulFunctionCall","src":"3311:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"3324:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3307:3:21"},"nodeType":"YulFunctionCall","src":"3307:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3295:3:21"},"nodeType":"YulFunctionCall","src":"3295:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3267:6:21"},"nodeType":"YulFunctionCall","src":"3267:61:21"},"nodeType":"YulExpressionStatement","src":"3267:61:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:21"},"nodeType":"YulFunctionCall","src":"3344:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"3365:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3337:6:21"},"nodeType":"YulFunctionCall","src":"3337:35:21"},"nodeType":"YulExpressionStatement","src":"3337:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3403:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:21"},"nodeType":"YulFunctionCall","src":"3388:19:21"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"3413:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3409:3:21"},"nodeType":"YulFunctionCall","src":"3409:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3381:6:21"},"nodeType":"YulFunctionCall","src":"3381:51:21"},"nodeType":"YulExpressionStatement","src":"3381:51:21"},{"nodeType":"YulVariableDeclaration","src":"3441:17:21","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"3452:6:21"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3445:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3467:27:21","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"3487:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3481:5:21"},"nodeType":"YulFunctionCall","src":"3481:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3471:6:21","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"3510:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"3518:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3503:6:21"},"nodeType":"YulFunctionCall","src":"3503:22:21"},"nodeType":"YulExpressionStatement","src":"3503:22:21"},{"nodeType":"YulAssignment","src":"3534:22:21","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"3545:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3553:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3541:3:21"},"nodeType":"YulFunctionCall","src":"3541:15:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3534:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"3565:29:21","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"3583:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3591:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3579:3:21"},"nodeType":"YulFunctionCall","src":"3579:15:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3569:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3603:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3612:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3607:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3671:120:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3692:3:21"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3703:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3697:5:21"},"nodeType":"YulFunctionCall","src":"3697:13:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3685:6:21"},"nodeType":"YulFunctionCall","src":"3685:26:21"},"nodeType":"YulExpressionStatement","src":"3685:26:21"},{"nodeType":"YulAssignment","src":"3724:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3735:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3740:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3731:3:21"},"nodeType":"YulFunctionCall","src":"3731:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3724:3:21"}]},{"nodeType":"YulAssignment","src":"3756:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3770:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3778:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3766:3:21"},"nodeType":"YulFunctionCall","src":"3766:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3756:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3633:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"3636:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3630:2:21"},"nodeType":"YulFunctionCall","src":"3630:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3644:18:21","statements":[{"nodeType":"YulAssignment","src":"3646:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3655:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"3658:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3651:3:21"},"nodeType":"YulFunctionCall","src":"3651:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3646:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"3626:3:21","statements":[]},"src":"3622:169:21"},{"nodeType":"YulAssignment","src":"3800:11:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"3808:3:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3800:4:21"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2836:9:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2847:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2855:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2863:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2871:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2879:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2887:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2895:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2906:4:21","type":""}],"src":"2558:1259:21"},{"body":{"nodeType":"YulBlock","src":"3923:102:21","statements":[{"nodeType":"YulAssignment","src":"3933:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3945:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3941:3:21"},"nodeType":"YulFunctionCall","src":"3941:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3933:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3975:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3990:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4006:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4011:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4002:3:21"},"nodeType":"YulFunctionCall","src":"4002:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4015:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3998:3:21"},"nodeType":"YulFunctionCall","src":"3998:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3986:3:21"},"nodeType":"YulFunctionCall","src":"3986:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3968:6:21"},"nodeType":"YulFunctionCall","src":"3968:51:21"},"nodeType":"YulExpressionStatement","src":"3968:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3892:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3903:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3914:4:21","type":""}],"src":"3822:203:21"},{"body":{"nodeType":"YulBlock","src":"4200:523:21","statements":[{"body":{"nodeType":"YulBlock","src":"4247:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4256:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4259:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4249:6:21"},"nodeType":"YulFunctionCall","src":"4249:12:21"},"nodeType":"YulExpressionStatement","src":"4249:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4221:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4230:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4217:3:21"},"nodeType":"YulFunctionCall","src":"4217:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4242:3:21","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4213:3:21"},"nodeType":"YulFunctionCall","src":"4213:33:21"},"nodeType":"YulIf","src":"4210:53:21"},{"nodeType":"YulAssignment","src":"4272:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4301:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4282:18:21"},"nodeType":"YulFunctionCall","src":"4282:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4272:6:21"}]},{"nodeType":"YulAssignment","src":"4320:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4353:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4364:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4349:3:21"},"nodeType":"YulFunctionCall","src":"4349:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4330:18:21"},"nodeType":"YulFunctionCall","src":"4330:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4320:6:21"}]},{"nodeType":"YulAssignment","src":"4377:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4404:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4415:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4400:3:21"},"nodeType":"YulFunctionCall","src":"4400:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4387:12:21"},"nodeType":"YulFunctionCall","src":"4387:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4377:6:21"}]},{"nodeType":"YulAssignment","src":"4428:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4455:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4466:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:21"},"nodeType":"YulFunctionCall","src":"4451:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4438:12:21"},"nodeType":"YulFunctionCall","src":"4438:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4428:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"4479:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4509:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4520:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4505:3:21"},"nodeType":"YulFunctionCall","src":"4505:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4492:12:21"},"nodeType":"YulFunctionCall","src":"4492:33:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4483:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4573:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4582:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4585:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4575:6:21"},"nodeType":"YulFunctionCall","src":"4575:12:21"},"nodeType":"YulExpressionStatement","src":"4575:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4547:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4558:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4565:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4554:3:21"},"nodeType":"YulFunctionCall","src":"4554:16:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4544:2:21"},"nodeType":"YulFunctionCall","src":"4544:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4537:6:21"},"nodeType":"YulFunctionCall","src":"4537:35:21"},"nodeType":"YulIf","src":"4534:55:21"},{"nodeType":"YulAssignment","src":"4598:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4608:5:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4598:6:21"}]},{"nodeType":"YulAssignment","src":"4622:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4649:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4660:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4645:3:21"},"nodeType":"YulFunctionCall","src":"4645:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4632:12:21"},"nodeType":"YulFunctionCall","src":"4632:33:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4622:6:21"}]},{"nodeType":"YulAssignment","src":"4674:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4701:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4712:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4697:3:21"},"nodeType":"YulFunctionCall","src":"4697:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4684:12:21"},"nodeType":"YulFunctionCall","src":"4684:33:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4674:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4118:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4129:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4141:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4149:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4157:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4165:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4173:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4181:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4189:6:21","type":""}],"src":"4030:693:21"},{"body":{"nodeType":"YulBlock","src":"4815:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"4861:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4870:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4873:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4863:6:21"},"nodeType":"YulFunctionCall","src":"4863:12:21"},"nodeType":"YulExpressionStatement","src":"4863:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4836:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4845:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4832:3:21"},"nodeType":"YulFunctionCall","src":"4832:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4857:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4828:3:21"},"nodeType":"YulFunctionCall","src":"4828:32:21"},"nodeType":"YulIf","src":"4825:52:21"},{"nodeType":"YulAssignment","src":"4886:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4915:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4896:18:21"},"nodeType":"YulFunctionCall","src":"4896:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4886:6:21"}]},{"nodeType":"YulAssignment","src":"4934:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4967:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4978:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4963:3:21"},"nodeType":"YulFunctionCall","src":"4963:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4944:18:21"},"nodeType":"YulFunctionCall","src":"4944:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4934:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4773:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4784:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4796:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4804:6:21","type":""}],"src":"4728:260:21"},{"body":{"nodeType":"YulBlock","src":"5048:325:21","statements":[{"nodeType":"YulAssignment","src":"5058:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5072:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5075:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5068:3:21"},"nodeType":"YulFunctionCall","src":"5068:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5058:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5089:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5119:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5125:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5115:3:21"},"nodeType":"YulFunctionCall","src":"5115:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5093:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5166:31:21","statements":[{"nodeType":"YulAssignment","src":"5168:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5182:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5190:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5178:3:21"},"nodeType":"YulFunctionCall","src":"5178:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5168:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5146:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5139:6:21"},"nodeType":"YulFunctionCall","src":"5139:26:21"},"nodeType":"YulIf","src":"5136:61:21"},{"body":{"nodeType":"YulBlock","src":"5256:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5277:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5284:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5289:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5280:3:21"},"nodeType":"YulFunctionCall","src":"5280:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:21"},"nodeType":"YulFunctionCall","src":"5270:31:21"},"nodeType":"YulExpressionStatement","src":"5270:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5321:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5324:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5314:6:21"},"nodeType":"YulFunctionCall","src":"5314:15:21"},"nodeType":"YulExpressionStatement","src":"5314:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5349:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5352:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5342:6:21"},"nodeType":"YulFunctionCall","src":"5342:15:21"},"nodeType":"YulExpressionStatement","src":"5342:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5212:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5235:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5243:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5232:2:21"},"nodeType":"YulFunctionCall","src":"5232:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5209:2:21"},"nodeType":"YulFunctionCall","src":"5209:38:21"},"nodeType":"YulIf","src":"5206:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5028:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5037:6:21","type":""}],"src":"4993:380:21"},{"body":{"nodeType":"YulBlock","src":"5426:174:21","statements":[{"nodeType":"YulAssignment","src":"5436:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5447:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"5450:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5443:3:21"},"nodeType":"YulFunctionCall","src":"5443:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5436:3:21"}]},{"body":{"nodeType":"YulBlock","src":"5483:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5504:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5511:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5516:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5507:3:21"},"nodeType":"YulFunctionCall","src":"5507:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5497:6:21"},"nodeType":"YulFunctionCall","src":"5497:31:21"},"nodeType":"YulExpressionStatement","src":"5497:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5548:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5551:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5541:6:21"},"nodeType":"YulFunctionCall","src":"5541:15:21"},"nodeType":"YulExpressionStatement","src":"5541:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5576:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5579:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5569:6:21"},"nodeType":"YulFunctionCall","src":"5569:15:21"},"nodeType":"YulExpressionStatement","src":"5569:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5467:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"5470:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5464:2:21"},"nodeType":"YulFunctionCall","src":"5464:10:21"},"nodeType":"YulIf","src":"5461:133:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5409:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"5412:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5418:3:21","type":""}],"src":"5378:222:21"},{"body":{"nodeType":"YulBlock","src":"5637:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5654:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5661:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5666:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5657:3:21"},"nodeType":"YulFunctionCall","src":"5657:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5647:6:21"},"nodeType":"YulFunctionCall","src":"5647:31:21"},"nodeType":"YulExpressionStatement","src":"5647:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5694:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5697:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5687:6:21"},"nodeType":"YulFunctionCall","src":"5687:15:21"},"nodeType":"YulExpressionStatement","src":"5687:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5718:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5721:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5711:6:21"},"nodeType":"YulFunctionCall","src":"5711:15:21"},"nodeType":"YulExpressionStatement","src":"5711:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5605:127:21"},{"body":{"nodeType":"YulBlock","src":"5911:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5928:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5939:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5921:6:21"},"nodeType":"YulFunctionCall","src":"5921:21:21"},"nodeType":"YulExpressionStatement","src":"5921:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5962:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5973:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5958:3:21"},"nodeType":"YulFunctionCall","src":"5958:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5978:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5951:6:21"},"nodeType":"YulFunctionCall","src":"5951:30:21"},"nodeType":"YulExpressionStatement","src":"5951:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6001:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6012:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5997:3:21"},"nodeType":"YulFunctionCall","src":"5997:18:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6017:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5990:6:21"},"nodeType":"YulFunctionCall","src":"5990:62:21"},"nodeType":"YulExpressionStatement","src":"5990:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6072:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6083:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6068:3:21"},"nodeType":"YulFunctionCall","src":"6068:18:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6088:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6061:6:21"},"nodeType":"YulFunctionCall","src":"6061:35:21"},"nodeType":"YulExpressionStatement","src":"6061:35:21"},{"nodeType":"YulAssignment","src":"6105:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6117:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6128:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6113:3:21"},"nodeType":"YulFunctionCall","src":"6113:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6105:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5888:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5902:4:21","type":""}],"src":"5737:401:21"},{"body":{"nodeType":"YulBlock","src":"6317:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6334:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6345:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6327:6:21"},"nodeType":"YulFunctionCall","src":"6327:21:21"},"nodeType":"YulExpressionStatement","src":"6327:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6368:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6379:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6364:3:21"},"nodeType":"YulFunctionCall","src":"6364:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6384:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6357:6:21"},"nodeType":"YulFunctionCall","src":"6357:30:21"},"nodeType":"YulExpressionStatement","src":"6357:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6418:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6403:3:21"},"nodeType":"YulFunctionCall","src":"6403:18:21"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"6423:31:21","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6396:6:21"},"nodeType":"YulFunctionCall","src":"6396:59:21"},"nodeType":"YulExpressionStatement","src":"6396:59:21"},{"nodeType":"YulAssignment","src":"6464:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6476:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6487:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6472:3:21"},"nodeType":"YulFunctionCall","src":"6472:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6464:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6294:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6308:4:21","type":""}],"src":"6143:353:21"},{"body":{"nodeType":"YulBlock","src":"6742:350:21","statements":[{"nodeType":"YulAssignment","src":"6752:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6764:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6775:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6760:3:21"},"nodeType":"YulFunctionCall","src":"6760:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6752:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6795:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"6806:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6788:6:21"},"nodeType":"YulFunctionCall","src":"6788:25:21"},"nodeType":"YulExpressionStatement","src":"6788:25:21"},{"nodeType":"YulVariableDeclaration","src":"6822:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6840:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6845:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6836:3:21"},"nodeType":"YulFunctionCall","src":"6836:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"6849:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6832:3:21"},"nodeType":"YulFunctionCall","src":"6832:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6826:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6871:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6882:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6867:3:21"},"nodeType":"YulFunctionCall","src":"6867:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6891:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6899:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6887:3:21"},"nodeType":"YulFunctionCall","src":"6887:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6860:6:21"},"nodeType":"YulFunctionCall","src":"6860:43:21"},"nodeType":"YulExpressionStatement","src":"6860:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6923:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6934:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6919:3:21"},"nodeType":"YulFunctionCall","src":"6919:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6943:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6951:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6939:3:21"},"nodeType":"YulFunctionCall","src":"6939:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6912:6:21"},"nodeType":"YulFunctionCall","src":"6912:43:21"},"nodeType":"YulExpressionStatement","src":"6912:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6975:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6986:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6971:3:21"},"nodeType":"YulFunctionCall","src":"6971:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"6991:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6964:6:21"},"nodeType":"YulFunctionCall","src":"6964:34:21"},"nodeType":"YulExpressionStatement","src":"6964:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7018:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7029:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7014:3:21"},"nodeType":"YulFunctionCall","src":"7014:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"7035:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7007:6:21"},"nodeType":"YulFunctionCall","src":"7007:35:21"},"nodeType":"YulExpressionStatement","src":"7007:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7062:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7073:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7058:3:21"},"nodeType":"YulFunctionCall","src":"7058:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"7079:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7051:6:21"},"nodeType":"YulFunctionCall","src":"7051:35:21"},"nodeType":"YulExpressionStatement","src":"7051:35:21"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6671:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6682:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6690:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6698:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6706:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6714:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6722:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6733:4:21","type":""}],"src":"6501:591:21"},{"body":{"nodeType":"YulBlock","src":"7271:180:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7288:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7299:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7281:6:21"},"nodeType":"YulFunctionCall","src":"7281:21:21"},"nodeType":"YulExpressionStatement","src":"7281:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7322:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7333:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7318:3:21"},"nodeType":"YulFunctionCall","src":"7318:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7338:2:21","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7311:6:21"},"nodeType":"YulFunctionCall","src":"7311:30:21"},"nodeType":"YulExpressionStatement","src":"7311:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7361:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7372:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7357:3:21"},"nodeType":"YulFunctionCall","src":"7357:18:21"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"7377:32:21","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7350:6:21"},"nodeType":"YulFunctionCall","src":"7350:60:21"},"nodeType":"YulExpressionStatement","src":"7350:60:21"},{"nodeType":"YulAssignment","src":"7419:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7431:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7442:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7427:3:21"},"nodeType":"YulFunctionCall","src":"7427:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7419:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7248:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7262:4:21","type":""}],"src":"7097:354:21"},{"body":{"nodeType":"YulBlock","src":"7630:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7647:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7658:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7640:6:21"},"nodeType":"YulFunctionCall","src":"7640:21:21"},"nodeType":"YulExpressionStatement","src":"7640:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7681:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7692:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7677:3:21"},"nodeType":"YulFunctionCall","src":"7677:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7697:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:21"},"nodeType":"YulFunctionCall","src":"7670:30:21"},"nodeType":"YulExpressionStatement","src":"7670:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7720:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7731:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7716:3:21"},"nodeType":"YulFunctionCall","src":"7716:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7736:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7709:6:21"},"nodeType":"YulFunctionCall","src":"7709:62:21"},"nodeType":"YulExpressionStatement","src":"7709:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7791:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7802:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7787:3:21"},"nodeType":"YulFunctionCall","src":"7787:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"7807:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7780:6:21"},"nodeType":"YulFunctionCall","src":"7780:36:21"},"nodeType":"YulExpressionStatement","src":"7780:36:21"},{"nodeType":"YulAssignment","src":"7825:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7837:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7848:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7833:3:21"},"nodeType":"YulFunctionCall","src":"7833:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7825:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7607:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7621:4:21","type":""}],"src":"7456:402:21"},{"body":{"nodeType":"YulBlock","src":"8037:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8054:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8065:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8047:6:21"},"nodeType":"YulFunctionCall","src":"8047:21:21"},"nodeType":"YulExpressionStatement","src":"8047:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8088:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8099:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8084:3:21"},"nodeType":"YulFunctionCall","src":"8084:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8104:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8077:6:21"},"nodeType":"YulFunctionCall","src":"8077:30:21"},"nodeType":"YulExpressionStatement","src":"8077:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8127:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8138:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8123:3:21"},"nodeType":"YulFunctionCall","src":"8123:18:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"8143:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8116:6:21"},"nodeType":"YulFunctionCall","src":"8116:62:21"},"nodeType":"YulExpressionStatement","src":"8116:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8198:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8209:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8194:3:21"},"nodeType":"YulFunctionCall","src":"8194:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8214:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8187:6:21"},"nodeType":"YulFunctionCall","src":"8187:34:21"},"nodeType":"YulExpressionStatement","src":"8187:34:21"},{"nodeType":"YulAssignment","src":"8230:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8242:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8253:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8238:3:21"},"nodeType":"YulFunctionCall","src":"8238:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8230:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8014:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8028:4:21","type":""}],"src":"7863:400:21"},{"body":{"nodeType":"YulBlock","src":"8442:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8459:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8470:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8452:6:21"},"nodeType":"YulFunctionCall","src":"8452:21:21"},"nodeType":"YulExpressionStatement","src":"8452:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8493:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8504:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8489:3:21"},"nodeType":"YulFunctionCall","src":"8489:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8509:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8482:6:21"},"nodeType":"YulFunctionCall","src":"8482:30:21"},"nodeType":"YulExpressionStatement","src":"8482:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8532:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8543:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8528:3:21"},"nodeType":"YulFunctionCall","src":"8528:18:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8548:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8521:6:21"},"nodeType":"YulFunctionCall","src":"8521:62:21"},"nodeType":"YulExpressionStatement","src":"8521:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8603:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8614:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8599:3:21"},"nodeType":"YulFunctionCall","src":"8599:18:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8619:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8592:6:21"},"nodeType":"YulFunctionCall","src":"8592:32:21"},"nodeType":"YulExpressionStatement","src":"8592:32:21"},{"nodeType":"YulAssignment","src":"8633:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8645:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8656:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8641:3:21"},"nodeType":"YulFunctionCall","src":"8641:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8633:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8419:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8433:4:21","type":""}],"src":"8268:398:21"},{"body":{"nodeType":"YulBlock","src":"8845:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8862:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8873:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8855:6:21"},"nodeType":"YulFunctionCall","src":"8855:21:21"},"nodeType":"YulExpressionStatement","src":"8855:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8896:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8907:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8892:3:21"},"nodeType":"YulFunctionCall","src":"8892:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8912:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8885:6:21"},"nodeType":"YulFunctionCall","src":"8885:30:21"},"nodeType":"YulExpressionStatement","src":"8885:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8935:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8946:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8931:3:21"},"nodeType":"YulFunctionCall","src":"8931:18:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"8951:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8924:6:21"},"nodeType":"YulFunctionCall","src":"8924:59:21"},"nodeType":"YulExpressionStatement","src":"8924:59:21"},{"nodeType":"YulAssignment","src":"8992:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9004:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9015:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9000:3:21"},"nodeType":"YulFunctionCall","src":"9000:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8992:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8822:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8836:4:21","type":""}],"src":"8671:353:21"},{"body":{"nodeType":"YulBlock","src":"9203:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9220:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9231:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9213:6:21"},"nodeType":"YulFunctionCall","src":"9213:21:21"},"nodeType":"YulExpressionStatement","src":"9213:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9254:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9265:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9250:3:21"},"nodeType":"YulFunctionCall","src":"9250:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9270:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9243:6:21"},"nodeType":"YulFunctionCall","src":"9243:30:21"},"nodeType":"YulExpressionStatement","src":"9243:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9293:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9304:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9289:3:21"},"nodeType":"YulFunctionCall","src":"9289:18:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"9309:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9282:6:21"},"nodeType":"YulFunctionCall","src":"9282:62:21"},"nodeType":"YulExpressionStatement","src":"9282:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9364:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9375:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9360:3:21"},"nodeType":"YulFunctionCall","src":"9360:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"9380:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9353:6:21"},"nodeType":"YulFunctionCall","src":"9353:35:21"},"nodeType":"YulExpressionStatement","src":"9353:35:21"},{"nodeType":"YulAssignment","src":"9397:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9409:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9420:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9405:3:21"},"nodeType":"YulFunctionCall","src":"9405:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9397:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9180:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9194:4:21","type":""}],"src":"9029:401:21"},{"body":{"nodeType":"YulBlock","src":"9609:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9626:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9637:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9619:6:21"},"nodeType":"YulFunctionCall","src":"9619:21:21"},"nodeType":"YulExpressionStatement","src":"9619:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9660:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9671:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9656:3:21"},"nodeType":"YulFunctionCall","src":"9656:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9676:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9649:6:21"},"nodeType":"YulFunctionCall","src":"9649:30:21"},"nodeType":"YulExpressionStatement","src":"9649:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9699:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9710:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9695:3:21"},"nodeType":"YulFunctionCall","src":"9695:18:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"9715:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9688:6:21"},"nodeType":"YulFunctionCall","src":"9688:62:21"},"nodeType":"YulExpressionStatement","src":"9688:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9770:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9781:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9766:3:21"},"nodeType":"YulFunctionCall","src":"9766:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"9786:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9759:6:21"},"nodeType":"YulFunctionCall","src":"9759:33:21"},"nodeType":"YulExpressionStatement","src":"9759:33:21"},{"nodeType":"YulAssignment","src":"9801:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9813:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9824:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9809:3:21"},"nodeType":"YulFunctionCall","src":"9809:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9801:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9586:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9600:4:21","type":""}],"src":"9435:399:21"},{"body":{"nodeType":"YulBlock","src":"10013:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10030:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10041:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10023:6:21"},"nodeType":"YulFunctionCall","src":"10023:21:21"},"nodeType":"YulExpressionStatement","src":"10023:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10064:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10075:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10060:3:21"},"nodeType":"YulFunctionCall","src":"10060:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10080:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10053:6:21"},"nodeType":"YulFunctionCall","src":"10053:30:21"},"nodeType":"YulExpressionStatement","src":"10053:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10103:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10114:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10099:3:21"},"nodeType":"YulFunctionCall","src":"10099:18:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"10119:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10092:6:21"},"nodeType":"YulFunctionCall","src":"10092:62:21"},"nodeType":"YulExpressionStatement","src":"10092:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10174:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10185:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10170:3:21"},"nodeType":"YulFunctionCall","src":"10170:18:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"10190:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10163:6:21"},"nodeType":"YulFunctionCall","src":"10163:36:21"},"nodeType":"YulExpressionStatement","src":"10163:36:21"},{"nodeType":"YulAssignment","src":"10208:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10220:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10231:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10216:3:21"},"nodeType":"YulFunctionCall","src":"10216:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10208:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9990:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10004:4:21","type":""}],"src":"9839:402:21"},{"body":{"nodeType":"YulBlock","src":"10420:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10437:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10448:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10430:6:21"},"nodeType":"YulFunctionCall","src":"10430:21:21"},"nodeType":"YulExpressionStatement","src":"10430:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10471:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10482:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10467:3:21"},"nodeType":"YulFunctionCall","src":"10467:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10487:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10460:6:21"},"nodeType":"YulFunctionCall","src":"10460:30:21"},"nodeType":"YulExpressionStatement","src":"10460:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10510:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10521:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10506:3:21"},"nodeType":"YulFunctionCall","src":"10506:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10526:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10499:6:21"},"nodeType":"YulFunctionCall","src":"10499:62:21"},"nodeType":"YulExpressionStatement","src":"10499:62:21"},{"nodeType":"YulAssignment","src":"10570:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10582:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10593:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10578:3:21"},"nodeType":"YulFunctionCall","src":"10578:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10570:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10397:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10411:4:21","type":""}],"src":"10246:356:21"},{"body":{"nodeType":"YulBlock","src":"10781:223:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10798:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10809:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10791:6:21"},"nodeType":"YulFunctionCall","src":"10791:21:21"},"nodeType":"YulExpressionStatement","src":"10791:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10832:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10843:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10828:3:21"},"nodeType":"YulFunctionCall","src":"10828:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10848:2:21","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10821:6:21"},"nodeType":"YulFunctionCall","src":"10821:30:21"},"nodeType":"YulExpressionStatement","src":"10821:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10871:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10882:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10867:3:21"},"nodeType":"YulFunctionCall","src":"10867:18:21"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"10887:34:21","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10860:6:21"},"nodeType":"YulFunctionCall","src":"10860:62:21"},"nodeType":"YulExpressionStatement","src":"10860:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10942:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10953:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10938:3:21"},"nodeType":"YulFunctionCall","src":"10938:18:21"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"10958:3:21","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10931:6:21"},"nodeType":"YulFunctionCall","src":"10931:31:21"},"nodeType":"YulExpressionStatement","src":"10931:31:21"},{"nodeType":"YulAssignment","src":"10971:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10983:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10994:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10979:3:21"},"nodeType":"YulFunctionCall","src":"10979:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10971:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10758:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10772:4:21","type":""}],"src":"10607:397:21"},{"body":{"nodeType":"YulBlock","src":"11183:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11200:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11211:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11193:6:21"},"nodeType":"YulFunctionCall","src":"11193:21:21"},"nodeType":"YulExpressionStatement","src":"11193:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11234:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11245:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11230:3:21"},"nodeType":"YulFunctionCall","src":"11230:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"11250:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11223:6:21"},"nodeType":"YulFunctionCall","src":"11223:30:21"},"nodeType":"YulExpressionStatement","src":"11223:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11273:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11284:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11269:3:21"},"nodeType":"YulFunctionCall","src":"11269:18:21"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"11289:34:21","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11262:6:21"},"nodeType":"YulFunctionCall","src":"11262:62:21"},"nodeType":"YulExpressionStatement","src":"11262:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11355:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11340:3:21"},"nodeType":"YulFunctionCall","src":"11340:18:21"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"11360:4:21","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11333:6:21"},"nodeType":"YulFunctionCall","src":"11333:32:21"},"nodeType":"YulExpressionStatement","src":"11333:32:21"},{"nodeType":"YulAssignment","src":"11374:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11386:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11397:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11382:3:21"},"nodeType":"YulFunctionCall","src":"11382:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11374:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11160:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11174:4:21","type":""}],"src":"11009:398:21"},{"body":{"nodeType":"YulBlock","src":"11625:276:21","statements":[{"nodeType":"YulAssignment","src":"11635:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11647:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11658:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11643:3:21"},"nodeType":"YulFunctionCall","src":"11643:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11635:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11678:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"11689:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11671:6:21"},"nodeType":"YulFunctionCall","src":"11671:25:21"},"nodeType":"YulExpressionStatement","src":"11671:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11716:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11727:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11712:3:21"},"nodeType":"YulFunctionCall","src":"11712:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"11732:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11705:6:21"},"nodeType":"YulFunctionCall","src":"11705:34:21"},"nodeType":"YulExpressionStatement","src":"11705:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11759:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11770:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11755:3:21"},"nodeType":"YulFunctionCall","src":"11755:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"11775:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11748:6:21"},"nodeType":"YulFunctionCall","src":"11748:34:21"},"nodeType":"YulExpressionStatement","src":"11748:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11802:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11813:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11798:3:21"},"nodeType":"YulFunctionCall","src":"11798:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"11818:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11791:6:21"},"nodeType":"YulFunctionCall","src":"11791:34:21"},"nodeType":"YulExpressionStatement","src":"11791:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11845:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11856:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:21"},"nodeType":"YulFunctionCall","src":"11841:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11866:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11882:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11887:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11878:3:21"},"nodeType":"YulFunctionCall","src":"11878:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"11891:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11874:3:21"},"nodeType":"YulFunctionCall","src":"11874:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11862:3:21"},"nodeType":"YulFunctionCall","src":"11862:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:21"},"nodeType":"YulFunctionCall","src":"11834:61:21"},"nodeType":"YulExpressionStatement","src":"11834:61:21"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11562:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11573:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11581:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11589:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11597:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11605:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11616:4:21","type":""}],"src":"11412:489:21"},{"body":{"nodeType":"YulBlock","src":"12080:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12097:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12108:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12090:6:21"},"nodeType":"YulFunctionCall","src":"12090:21:21"},"nodeType":"YulExpressionStatement","src":"12090:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12131:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12142:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12127:3:21"},"nodeType":"YulFunctionCall","src":"12127:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12147:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12120:6:21"},"nodeType":"YulFunctionCall","src":"12120:30:21"},"nodeType":"YulExpressionStatement","src":"12120:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12170:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12181:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12166:3:21"},"nodeType":"YulFunctionCall","src":"12166:18:21"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"12186:22:21","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12159:6:21"},"nodeType":"YulFunctionCall","src":"12159:50:21"},"nodeType":"YulExpressionStatement","src":"12159:50:21"},{"nodeType":"YulAssignment","src":"12218:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12230:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12241:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12226:3:21"},"nodeType":"YulFunctionCall","src":"12226:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12218:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12057:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12071:4:21","type":""}],"src":"11906:344:21"},{"body":{"nodeType":"YulBlock","src":"12429:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12457:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12439:6:21"},"nodeType":"YulFunctionCall","src":"12439:21:21"},"nodeType":"YulExpressionStatement","src":"12439:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12480:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12491:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12476:3:21"},"nodeType":"YulFunctionCall","src":"12476:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12496:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12469:6:21"},"nodeType":"YulFunctionCall","src":"12469:30:21"},"nodeType":"YulExpressionStatement","src":"12469:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12519:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12515:3:21"},"nodeType":"YulFunctionCall","src":"12515:18:21"},{"hexValue":"45524332304361707065643a20636170206578636565646564","kind":"string","nodeType":"YulLiteral","src":"12535:27:21","type":"","value":"ERC20Capped: cap exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12508:6:21"},"nodeType":"YulFunctionCall","src":"12508:55:21"},"nodeType":"YulExpressionStatement","src":"12508:55:21"},{"nodeType":"YulAssignment","src":"12572:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12584:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12595:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12580:3:21"},"nodeType":"YulFunctionCall","src":"12580:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12572:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12406:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12420:4:21","type":""}],"src":"12255:349:21"},{"body":{"nodeType":"YulBlock","src":"12783:166:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12811:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12793:6:21"},"nodeType":"YulFunctionCall","src":"12793:21:21"},"nodeType":"YulExpressionStatement","src":"12793:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12834:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12845:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12830:3:21"},"nodeType":"YulFunctionCall","src":"12830:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12850:2:21","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12823:6:21"},"nodeType":"YulFunctionCall","src":"12823:30:21"},"nodeType":"YulExpressionStatement","src":"12823:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12873:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12884:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12869:3:21"},"nodeType":"YulFunctionCall","src":"12869:18:21"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"12889:18:21","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12862:6:21"},"nodeType":"YulFunctionCall","src":"12862:46:21"},"nodeType":"YulExpressionStatement","src":"12862:46:21"},{"nodeType":"YulAssignment","src":"12917:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12929:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12940:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12925:3:21"},"nodeType":"YulFunctionCall","src":"12925:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12917:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12760:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12774:4:21","type":""}],"src":"12609:340:21"},{"body":{"nodeType":"YulBlock","src":"13135:217:21","statements":[{"nodeType":"YulAssignment","src":"13145:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13157:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13168:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13153:3:21"},"nodeType":"YulFunctionCall","src":"13153:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13145:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13188:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"13199:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13181:6:21"},"nodeType":"YulFunctionCall","src":"13181:25:21"},"nodeType":"YulExpressionStatement","src":"13181:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13226:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13237:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13222:3:21"},"nodeType":"YulFunctionCall","src":"13222:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13246:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13254:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13242:3:21"},"nodeType":"YulFunctionCall","src":"13242:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13215:6:21"},"nodeType":"YulFunctionCall","src":"13215:45:21"},"nodeType":"YulExpressionStatement","src":"13215:45:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13280:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13291:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13276:3:21"},"nodeType":"YulFunctionCall","src":"13276:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"13296:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13269:6:21"},"nodeType":"YulFunctionCall","src":"13269:34:21"},"nodeType":"YulExpressionStatement","src":"13269:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13323:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13334:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13319:3:21"},"nodeType":"YulFunctionCall","src":"13319:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"13339:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13312:6:21"},"nodeType":"YulFunctionCall","src":"13312:34:21"},"nodeType":"YulExpressionStatement","src":"13312:34:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13080:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13091:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13099:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13107:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13115:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13126:4:21","type":""}],"src":"12954:398:21"},{"body":{"nodeType":"YulBlock","src":"13389:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13406:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13413:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13418:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13409:3:21"},"nodeType":"YulFunctionCall","src":"13409:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13399:6:21"},"nodeType":"YulFunctionCall","src":"13399:31:21"},"nodeType":"YulExpressionStatement","src":"13399:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13446:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13449:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13439:6:21"},"nodeType":"YulFunctionCall","src":"13439:15:21"},"nodeType":"YulExpressionStatement","src":"13439:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13470:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13473:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13463:6:21"},"nodeType":"YulFunctionCall","src":"13463:15:21"},"nodeType":"YulExpressionStatement","src":"13463:15:21"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"13357:127:21"},{"body":{"nodeType":"YulBlock","src":"13663:174:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13680:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13691:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13673:6:21"},"nodeType":"YulFunctionCall","src":"13673:21:21"},"nodeType":"YulExpressionStatement","src":"13673:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13714:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13725:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13710:3:21"},"nodeType":"YulFunctionCall","src":"13710:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"13730:2:21","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13703:6:21"},"nodeType":"YulFunctionCall","src":"13703:30:21"},"nodeType":"YulExpressionStatement","src":"13703:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13753:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13764:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13749:3:21"},"nodeType":"YulFunctionCall","src":"13749:18:21"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"13769:26:21","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13742:6:21"},"nodeType":"YulFunctionCall","src":"13742:54:21"},"nodeType":"YulExpressionStatement","src":"13742:54:21"},{"nodeType":"YulAssignment","src":"13805:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13817:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13828:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13813:3:21"},"nodeType":"YulFunctionCall","src":"13813:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13805:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13640:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13654:4:21","type":""}],"src":"13489:348:21"},{"body":{"nodeType":"YulBlock","src":"14016:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14033:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14044:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14026:6:21"},"nodeType":"YulFunctionCall","src":"14026:21:21"},"nodeType":"YulExpressionStatement","src":"14026:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14067:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14078:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14063:3:21"},"nodeType":"YulFunctionCall","src":"14063:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"14083:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14056:6:21"},"nodeType":"YulFunctionCall","src":"14056:30:21"},"nodeType":"YulExpressionStatement","src":"14056:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14106:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14117:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14102:3:21"},"nodeType":"YulFunctionCall","src":"14102:18:21"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"14122:33:21","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14095:6:21"},"nodeType":"YulFunctionCall","src":"14095:61:21"},"nodeType":"YulExpressionStatement","src":"14095:61:21"},{"nodeType":"YulAssignment","src":"14165:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14177:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14188:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14173:3:21"},"nodeType":"YulFunctionCall","src":"14173:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14165:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13993:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14007:4:21","type":""}],"src":"13842:355:21"},{"body":{"nodeType":"YulBlock","src":"14376:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14393:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14404:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14386:6:21"},"nodeType":"YulFunctionCall","src":"14386:21:21"},"nodeType":"YulExpressionStatement","src":"14386:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14427:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14438:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14423:3:21"},"nodeType":"YulFunctionCall","src":"14423:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"14443:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14416:6:21"},"nodeType":"YulFunctionCall","src":"14416:30:21"},"nodeType":"YulExpressionStatement","src":"14416:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14466:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14477:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14462:3:21"},"nodeType":"YulFunctionCall","src":"14462:18:21"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"14482:34:21","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14455:6:21"},"nodeType":"YulFunctionCall","src":"14455:62:21"},"nodeType":"YulExpressionStatement","src":"14455:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14537:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14548:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14533:3:21"},"nodeType":"YulFunctionCall","src":"14533:18:21"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"14553:4:21","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14526:6:21"},"nodeType":"YulFunctionCall","src":"14526:32:21"},"nodeType":"YulExpressionStatement","src":"14526:32:21"},{"nodeType":"YulAssignment","src":"14567:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14579:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14590:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14575:3:21"},"nodeType":"YulFunctionCall","src":"14575:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14567:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14353:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14367:4:21","type":""}],"src":"14202:398:21"},{"body":{"nodeType":"YulBlock","src":"14779:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14796:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14807:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14789:6:21"},"nodeType":"YulFunctionCall","src":"14789:21:21"},"nodeType":"YulExpressionStatement","src":"14789:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14841:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14826:3:21"},"nodeType":"YulFunctionCall","src":"14826:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"14846:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14819:6:21"},"nodeType":"YulFunctionCall","src":"14819:30:21"},"nodeType":"YulExpressionStatement","src":"14819:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14869:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14880:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14865:3:21"},"nodeType":"YulFunctionCall","src":"14865:18:21"},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768","kind":"string","nodeType":"YulLiteral","src":"14885:34:21","type":"","value":"ERC20Pausable: token transfer wh"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14858:6:21"},"nodeType":"YulFunctionCall","src":"14858:62:21"},"nodeType":"YulExpressionStatement","src":"14858:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14940:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14951:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14936:3:21"},"nodeType":"YulFunctionCall","src":"14936:18:21"},{"hexValue":"696c6520706175736564","kind":"string","nodeType":"YulLiteral","src":"14956:12:21","type":"","value":"ile paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14929:6:21"},"nodeType":"YulFunctionCall","src":"14929:40:21"},"nodeType":"YulExpressionStatement","src":"14929:40:21"},{"nodeType":"YulAssignment","src":"14978:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14990:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15001:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14986:3:21"},"nodeType":"YulFunctionCall","src":"14986:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14978:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14756:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14770:4:21","type":""}],"src":"14605:406:21"},{"body":{"nodeType":"YulBlock","src":"15190:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15207:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15218:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15200:6:21"},"nodeType":"YulFunctionCall","src":"15200:21:21"},"nodeType":"YulExpressionStatement","src":"15200:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15241:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15252:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15237:3:21"},"nodeType":"YulFunctionCall","src":"15237:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"15257:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15230:6:21"},"nodeType":"YulFunctionCall","src":"15230:30:21"},"nodeType":"YulExpressionStatement","src":"15230:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15280:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15291:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15276:3:21"},"nodeType":"YulFunctionCall","src":"15276:18:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"15296:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15269:6:21"},"nodeType":"YulFunctionCall","src":"15269:61:21"},"nodeType":"YulExpressionStatement","src":"15269:61:21"},{"nodeType":"YulAssignment","src":"15339:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15351:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15362:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15347:3:21"},"nodeType":"YulFunctionCall","src":"15347:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15339:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15167:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15181:4:21","type":""}],"src":"15016:355:21"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Permit: expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC20Permit: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Pausable: token transfer wh\")\n        mstore(add(headStart, 96), \"ile paused\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"962":[{"length":32,"start":495},{"length":32,"start":4270}],"2331":[{"length":32,"start":3032}],"2333":[{"length":32,"start":2990}],"2335":[{"length":32,"start":2948}],"2337":[{"length":32,"start":3113}],"2339":[{"length":32,"start":3153}],"2342":[{"length":32,"start":1292}],"2345":[{"length":32,"start":1335}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de5780638da5cb5b11610097578063a9059cbb11610071578063a9059cbb14610327578063d505accf1461033a578063dd62ed3e1461034d578063f2fde38b1461036057600080fd5b80638da5cb5b146102e357806395d89b411461030c578063a457c2d71461031457600080fd5b806370a0823114610269578063715018a61461029257806379cc67901461029a5780637ecebe00146102ad5780638456cb59146102c057806384b0196e146102c857600080fd5b80633644e515116101305780633644e51514610213578063395093511461021b5780633f4ba83a1461022e57806340c10f191461023857806342966c681461024b5780635c975abb1461025e57600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de578063355274ea146101ed575b600080fd5b610180610373565b60405161018d919061156b565b60405180910390f35b6101a96101a43660046115a1565b610405565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d93660046115cb565b61041f565b6040516012815260200161018d565b7f00000000000000000000000000000000000000000000000000000000000000006101bd565b6101bd610443565b6101a96102293660046115a1565b610452565b610236610474565b005b6102366102463660046115a1565b610486565b610236610259366004611607565b61049c565b60055460ff166101a9565b6101bd610277366004611620565b6001600160a01b031660009081526020819052604090205490565b6102366104a9565b6102366102a83660046115a1565b6104bb565b6101bd6102bb366004611620565b6104d0565b6102366104ee565b6102d06104fe565b60405161018d979695949392919061163b565b60055461010090046001600160a01b03166040516001600160a01b03909116815260200161018d565b610180610587565b6101a96103223660046115a1565b610596565b6101a96103353660046115a1565b610616565b6102366103483660046116d1565b610624565b6101bd61035b366004611744565b610788565b61023661036e366004611620565b6107b3565b60606003805461038290611777565b80601f01602080910402602001604051908101604052809291908181526020018280546103ae90611777565b80156103fb5780601f106103d0576101008083540402835291602001916103fb565b820191906000526020600020905b8154815290600101906020018083116103de57829003601f168201915b5050505050905090565b600033610413818585610829565b60019150505b92915050565b60003361042d85828561094e565b6104388585856109c8565b506001949350505050565b600061044d610b77565b905090565b6000336104138185856104658383610788565b61046f91906117ab565b610829565b61047c610ca2565b610484610d02565b565b61048e610ca2565b6104988282610d54565b5050565b6104a63382610d5e565b50565b6104b1610ca2565b6104846000610e99565b6104c682338361094e565b6104988282610d5e565b6001600160a01b038116600090815260086020526040812054610419565b6104f6610ca2565b610484610ef3565b6000606080828080836105327f00000000000000000000000000000000000000000000000000000000000000006006610f30565b61055d7f00000000000000000000000000000000000000000000000000000000000000006007610f30565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461038290611777565b600033816105a48286610788565b9050838110156106095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104388286868403610829565b6000336104138185856109c8565b834211156106745760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610600565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106a38c610fdb565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006106fe82611003565b9050600061070e82878787611030565b9050896001600160a01b0316816001600160a01b0316146107715760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610600565b61077c8a8a8a610829565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107bb610ca2565b6001600160a01b0381166108205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610600565b6104a681610e99565b6001600160a01b03831661088b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610600565b6001600160a01b0382166108ec5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610600565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061095a8484610788565b905060001981146109c257818110156109b55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610600565b6109c28484848403610829565b50505050565b6001600160a01b038316610a2c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610600565b6001600160a01b038216610a8e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610600565b610a99838383611058565b6001600160a01b03831660009081526020819052604090205481811015610b115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610600565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36109c2565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610bd057507f000000000000000000000000000000000000000000000000000000000000000046145b15610bfa57507f000000000000000000000000000000000000000000000000000000000000000090565b61044d604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146104845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610600565b610d0a611063565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61049882826110ac565b6001600160a01b038216610dbe5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610600565b610dca82600083611058565b6001600160a01b03821660009081526020819052604090205481811015610e3e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610600565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610941565b505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610efb611139565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d373390565b606060ff8314610f4a57610f438361117f565b9050610419565b818054610f5690611777565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8290611777565b8015610fcf5780601f10610fa457610100808354040283529160200191610fcf565b820191906000526020600020905b815481529060010190602001808311610fb257829003601f168201915b50505050509050610419565b6001600160a01b03811660009081526008602052604090208054600181018255905b50919050565b6000610419611010610b77565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611041878787876111be565b9150915061104e81611282565b5095945050505050565b610e948383836113cc565b60055460ff166104845760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610600565b7f0000000000000000000000000000000000000000000000000000000000000000816110d760025490565b6110e191906117ab565b111561112f5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401610600565b6104988282611432565b60055460ff16156104845760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610600565b6060600061118c836114fd565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156111f55750600090506003611279565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611249573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661127257600060019250925050611279565b9150600090505b94509492505050565b6000816004811115611296576112966117cc565b0361129e5750565b60018160048111156112b2576112b26117cc565b036112ff5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610600565b6002816004811115611313576113136117cc565b036113605760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610600565b6003816004811115611374576113746117cc565b036104a65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610600565b60055460ff1615610e945760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610600565b6001600160a01b0382166114885760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610600565b61149460008383611058565b80600260008282546114a691906117ab565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060ff8216601f81111561041957604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b8181101561154b5760208185018101518683018201520161152f565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061157e6020830184611525565b9392505050565b80356001600160a01b038116811461159c57600080fd5b919050565b600080604083850312156115b457600080fd5b6115bd83611585565b946020939093013593505050565b6000806000606084860312156115e057600080fd5b6115e984611585565b92506115f760208501611585565b9150604084013590509250925092565b60006020828403121561161957600080fd5b5035919050565b60006020828403121561163257600080fd5b61157e82611585565b60ff60f81b881681526000602060e08184015261165b60e084018a611525565b838103604085015261166d818a611525565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156116bf578351835292840192918401916001016116a3565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156116ec57600080fd5b6116f588611585565b965061170360208901611585565b95506040880135945060608801359350608088013560ff8116811461172757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561175757600080fd5b61176083611585565b915061176e60208401611585565b90509250929050565b600181811c9082168061178b57607f821691505b602082108103610ffd57634e487b7160e01b600052602260045260246000fd5b8082018082111561041957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220c20ee53d85a8de7fbaa07977b5ff726ddbafdf4f22a3e2f3a3880966b90df01564736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1ED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15CB JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x443 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18D JUMP JUMPDEST PUSH2 0x180 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH2 0x236 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x1777 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AE SWAP1 PUSH2 0x1777 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x413 DUP2 DUP6 DUP6 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x42D DUP6 DUP3 DUP6 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x438 DUP6 DUP6 DUP6 PUSH2 0x9C8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x413 DUP2 DUP6 DUP6 PUSH2 0x465 DUP4 DUP4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST PUSH2 0x47C PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x484 PUSH2 0xD02 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x48E PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0xD54 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4A6 CALLER DUP3 PUSH2 0xD5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B1 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x484 PUSH1 0x0 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x4C6 DUP3 CALLER DUP4 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x419 JUMP JUMPDEST PUSH2 0x4F6 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x484 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x532 PUSH32 0x0 PUSH1 0x6 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x55D PUSH32 0x0 PUSH1 0x7 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x382 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x5A4 DUP3 DUP7 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x438 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x829 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x413 DUP2 DUP6 DUP6 PUSH2 0x9C8 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6A3 DUP13 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x6FE DUP3 PUSH2 0x1003 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x70E DUP3 DUP8 DUP8 DUP8 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x77C DUP11 DUP11 DUP11 PUSH2 0x829 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7BB PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x4A6 DUP2 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95A DUP5 DUP5 PUSH2 0x788 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9C2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x9C2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x829 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xA99 DUP4 DUP4 DUP4 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xBD0 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xBFA JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x44D PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xD0A PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0xDCA DUP3 PUSH1 0x0 DUP4 PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x941 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEFB PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD37 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xF4A JUMPI PUSH2 0xF43 DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP1 POP PUSH2 0x419 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xF56 SWAP1 PUSH2 0x1777 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF82 SWAP1 PUSH2 0x1777 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFCF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFA4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFCF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFB2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x419 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x419 PUSH2 0x1010 PUSH2 0xB77 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1041 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11BE JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x104E DUP2 PUSH2 0x1282 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE94 DUP4 DUP4 DUP4 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x10D7 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST GT ISZERO PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x498 DUP3 DUP3 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x118C DUP4 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x11F5 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1272 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1296 JUMPI PUSH2 0x1296 PUSH2 0x17CC JUMP JUMPDEST SUB PUSH2 0x129E JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12B2 JUMPI PUSH2 0x12B2 PUSH2 0x17CC JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1313 PUSH2 0x17CC JUMP JUMPDEST SUB PUSH2 0x1360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1374 JUMPI PUSH2 0x1374 PUSH2 0x17CC JUMP JUMPDEST SUB PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x600 JUMP JUMPDEST PUSH2 0x1494 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1058 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14A6 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x154B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x152F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x157E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1525 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x159C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15BD DUP4 PUSH2 0x1585 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E9 DUP5 PUSH2 0x1585 JUMP JUMPDEST SWAP3 POP PUSH2 0x15F7 PUSH1 0x20 DUP6 ADD PUSH2 0x1585 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x157E DUP3 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x165B PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x1525 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x166D DUP2 DUP11 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16BF JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x16A3 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F5 DUP9 PUSH2 0x1585 JUMP JUMPDEST SWAP7 POP PUSH2 0x1703 PUSH1 0x20 DUP10 ADD PUSH2 0x1585 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1760 DUP4 PUSH2 0x1585 JUMP JUMPDEST SWAP2 POP PUSH2 0x176E PUSH1 0x20 DUP5 ADD PUSH2 0x1585 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x178B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x419 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xE 0xE5 RETURNDATASIZE DUP6 0xA8 0xDE PUSH32 0xBAA07977B5FF726DDBAFDF4F22A3E2F3A3880966B90DF01564736F6C63430008 SGT STOP CALLER ","sourceMap":"540:1017:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:21;;1262:22;1244:41;;1232:2;1217:18;4444:197:3;1104:187:21;3255:106:3;3342:12;;3255:106;;;1442:25:21;;;1430:2;1415:18;3255:106:3;1296:177:21;5203:256:3;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1953:36:21;;1941:2;1926:18;3104:91:3;1811:184:21;635:81:6;705:4;635:81;;2836:113:8;;;:::i;5854:234:3:-;;;;;;:::i;:::-;;:::i;1009:63:20:-;;;:::i;:::-;;1078:93;;;;;;:::i;:::-;;:::i;578:89:5:-;;;;;;:::i;:::-;;:::i;1615:84:2:-;1685:7;;;;1615:84;;3419:125:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:3;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:0;;;:::i;973:161:5:-;;;;;;:::i;:::-;;:::i;2603:126:8:-;;;;;;:::i;:::-;;:::i;944:59:20:-;;;:::i;5021:633:17:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1201:85:0:-;1273:6;;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;-1:-1:-1;;;;;3986:32:21;;;3968:51;;3956:2;3941:18;1201:85:0;3822:203:21;2369:102:3;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1923:626:8:-;;;;;;:::i;:::-;;:::i;3987:149:3:-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;2158:98:3:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:11;4581:32:3;734:10:11;4597:7:3;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;734:10:11;5356:38:3;5372:4;734:10:11;5387:6:3;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:3;;5203:256;-1:-1:-1;;;;5203:256:3:o;2836:113:8:-;2896:7;2922:20;:18;:20::i;:::-;2915:27;;2836:113;:::o;5854:234:3:-;5942:4;734:10:11;5996:64:3;734:10:11;6012:7:3;6049:10;6021:25;734:10:11;6012:7:3;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;1009:63:20:-;1094:13:0;:11;:13::i;:::-;1055:10:20::1;:8;:10::i;:::-;1009:63::o:0;1078:93::-;1094:13:0;:11;:13::i;:::-;1147:17:20::1;1153:2;1157:6;1147:5;:17::i;:::-;1078:93:::0;;:::o;578:89:5:-;633:27;734:10:11;653:6:5;633:5;:27::i;:::-;578:89;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;973:161:5:-:0;1049:46;1065:7;734:10:11;1088:6:5;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2603:126:8:-;-1:-1:-1;;;;;2698:14:8;;2672:7;2698:14;;;:7;:14;;;;;918::12;2698:24:8;827:112:12;944:59:20;1094:13:0;:11;:13::i;:::-;988:8:20::1;:6;:8::i;5021:633:17:-:0;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5454:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;-1:-1:-1;;;5376:271:17;;;-1:-1:-1;5376:271:17;;-1:-1:-1;5543:13:17;;-1:-1:-1;5578:4:17;;-1:-1:-1;5605:1:17;-1:-1:-1;5621:16:17;-1:-1:-1;5376:271:17;-1:-1:-1;5021:633:17:o;2369:102:3:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;734:10:11;6668:4:3;6749:25;734:10:11;6766:7:3;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:3;;5939:2:21;6784:85:3;;;5921:21:21;5978:2;5958:18;;;5951:30;6017:34;5997:18;;;5990:62;-1:-1:-1;;;6068:18:21;;;6061:35;6113:19;;6784:85:3;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;734:10:11;3873:28:3;734:10:11;3890:2:3;3894:6;3873:9;:28::i;1923:626:8:-;2158:8;2139:15;:27;;2131:69;;;;-1:-1:-1;;;2131:69:8;;6345:2:21;2131:69:8;;;6327:21:21;6384:2;6364:18;;;6357:30;6423:31;6403:18;;;6396:59;6472:18;;2131:69:8;6143:353:21;2131:69:8;2211:18;1125:95;2271:5;2278:7;2287:5;2294:16;2304:5;2294:9;:16::i;:::-;2242:79;;;;;;6788:25:21;;;;-1:-1:-1;;;;;6887:15:21;;;6867:18;;;6860:43;6939:15;;;;6919:18;;;6912:43;6971:18;;;6964:34;7014:19;;;7007:35;7058:19;;;7051:35;;;6760:19;;2242:79:8;;;;;;;;;;;;2232:90;;;;;;2211:111;;2333:12;2348:28;2365:10;2348:16;:28::i;:::-;2333:43;;2387:14;2404:28;2418:4;2424:1;2427;2430;2404:13;:28::i;:::-;2387:45;;2460:5;-1:-1:-1;;;;;2450:15:8;:6;-1:-1:-1;;;;;2450:15:8;;2442:58;;;;-1:-1:-1;;;2442:58:8;;7299:2:21;2442:58:8;;;7281:21:21;7338:2;7318:18;;;7311:30;7377:32;7357:18;;;7350:60;7427:18;;2442:58:8;7097:354:21;2442:58:8;2511:31;2520:5;2527:7;2536:5;2511:8;:31::i;:::-;2121:428;;;1923:626;;;;;;;:::o;3987:149:3:-;-1:-1:-1;;;;;4102:18:3;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;7658:2:21;2154:73:0::1;::::0;::::1;7640:21:21::0;7697:2;7677:18;;;7670:30;7736:34;7716:18;;;7709:62;-1:-1:-1;;;7787:18:21;;;7780:36;7833:19;;2154:73:0::1;7456:402:21::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;10457:340:3:-:0;-1:-1:-1;;;;;10558:19:3;;10550:68;;;;-1:-1:-1;;;10550:68:3;;8065:2:21;10550:68:3;;;8047:21:21;8104:2;8084:18;;;8077:30;8143:34;8123:18;;;8116:62;-1:-1:-1;;;8194:18:21;;;8187:34;8238:19;;10550:68:3;7863:400:21;10550:68:3;-1:-1:-1;;;;;10636:21:3;;10628:68;;;;-1:-1:-1;;;10628:68:3;;8470:2:21;10628:68:3;;;8452:21:21;8509:2;8489:18;;;8482:30;8548:34;8528:18;;;8521:62;-1:-1:-1;;;8599:18:21;;;8592:32;8641:19;;10628:68:3;8268:398:21;10628:68:3;-1:-1:-1;;;;;10707:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1442:25:21;;;10758:32:3;;1415:18:21;10758:32:3;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:3;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:3;;8873:2:21;11297:68:3;;;8855:21:21;8912:2;8892:18;;;8885:30;8951:31;8931:18;;;8924:59;9000:18;;11297:68:3;8671:353:21;11297:68:3;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:3;;7544:68;;;;-1:-1:-1;;;7544:68:3;;9231:2:21;7544:68:3;;;9213:21:21;9270:2;9250:18;;;9243:30;9309:34;9289:18;;;9282:62;-1:-1:-1;;;9360:18:21;;;9353:35;9405:19;;7544:68:3;9029:401:21;7544:68:3;-1:-1:-1;;;;;7630:16:3;;7622:64;;;;-1:-1:-1;;;7622:64:3;;9637:2:21;7622:64:3;;;9619:21:21;9676:2;9656:18;;;9649:30;9715:34;9695:18;;;9688:62;-1:-1:-1;;;9766:18:21;;;9759:33;9809:19;;7622:64:3;9435:399:21;7622:64:3;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:3;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:3;;10041:2:21;7793:72:3;;;10023:21:21;10080:2;10060:18;;;10053:30;10119:34;10099:18;;;10092:62;-1:-1:-1;;;10170:18:21;;;10163:36;10216:19;;7793:72:3;9839:402:21;7793:72:3;-1:-1:-1;;;;;7899:15:3;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1442:25:21;;;8114:13:3;;8163:26;;1415:18:21;8163:26:3;;;;;;;8200:37;9375:659;3695:262:17;3748:7;3779:4;-1:-1:-1;;;;;3788:11:17;3771:28;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;-1:-1:-1;3857:22:17;;3695:262::o;3767:184::-;3917:23;4054:81;;;1929:95;4054:81;;;11671:25:21;4077:11:17;11712:18:21;;;11705:34;;;;4090:14:17;11755:18:21;;;11748:34;4106:13:17;11798:18:21;;;11791:34;4129:4:17;11841:19:21;;;11834:61;4018:7:17;;11643:19:21;;4054:81:17;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;1359:130:0;1273:6;;-1:-1:-1;;;;;1273:6:0;;;;;734:10:11;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;10448:2:21;1414:68:0;;;10430:21:21;;;10467:18;;;10460:30;10526:34;10506:18;;;10499:62;10578:18;;1414:68:0;10246:356:21;2433:117:2;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:2::1;::::0;;2521:22:::1;734:10:11::0;2530:12:2::1;2521:22;::::0;-1:-1:-1;;;;;3986:32:21;;;3968:51;;3956:2;3941:18;2521:22:2::1;;;;;;;2433:117::o:0;1424:131:20:-;1520:28;1532:7;1541:6;1520:11;:28::i;9375:659:3:-;-1:-1:-1;;;;;9458:21:3;;9450:67;;;;-1:-1:-1;;;9450:67:3;;10809:2:21;9450:67:3;;;10791:21:21;10848:2;10828:18;;;10821:30;10887:34;10867:18;;;10860:62;-1:-1:-1;;;10938:18:21;;;10931:31;10979:19;;9450:67:3;10607:397:21;9450:67:3;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:3;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:3;;11211:2:21;9641:71:3;;;11193:21:21;11250:2;11230:18;;;11223:30;11289:34;11269:18;;;11262:62;-1:-1:-1;;;11340:18:21;;;11333:32;11382:19;;9641:71:3;11009:398:21;9641:71:3;-1:-1:-1;;;;;9746:18:3;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1442:25:21;;;9746:9:3;;:18;9931:37;;1415:18:21;9931:37:3;1296:177:21;9979:48:3;9440:594;9375:659;;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:2::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;734:10:11::0;;655:96;3367:268:13;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3080:203:8;-1:-1:-1;;;;;3200:14:8;;3140:15;3200:14;;;:7;:14;;;;;918::12;;1050:1;1032:19;;;;918:14;3259:17:8;3157:126;3080:203;;;:::o;4768:165:17:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;8536:4:16;8530:11;-1:-1:-1;;;8554:23:16;;8606:4;8597:14;;8590:39;;;;8658:4;8649:14;;8642:34;8712:4;8697:20;;;8336:397;6598:232;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;-1:-1:-1;6814:9:16;6598:232;-1:-1:-1;;;;;6598:232:16:o;1245:173:20:-;1367:44;1394:4;1400:2;1404:6;1367:26;:44::i;1945:106:2:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:2;;12108:2:21;2003:41:2;;;12090:21:21;12147:2;12127:18;;;12120:30;-1:-1:-1;;;12166:18:21;;;12159:50;12226:18;;2003:41:2;11906:344:21;769:204:6;705:4;883:6;861:19;3342:12:3;;;3255:106;861:19:6;:28;;;;:::i;:::-;:37;;853:75;;;;-1:-1:-1;;;853:75:6;;12457:2:21;853:75:6;;;12439:21:21;12496:2;12476:18;;;12469:30;12535:27;12515:18;;;12508:55;12580:18;;853:75:6;12255:349:21;853:75:6;938:28;950:7;959:6;938:11;:28::i;1767:106:2:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:2;;12811:2:21;1828:38:2;;;12793:21:21;12850:2;12830:18;;;12823:30;-1:-1:-1;;;12869:18:21;;;12862:46;12925:18;;1828:38:2;12609:340:21;2059:405:13;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:13;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:13;;;-1:-1:-1;2416:4:13;2407:14;;2400:28;;;;-1:-1:-1;2371:16:13;2059:405::o;5009:1456:16:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:16;;-1:-1:-1;6123:30:16;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;13181:25:21;;;13254:4;13242:17;;13222:18;;;13215:45;;;;13276:18;;;13269:34;;;13319:18;;;13312:34;;;6276:24:16;;13153:19:21;;6276:24:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:16;;-1:-1:-1;;6276:24:16;;;-1:-1:-1;;;;;;;6314:20:16;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:16;;-1:-1:-1;5009:1456:16;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:16;;13691:2:21;788:34:16;;;13673:21:21;13730:2;13710:18;;;13703:30;13769:26;13749:18;;;13742:54;13813:18;;788:34:16;13489:348:21;730:345:16;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:16;;14044:2:21;903:41:16;;;14026:21:21;14083:2;14063:18;;;14056:30;14122:33;14102:18;;;14095:61;14173:18;;903:41:16;13842:355:21;839:236:16;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:16;;14404:2:21;1020:44:16;;;14386:21:21;14443:2;14423:18;;;14416:30;14482:34;14462:18;;;14455:62;-1:-1:-1;;;14533:18:21;;;14526:32;14575:19;;1020:44:16;14202:398:21;1046:234:7;1685:7:2;;;;1217:9:7;1209:64;;;;-1:-1:-1;;;1209:64:7;;14807:2:21;1209:64:7;;;14789:21:21;14846:2;14826:18;;;14819:30;14885:34;14865:18;;;14858:62;-1:-1:-1;;;14936:18:21;;;14929:40;14986:19;;1209:64:7;14605:406:21;8520:535:3;-1:-1:-1;;;;;8603:21:3;;8595:65;;;;-1:-1:-1;;;8595:65:3;;15218:2:21;8595:65:3;;;15200:21:21;15257:2;15237:18;;;15230:30;15296:33;15276:18;;;15269:61;15347:18;;8595:65:3;15016:355:21;8595:65:3;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:3;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1442:25:21;;;8952:37:3;;1415:18:21;8952:37:3;;;;;;;1078:93:20;;:::o;2536:245:13:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:13;;;;;;;;;;;14:423:21;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:21:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:21;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:21:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2182:180::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;-1:-1:-1;2333:23:21;;2182:180;-1:-1:-1;2182:180:21:o;2367:186::-;2426:6;2479:2;2467:9;2458:7;2454:23;2450:32;2447:52;;;2495:1;2492;2485:12;2447:52;2518:29;2537:9;2518:29;:::i;2558:1259::-;2964:3;2959;2955:13;2947:6;2943:26;2932:9;2925:45;2906:4;2989:2;3027:3;3022:2;3011:9;3007:18;3000:31;3054:46;3095:3;3084:9;3080:19;3072:6;3054:46;:::i;:::-;3148:9;3140:6;3136:22;3131:2;3120:9;3116:18;3109:50;3182:33;3208:6;3200;3182:33;:::i;:::-;3246:2;3231:18;;3224:34;;;-1:-1:-1;;;;;3295:32:21;;3289:3;3274:19;;3267:61;3315:3;3344:19;;3337:35;;;3409:22;;;3403:3;3388:19;;3381:51;3481:13;;3503:22;;;3579:15;;;;-1:-1:-1;3541:15:21;;;;-1:-1:-1;3622:169:21;3636:6;3633:1;3630:13;3622:169;;;3697:13;;3685:26;;3766:15;;;;3731:12;;;;3658:1;3651:9;3622:169;;;-1:-1:-1;3808:3:21;;2558:1259;-1:-1:-1;;;;;;;;;;;;2558:1259:21:o;4030:693::-;4141:6;4149;4157;4165;4173;4181;4189;4242:3;4230:9;4221:7;4217:23;4213:33;4210:53;;;4259:1;4256;4249:12;4210:53;4282:29;4301:9;4282:29;:::i;:::-;4272:39;;4330:38;4364:2;4353:9;4349:18;4330:38;:::i;:::-;4320:48;;4415:2;4404:9;4400:18;4387:32;4377:42;;4466:2;4455:9;4451:18;4438:32;4428:42;;4520:3;4509:9;4505:19;4492:33;4565:4;4558:5;4554:16;4547:5;4544:27;4534:55;;4585:1;4582;4575:12;4534:55;4030:693;;;;-1:-1:-1;4030:693:21;;;;4608:5;4660:3;4645:19;;4632:33;;-1:-1:-1;4712:3:21;4697:19;;;4684:33;;4030:693;-1:-1:-1;;4030:693:21:o;4728:260::-;4796:6;4804;4857:2;4845:9;4836:7;4832:23;4828:32;4825:52;;;4873:1;4870;4863:12;4825:52;4896:29;4915:9;4896:29;:::i;:::-;4886:39;;4944:38;4978:2;4967:9;4963:18;4944:38;:::i;:::-;4934:48;;4728:260;;;;;:::o;4993:380::-;5072:1;5068:12;;;;5115;;;5136:61;;5190:4;5182:6;5178:17;5168:27;;5136:61;5243:2;5235:6;5232:14;5212:18;5209:38;5206:161;;5289:10;5284:3;5280:20;5277:1;5270:31;5324:4;5321:1;5314:15;5352:4;5349:1;5342:15;5378:222;5443:9;;;5464:10;;;5461:133;;;5516:10;5511:3;5507:20;5504:1;5497:31;5551:4;5548:1;5541:15;5579:4;5576:1;5569:15;13357:127;13418:10;13413:3;13409:20;13406:1;13399:31;13449:4;13446:1;13439:15;13473:4;13470:1;13463:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","cap()":"355274ea","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gCOTI.sol\":\"gCOTI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x3fe04ed1daf0f12454333fde982a25b103860d8a010dd5d8479b83ebf1dfb788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8322152771e94c9e28a3bd9e7c9d5dd4fdd00ae214f95915962a6638d8dfc7d6\",\"dweb:/ipfs/QmaXJvF3UjRHacx3nPgt94DwAuXCkEoz6fS7MLr2jbuJyW\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01357281d378f80db958b3d24941c10a58e1af33efad32e6dda52714df6a4e1d\",\"dweb:/ipfs/QmRazaWp8TEKjsmGqYFG4ZYJPibqSwVpH7P93b55uJuPpc\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/gCOTI.sol\":{\"keccak256\":\"0x64379233d095f03232c317c8c4210c2a89cfb64e4de5a9056bd744ec5f575c29\",\"urls\":[\"bzz-raw://116e565c6ff21b63a2ac7cb9b7d547e86dbb57ee012599d11c210fdfbf8ead48\",\"dweb:/ipfs/QmeyqrNryWGquzn8PcFPMYCybJdwxXwNbQ7BVfHYiyQrsC\"]}},\"version\":1}"}}}}}